{"ast":null,"code":"import _objectSpread from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminProduct/AdminProduct.jsx\";\n// Stylsheet\nimport React, { Fragment, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AdminProduct.scss\";\nimport WebService from \"../../../services/WebService\";\nimport AuthService from \"../../../services/AuthService\";\nimport HelperTool, { showAlert } from \"../../../helpers/lib\";\nimport { DEFAULT_FORMDATA, ACTIVE_TYPE } from \"../../../config/constants\";\nimport Modal from \"../../common/Modal\";\nimport AdminAddProduct from \"./AdminAddProduct\";\nimport Paginator from \"../../common/Paginator\";\nimport Message from \"../../common/FormMessage\";\nvar INTIAL_STATE = {\n  showLoadingBar: false,\n  message: null,\n  brands: [],\n  industries: [],\n  selectedIndustryId: 0,\n  branches: [],\n  selectedBranchId: 0,\n  categories: []\n};\nvar INTERNAL_CONFIG = {\n  HEADING_NAME: \"Product\",\n  SEARCH_DELAY_DURATION: 300,\n  PAGE_SIZE_ARR: [10, 25, 50, 100],\n  MAIN_HEADERS: [\"ID\", \"Product Name\", \"Price\", \"In Stock\", \"Brand\", \"Category\", \"Active\", \"Actions\"],\n  DETAIL_HEADERS: [\"Images\", \"Description\"]\n};\n\nvar AdminProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminProduct, _Component);\n\n  function AdminProduct(props) {\n    var _this;\n\n    _classCallCheck(this, AdminProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminProduct).call(this, props));\n    _this.productToBlock = null;\n    _this.originalProductInfo = {};\n    _this.searchInterval = null;\n    _this._isMounted = false;\n\n    _this.componentWillMount = function () {\n      var params = new URLSearchParams(_this.props.history.location.search);\n      var pageIndex = Number(params.get(\"page\"));\n      var pageSize = Number(params.get(\"size\"));\n\n      if (pageIndex && pageSize && INTERNAL_CONFIG.PAGE_SIZE_ARR.indexOf(pageSize) !== -1) {\n        _this.handleFilterChange({\n          currentPage: pageIndex,\n          pageSize: pageSize\n        });\n      } else {\n        var _this$props = _this.props,\n            currentPage = _this$props.currentPage,\n            query = _this$props.query;\n\n        _this.fetchProducts(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0], query);\n\n        _this.updateURLParams(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0]);\n      }\n\n      _this.fetchAllBrands();\n\n      _this.fetchAllIndustries();\n\n      _this.fetchAllBranches();\n\n      _this.fetchAllCategories();\n    };\n\n    _this.componentDidMount = function () {\n      _this._isMounted = true;\n    };\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.updateURLParams = function (currentPage, pageSize) {\n      _this.props.history.push({\n        search: \"?size=\".concat(pageSize || _this.props.pageSize, \"&page=\").concat(currentPage || _this.props.currentPage)\n      });\n    };\n\n    _this.fetchProducts = function (currentPage, pageSize) {\n      var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      _this.setState({\n        showLoadingBar: true\n      });\n\n      WebService.adminGetAllProducts(AuthService.getTokenUnsafe(), pageSize, (currentPage - 1) * pageSize, query).then(function (res) {\n        var result = JSON.parse(res);\n\n        if (result.status === ACTIVE_TYPE.TRUE && result.products) {\n          _this.props.fetchProducts(result.products);\n\n          _this.handleFilterChange({\n            totalItems: result.totalItems\n          });\n\n          if (_this._isMounted) {\n            _this.setState({\n              showLoadingBar: false\n            });\n          }\n        } else {\n          showAlert(result.message, \"error\");\n        }\n      }).catch(function (err) {\n        console.log(\"Have error when get admin products.\", err);\n      });\n    };\n\n    _this.fetchAllBrands = function () {\n      WebService.adminGetAllBrands(AuthService.getTokenUnsafe(), 10000, 0, {}).then(function (res) {\n        var result = JSON.parse(res);\n\n        if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n          if (_this._isMounted) {\n            _this.setState({\n              brands: result.brands\n            });\n          }\n        }\n      }).catch(function (err) {\n        console.log(\"error when get brands.\");\n      });\n    };\n\n    _this.fetchAllIndustries = function () {\n      WebService.adminGetAllIndustries(AuthService.getTokenUnsafe(), 10000, 0, {}).then(function (res) {\n        var result = JSON.parse(res);\n\n        if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n          if (_this._isMounted) {\n            _this.setState({\n              industries: result.industries\n            });\n          }\n        }\n      });\n    };\n\n    _this.fetchAllBranches = function () {\n      WebService.adminGetAllBranches(AuthService.getTokenUnsafe(), 10000, 0, {}).then(function (res) {\n        var result = JSON.parse(res);\n\n        if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n          _this.orignalBranches = result.branches;\n\n          _this.handleIndustryChange(_this.props.formData.industry_id);\n        }\n      });\n    };\n\n    _this.fetchAllCategories = function () {\n      WebService.adminGetAllCategories(AuthService.getTokenUnsafe(), 10000, 0, {}).then(function (res) {\n        var result = JSON.parse(res);\n\n        if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n          _this.originalCategories = result.categories;\n\n          _this.handleBranchChange(_this.props.formData.branch_id);\n        }\n      });\n    };\n\n    _this.prepareFormData = function (data) {\n      _this.setState({\n        message: null\n      });\n\n      for (var attr in data) {\n        if (!(attr in DEFAULT_FORMDATA.AdminAddProduct) && data[attr]) {\n          console.log(data[attr]);\n          data[attr + \"Id\"] = data[attr].id;\n          delete data[attr];\n        } else if (data[attr] === null) {\n          data[attr] = \"\";\n        }\n      }\n\n      _this.originalProductInfo = data;\n\n      _this.props.setFormData(data);\n    };\n\n    _this.clearFormData = function () {\n      _this.setState({\n        message: null\n      });\n\n      _this.props.setFormData(DEFAULT_FORMDATA.AdminAddProduct);\n    };\n\n    _this.handleIndustryChange = function (newIndustryId) {\n      var filteredBranches = _this.orignalBranches.filter(function (branch) {\n        return branch.industry_id === parseInt(newIndustryId);\n      });\n\n      _this.setState({\n        branches: filteredBranches\n      });\n\n      _this.handleBranchChange(filteredBranches[0] && filteredBranches[0].id);\n    };\n\n    _this.handleBranchChange = function (newBranchId) {\n      if (newBranchId && _this.originalCategories) {\n        _this.setState({\n          categories: _this.originalCategories.filter(function (cat) {\n            return cat.branch_id === parseInt(newBranchId);\n          })\n        });\n      } else {\n        _this.setState({\n          categories: []\n        });\n      }\n    };\n\n    _this.handleFilterChange = function (_ref) {\n      var currentPage = _ref.currentPage,\n          pageSize = _ref.pageSize,\n          totalItems = _ref.totalItems;\n      var payloadObj = {};\n\n      if (currentPage) {\n        payloadObj.currentPage = Number(currentPage);\n      }\n\n      if (pageSize) {\n        payloadObj.pageSize = Number(pageSize);\n      }\n\n      if (totalItems) {\n        payloadObj.totalItems = Number(totalItems);\n      }\n\n      _this.props.changePageInfo(payloadObj);\n\n      if (pageSize || currentPage) {\n        _this.updateURLParams(payloadObj.currentPage, payloadObj.pageSize);\n\n        _this.fetchProducts(payloadObj.currentPage || _this.props.currentPage, payloadObj.pageSize || _this.props.pageSize, _this.props.query);\n      }\n    };\n\n    _this.handleChangeKeyword = function (e) {\n      _this.props.updateFilter({\n        keyword: e.target.value\n      });\n\n      clearTimeout(_this.searchInterval);\n      _this.searchInterval = setTimeout(function () {\n        _this.handleSearch();\n      }, INTERNAL_CONFIG.SEARCH_DELAY_DURATION);\n    };\n\n    _this.handleSearch = function () {\n      _this.fetchProducts(_this.props.currentPage, _this.props.pageSize, _this.props.query);\n    };\n\n    _this.handleUpdateProduct = function () {\n      var _this$props2 = _this.props,\n          formData = _this$props2.formData,\n          productName = _this$props2.productName,\n          currentPage = _this$props2.currentPage,\n          pageSize = _this$props2.pageSize,\n          query = _this$props2.query;\n      return new Promise(function (resolve, reject) {\n        var newInfo = {};\n\n        for (var attr in formData) {\n          if (attr !== \"password\" && formData[attr] !== _this.originalProductInfo[attr]) {\n            newInfo[attr] = formData[attr];\n          }\n        }\n\n        if (Object.keys(newInfo).length > 0) {\n          _this.setState({\n            message: React.createElement(Message, {\n              content: \"Updating product...\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 279\n              },\n              __self: this\n            })\n          });\n\n          WebService.adminUpdateProduct(AuthService.getTokenUnsafe(), formData.id, newInfo).then(function (res) {\n            var resObj = JSON.parse(res);\n            console.log(resObj);\n\n            if (resObj.status === ACTIVE_TYPE.TRUE) {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"green\",\n                  content: \"Update product successfully\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 287\n                  },\n                  __self: this\n                })\n              });\n\n              resolve(true);\n\n              if (\"permission\" in newInfo && formData.product_name === productName) {\n                window.location.reload();\n              } else {\n                _this.fetchProducts(currentPage, pageSize, query);\n              }\n            } else {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"red\",\n                  content: resObj.message,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 298\n                  },\n                  __self: this\n                })\n              });\n\n              console.log(\"UPDATE FAILED\", resObj);\n              resolve(false);\n            }\n          });\n        } else {\n          resolve(false);\n\n          _this.setState({\n            message: React.createElement(Message, {\n              content: \"Nothing to update..\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 307\n              },\n              __self: this\n            })\n          });\n        }\n      });\n    };\n\n    _this.handleAddProduct = function () {\n      var _this$props3 = _this.props,\n          formData = _this$props3.formData,\n          currentPage = _this$props3.currentPage,\n          pageSize = _this$props3.pageSize,\n          query = _this$props3.query;\n      return new Promise(function (resolve, reject) {\n        _this.setState({\n          message: React.createElement(Message, {\n            content: \"Creating product...\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          })\n        });\n\n        if (!formData.product_name) {\n          _this.setState({\n            message: React.createElement(Message, {\n              color: \"red\",\n              content: \"Product Name is empty\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 323\n              },\n              __self: this\n            })\n          });\n        } else if (!formData.price) {\n          _this.setState({\n            message: React.createElement(Message, {\n              color: \"red\",\n              content: \"Price is invalid\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 327\n              },\n              __self: this\n            })\n          });\n        } else if (!formData.amount) {\n          _this.setState({\n            message: React.createElement(Message, {\n              color: \"red\",\n              content: \"Amount is invalid\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 331\n              },\n              __self: this\n            })\n          });\n        } else if (!formData.images) {\n          _this.setState({\n            message: React.createElement(Message, {\n              color: \"red\",\n              content: \"Images is empty\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 335\n              },\n              __self: this\n            })\n          });\n        } else {\n          WebService.adminInsertProduct(AuthService.getTokenUnsafe(), formData).then(function (res) {\n            var resObj = JSON.parse(res);\n\n            if (resObj.status === ACTIVE_TYPE.TRUE) {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"green\",\n                  content: \"Create product successfully\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 342\n                  },\n                  __self: this\n                })\n              });\n\n              resolve(true);\n\n              _this.fetchProducts(currentPage, pageSize, query);\n            } else {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"red\",\n                  content: resObj.message,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 349\n                  },\n                  __self: this\n                })\n              });\n\n              console.log(\"ADD FAILED\", resObj);\n              resolve(false);\n            }\n          });\n        }\n      });\n    };\n\n    _this.handleDeleteProduct = function () {\n      return new Promise(function (resolve) {\n        if (_this.productToBlock && _this.productToBlock.id) {\n          WebService.adminUpdateProduct(AuthService.getTokenUnsafe(), _this.productToBlock.id, {\n            active: _this.productToBlock.active === ACTIVE_TYPE.TRUE ? ACTIVE_TYPE.FALSE : ACTIVE_TYPE.TRUE\n          }).then(function (res) {\n            var resObj = JSON.parse(res);\n\n            if (resObj.status === ACTIVE_TYPE.TRUE) {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"green\",\n                  content: (_this.productToBlock.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\") + \"product successfully\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 369\n                  },\n                  __self: this\n                })\n              });\n\n              resolve(true);\n\n              _this.fetchProducts(_this.props.currentPage, _this.props.pageSize, _this.props.query);\n            } else {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"red\",\n                  content: resObj.message,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 382\n                  },\n                  __self: this\n                })\n              });\n\n              console.log(\"UPDATE BLOCK STATUS FAILED\", resObj);\n              resolve(false);\n            }\n          });\n        }\n      });\n    };\n\n    _this.generateTableRows = function (products) {\n      var r = [];\n      if (!products || products.length === 0) return;\n      products.forEach(function (product, id) {\n        var productImages;\n\n        try {\n          productImages = JSON.parse(product.images);\n        } catch (e) {\n          productImages = [];\n        }\n\n        var randomStr = HelperTool.generateRandomString();\n        r.push(React.createElement(Fragment, {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }, product.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }, product.product_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }, HelperTool.withCommas(product.price), \" \\u20AB\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }, product.amount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, product.brand.brand_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, \"\".concat(product.category.category_name, \", \").concat(product.branch.branch_name, \", \").concat(product.industry.industry_name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, product.active === ACTIVE_TYPE.TRUE ? React.createElement(\"i\", {\n          className: \"fa fa-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }) : React.createElement(\"i\", {\n          className: \"fa fa-times-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btn-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-info btn-sm\",\n          type: \"button\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": \"#detailbox\" + randomStr,\n          \"aria-expanded\": \"false\",\n          \"aria-controls\": \"collapseExample\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-info-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        }), \" Detail\"), \"\\xA0\\xA0\", React.createElement(\"button\", {\n          className: \"btn btn-warning btn-sm\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#update-product-modal\",\n          onClick: function onClick() {\n            return _this.prepareFormData(_objectSpread({}, product));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-pencil-square-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }), \" Edit\"), \"\\xA0\\xA0\", React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#delete-product-modal\",\n          onClick: function onClick() {\n            _this.productToBlock = product;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-ban\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445\n          },\n          __self: this\n        }), \" \", product.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\")))), React.createElement(\"tr\", {\n          className: \"collapse no-hover\",\n          id: \"detailbox\" + randomStr,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: INTERNAL_CONFIG.MAIN_HEADERS.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card card-body\",\n          style: {\n            border: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table table-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456\n          },\n          __self: this\n        }, HelperTool.generateTableHeaders(INTERNAL_CONFIG.DETAIL_HEADERS)), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, productImages.map(function (imgUrl, idx) {\n          return React.createElement(\"img\", {\n            key: idx,\n            src: imgUrl,\n            className: \"m-1\",\n            alt: \"NONE\",\n            style: {\n              width: 54\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461\n            },\n            __self: this\n          });\n        }), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467\n          },\n          __self: this\n        }, product.description)))))))));\n      });\n      return r;\n    };\n\n    _this.render = function () {\n      var _this$props4 = _this.props,\n          products = _this$props4.products,\n          currentPage = _this$props4.currentPage,\n          pageSize = _this$props4.pageSize,\n          query = _this$props4.query,\n          totalItems = _this$props4.totalItems;\n      var _this$state = _this.state,\n          branches = _this$state.branches,\n          brands = _this$state.brands,\n          industries = _this$state.industries,\n          categories = _this$state.categories,\n          message = _this$state.message,\n          showLoadingBar = _this$state.showLoadingBar;\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalId: \"add-product-modal\",\n        modalTitle: \"Create new product\",\n        modalBody: React.createElement(AdminAddProduct, {\n          brands: brands,\n          industries: industries,\n          branches: branches,\n          categories: categories,\n          changeIndustryHandler: _this.handleIndustryChange,\n          changeBranchHandler: _this.handleBranchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490\n          },\n          __self: this\n        }),\n        modalHandleSubmit: _this.handleAddProduct,\n        modalSubmitTitle: \"Add\",\n        modalSubmitClassName: \"btn-success\",\n        modalMessage: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        modalId: \"update-product-modal\",\n        modalTitle: \"Update product info\",\n        modalBody: React.createElement(AdminAddProduct, {\n          editMode: true,\n          brands: brands,\n          industries: industries,\n          branches: branches,\n          categories: categories,\n          changeIndustryHandler: _this.handleIndustryChange,\n          changeBranchHandler: _this.handleBranchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }),\n        modalHandleSubmit: _this.handleUpdateProduct,\n        modalSubmitTitle: \"Update\",\n        modalSubmitClassName: \"btn-warning\",\n        modalMessage: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        modalId: \"delete-product-modal\",\n        modalTitle: \"Update product info\",\n        modalBody: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, \"Are you sure to Block/Unblock this product?\"),\n        modalHandleSubmit: _this.handleDeleteProduct,\n        modalSubmitTitle: \"Block/Unblock\",\n        modalSubmitClassName: \"btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, INTERNAL_CONFIG.HEADING_NAME), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header d-flex justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-bar form-control col-md-4 col-sm-6\",\n        type: \"text\",\n        placeholder: \"Search for something...\",\n        value: query.keyword,\n        onChange: function onChange(e) {\n          return _this.handleChangeKeyword(e);\n        },\n        onKeyDown: function onKeyDown(e) {\n          return e.keyCode === 13 && _this.handleSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controllers d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control input-sm\",\n        value: pageSize,\n        onChange: function onChange(e) {\n          _this.handleFilterChange({\n            pageSize: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        value: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \"25\"), React.createElement(\"option\", {\n        value: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, \"50\"), React.createElement(\"option\", {\n        value: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, \"100\"))), React.createElement(\"div\", {\n        className: \"control-buttons btn-group justify-content-space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#add-product-modal\",\n        onClick: function onClick() {\n          _this.clearFormData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-circle mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }), \"Add product\"))), React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, \"Display \", pageSize * currentPage > totalItems ? totalItems : pageSize * currentPage, \" / \", totalItems), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, message)), React.createElement(\"div\", {\n        className: \"table-container\",\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress\",\n        style: {\n          width: \"100%\",\n          height: 5,\n          position: \"absolute\"\n        },\n        hidden: showLoadingBar ? \"\" : \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n        role: \"progressbar\",\n        \"aria-valuenow\": \"75\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table-container table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-hover table-sm table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, HelperTool.generateTableHeaders(INTERNAL_CONFIG.MAIN_HEADERS)), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, _this.generateTableRows(products))), React.createElement(Paginator, {\n        handlePageChange: function handlePageChange(currentPage) {\n          _this.handleFilterChange({\n            currentPage: currentPage\n          });\n        },\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalItems: totalItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }))))));\n    };\n\n    _this.orignalBranches = [];\n    _this.originalCategories = [];\n    _this.state = INTIAL_STATE;\n\n    _this.props.changePageInfo({\n      currentPage: 1,\n      pageSize: INTERNAL_CONFIG.PAGE_SIZE_ARR[0]\n    });\n\n    return _this;\n  }\n\n  return AdminProduct;\n}(Component);\n\nAdminProduct.propTypes = {\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  fetchProducts: PropTypes.func,\n  changePageInfo: PropTypes.func,\n  query: PropTypes.shape({\n    keyword: PropTypes.string\n  }),\n  formData: PropTypes.object\n};\nexport default AdminProduct;","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminProduct/AdminProduct.jsx"],"names":["React","Fragment","Component","PropTypes","WebService","AuthService","HelperTool","showAlert","DEFAULT_FORMDATA","ACTIVE_TYPE","Modal","AdminAddProduct","Paginator","Message","INTIAL_STATE","showLoadingBar","message","brands","industries","selectedIndustryId","branches","selectedBranchId","categories","INTERNAL_CONFIG","HEADING_NAME","SEARCH_DELAY_DURATION","PAGE_SIZE_ARR","MAIN_HEADERS","DETAIL_HEADERS","AdminProduct","props","productToBlock","originalProductInfo","searchInterval","_isMounted","componentWillMount","params","URLSearchParams","history","location","search","pageIndex","Number","get","pageSize","indexOf","handleFilterChange","currentPage","query","fetchProducts","updateURLParams","fetchAllBrands","fetchAllIndustries","fetchAllBranches","fetchAllCategories","componentDidMount","componentWillUnmount","push","setState","adminGetAllProducts","getTokenUnsafe","then","res","result","JSON","parse","status","TRUE","products","totalItems","catch","err","console","log","adminGetAllBrands","adminGetAllIndustries","adminGetAllBranches","orignalBranches","handleIndustryChange","formData","industry_id","adminGetAllCategories","originalCategories","handleBranchChange","branch_id","prepareFormData","data","attr","id","setFormData","clearFormData","newIndustryId","filteredBranches","filter","branch","parseInt","newBranchId","cat","payloadObj","changePageInfo","handleChangeKeyword","e","updateFilter","keyword","target","value","clearTimeout","setTimeout","handleSearch","handleUpdateProduct","productName","Promise","resolve","reject","newInfo","Object","keys","length","adminUpdateProduct","resObj","product_name","window","reload","handleAddProduct","price","amount","images","adminInsertProduct","handleDeleteProduct","active","FALSE","generateTableRows","r","forEach","product","productImages","randomStr","generateRandomString","withCommas","brand","brand_name","category","category_name","branch_name","industry","industry_name","border","generateTableHeaders","map","imgUrl","idx","width","description","render","state","keyCode","position","height","propTypes","number","func","shape","string","object"],"mappings":"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","sourcesContent":["// Stylsheet\nimport React, { Fragment, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AdminProduct.scss\";\nimport WebService from \"../../../services/WebService\";\nimport AuthService from \"../../../services/AuthService\";\nimport HelperTool, { showAlert } from \"../../../helpers/lib\";\nimport { DEFAULT_FORMDATA, ACTIVE_TYPE } from \"../../../config/constants\";\nimport Modal from \"../../common/Modal\";\nimport AdminAddProduct from \"./AdminAddProduct\";\nimport Paginator from \"../../common/Paginator\";\nimport Message from \"../../common/FormMessage\";\n\nconst INTIAL_STATE = {\n    showLoadingBar: false,\n    message: null,\n    brands: [],\n    industries: [],\n    selectedIndustryId: 0,\n    branches: [],\n    selectedBranchId: 0,\n    categories: []\n};\n\nconst INTERNAL_CONFIG = {\n    HEADING_NAME: \"Product\",\n    SEARCH_DELAY_DURATION: 300,\n    PAGE_SIZE_ARR: [10, 25, 50, 100],\n    MAIN_HEADERS: [\"ID\", \"Product Name\", \"Price\", \"In Stock\", \"Brand\", \"Category\", \"Active\", \"Actions\"],\n    DETAIL_HEADERS: [\"Images\", \"Description\"]\n};\ntype State = {\n    brands: Array<any>,\n    industries: Array<any>,\n    branches: Array<any>,\n    categories: Array<any>,\n    showLoadingBar: boolean,\n    message: Object,\n    selectedIndustryId: number,\n    selectedBranchId: number\n};\n\nclass AdminProduct extends Component<State> {\n    static propTypes = {\n        currentPage: PropTypes.number,\n        pageSize: PropTypes.number,\n        totalItems: PropTypes.number,\n        fetchProducts: PropTypes.func,\n        changePageInfo: PropTypes.func,\n        query: PropTypes.shape({\n            keyword: PropTypes.string\n        }),\n        formData: PropTypes.object\n    };\n\n    productToBlock = null;\n    originalProductInfo = {};\n    searchInterval = null;\n    _isMounted = false;\n\n    constructor(props: any) {\n        super(props);\n        this.orignalBranches = [];\n        this.originalCategories = [];\n        this.state = INTIAL_STATE;\n        this.props.changePageInfo({\n            currentPage: 1,\n            pageSize: INTERNAL_CONFIG.PAGE_SIZE_ARR[0]\n        });\n    }\n\n    componentWillMount = () => {\n        const params = new URLSearchParams(this.props.history.location.search);\n        const pageIndex = Number(params.get(\"page\"));\n        const pageSize = Number(params.get(\"size\"));\n        if (pageIndex && pageSize && INTERNAL_CONFIG.PAGE_SIZE_ARR.indexOf(pageSize) !== -1) {\n            this.handleFilterChange({\n                currentPage: pageIndex,\n                pageSize: pageSize\n            });\n        } else {\n            const { currentPage, query } = this.props;\n            this.fetchProducts(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0], query);\n            this.updateURLParams(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0]);\n        }\n\n        this.fetchAllBrands();\n        this.fetchAllIndustries();\n        this.fetchAllBranches();\n        this.fetchAllCategories();\n    };\n\n    componentDidMount = () => {\n        this._isMounted = true;\n    };\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    };\n\n    updateURLParams = (currentPage, pageSize) => {\n        this.props.history.push({\n            search: `?size=${pageSize || this.props.pageSize}&page=${currentPage || this.props.currentPage}`\n        });\n    };\n\n    fetchProducts = (currentPage, pageSize, query = {}) => {\n        this.setState({\n            showLoadingBar: true\n        });\n        WebService.adminGetAllProducts(AuthService.getTokenUnsafe(), pageSize, (currentPage - 1) * pageSize, query)\n            .then(res => {\n                const result = JSON.parse(res);\n                if (result.status === ACTIVE_TYPE.TRUE && result.products) {\n                    this.props.fetchProducts(result.products);\n                    this.handleFilterChange({\n                        totalItems: result.totalItems\n                    });\n\n                    if (this._isMounted) {\n                        this.setState({\n                            showLoadingBar: false\n                        });\n                    }\n                } else {\n                    showAlert(result.message, \"error\");\n                }\n            })\n            .catch(err => {\n                console.log(\"Have error when get admin products.\", err);\n            });\n    };\n\n    fetchAllBrands = () => {\n        WebService.adminGetAllBrands(AuthService.getTokenUnsafe(), 10000, 0, {})\n            .then(res => {\n                const result = JSON.parse(res);\n                if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n                    if (this._isMounted) {\n                        this.setState({\n                            brands: result.brands\n                        });\n                    }\n                }\n            })\n            .catch(err => {\n                console.log(\"error when get brands.\");\n            });\n    };\n\n    fetchAllIndustries = () => {\n        WebService.adminGetAllIndustries(AuthService.getTokenUnsafe(), 10000, 0, {}).then(res => {\n            const result = JSON.parse(res);\n            if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n                if (this._isMounted) {\n                    this.setState({\n                        industries: result.industries\n                    });\n                }\n            }\n        });\n    };\n\n    fetchAllBranches = () => {\n        WebService.adminGetAllBranches(AuthService.getTokenUnsafe(), 10000, 0, {}).then(res => {\n            const result = JSON.parse(res);\n            if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n                this.orignalBranches = result.branches;\n                this.handleIndustryChange(this.props.formData.industry_id);\n            }\n        });\n    };\n\n    fetchAllCategories = () => {\n        WebService.adminGetAllCategories(AuthService.getTokenUnsafe(), 10000, 0, {}).then(res => {\n            const result = JSON.parse(res);\n            if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n                this.originalCategories = result.categories;\n                this.handleBranchChange(this.props.formData.branch_id);\n            }\n        });\n    };\n\n    prepareFormData = data => {\n        this.setState({\n            message: null\n        });\n        for (let attr in data) {\n            if (!(attr in DEFAULT_FORMDATA.AdminAddProduct) && data[attr]) {\n                console.log(data[attr]);\n                data[attr + \"Id\"] = data[attr].id;\n                delete data[attr];\n            } else if (data[attr] === null) {\n                data[attr] = \"\";\n            }\n        }\n        this.originalProductInfo = data;\n        this.props.setFormData(data);\n    };\n\n    clearFormData = () => {\n        this.setState({\n            message: null\n        });\n\n        this.props.setFormData(DEFAULT_FORMDATA.AdminAddProduct);\n    };\n\n    handleIndustryChange = newIndustryId => {\n        const filteredBranches = this.orignalBranches.filter(branch => branch.industry_id === parseInt(newIndustryId));\n        this.setState({\n            branches: filteredBranches\n        });\n        this.handleBranchChange(filteredBranches[0] && filteredBranches[0].id);\n    };\n\n    handleBranchChange = newBranchId => {\n        if (newBranchId && this.originalCategories) {\n            this.setState({\n                categories: this.originalCategories.filter(cat => cat.branch_id === parseInt(newBranchId))\n            });\n        } else {\n            this.setState({\n                categories: []\n            });\n        }\n    };\n\n    handleFilterChange = ({ currentPage, pageSize, totalItems }) => {\n        let payloadObj = {};\n\n        if (currentPage) {\n            payloadObj.currentPage = Number(currentPage);\n        }\n\n        if (pageSize) {\n            payloadObj.pageSize = Number(pageSize);\n        }\n\n        if (totalItems) {\n            payloadObj.totalItems = Number(totalItems);\n        }\n\n        this.props.changePageInfo(payloadObj);\n\n        if (pageSize || currentPage) {\n            this.updateURLParams(payloadObj.currentPage, payloadObj.pageSize);\n            this.fetchProducts(\n                payloadObj.currentPage || this.props.currentPage,\n                payloadObj.pageSize || this.props.pageSize,\n                this.props.query\n            );\n        }\n    };\n\n    handleChangeKeyword = e => {\n        this.props.updateFilter({ keyword: e.target.value });\n        clearTimeout(this.searchInterval);\n        this.searchInterval = setTimeout(() => {\n            this.handleSearch();\n        }, INTERNAL_CONFIG.SEARCH_DELAY_DURATION);\n    };\n\n    handleSearch = () => {\n        this.fetchProducts(this.props.currentPage, this.props.pageSize, this.props.query);\n    };\n\n    handleUpdateProduct = () => {\n        const { formData, productName, currentPage, pageSize, query } = this.props;\n        return new Promise((resolve, reject) => {\n            const newInfo = {};\n            for (let attr in formData) {\n                if (attr !== \"password\" && formData[attr] !== this.originalProductInfo[attr]) {\n                    newInfo[attr] = formData[attr];\n                }\n            }\n            if (Object.keys(newInfo).length > 0) {\n                this.setState({\n                    message: <Message content=\"Updating product...\" />\n                });\n\n                WebService.adminUpdateProduct(AuthService.getTokenUnsafe(), formData.id, newInfo).then(res => {\n                    const resObj = JSON.parse(res);\n                    console.log(resObj);\n                    if (resObj.status === ACTIVE_TYPE.TRUE) {\n                        this.setState({\n                            message: <Message color=\"green\" content=\"Update product successfully\" />\n                        });\n\n                        resolve(true);\n                        if (\"permission\" in newInfo && formData.product_name === productName) {\n                            window.location.reload();\n                        } else {\n                            this.fetchProducts(currentPage, pageSize, query);\n                        }\n                    } else {\n                        this.setState({\n                            message: <Message color=\"red\" content={resObj.message} />\n                        });\n                        console.log(\"UPDATE FAILED\", resObj);\n                        resolve(false);\n                    }\n                });\n            } else {\n                resolve(false);\n                this.setState({\n                    message: <Message content=\"Nothing to update..\" />\n                });\n            }\n        });\n    };\n\n    handleAddProduct = () => {\n        const { formData, currentPage, pageSize, query } = this.props;\n\n        return new Promise((resolve, reject) => {\n            this.setState({\n                message: <Message content=\"Creating product...\" />\n            });\n\n            if (!formData.product_name) {\n                this.setState({\n                    message: <Message color=\"red\" content=\"Product Name is empty\" />\n                });\n            } else if (!formData.price) {\n                this.setState({\n                    message: <Message color=\"red\" content=\"Price is invalid\" />\n                });\n            } else if (!formData.amount) {\n                this.setState({\n                    message: <Message color=\"red\" content=\"Amount is invalid\" />\n                });\n            } else if (!formData.images) {\n                this.setState({\n                    message: <Message color=\"red\" content=\"Images is empty\" />\n                });\n            } else {\n                WebService.adminInsertProduct(AuthService.getTokenUnsafe(), formData).then(res => {\n                    const resObj = JSON.parse(res);\n                    if (resObj.status === ACTIVE_TYPE.TRUE) {\n                        this.setState({\n                            message: <Message color=\"green\" content=\"Create product successfully\" />\n                        });\n\n                        resolve(true);\n                        this.fetchProducts(currentPage, pageSize, query);\n                    } else {\n                        this.setState({\n                            message: <Message color=\"red\" content={resObj.message} />\n                        });\n                        console.log(\"ADD FAILED\", resObj);\n                        resolve(false);\n                    }\n                });\n            }\n        });\n    };\n\n    handleDeleteProduct = () => {\n        return new Promise(resolve => {\n            if (this.productToBlock && this.productToBlock.id) {\n                WebService.adminUpdateProduct(AuthService.getTokenUnsafe(), this.productToBlock.id, {\n                    active: this.productToBlock.active === ACTIVE_TYPE.TRUE ? ACTIVE_TYPE.FALSE : ACTIVE_TYPE.TRUE\n                }).then(res => {\n                    const resObj = JSON.parse(res);\n                    if (resObj.status === ACTIVE_TYPE.TRUE) {\n                        this.setState({\n                            message: (\n                                <Message\n                                    color=\"green\"\n                                    content={\n                                        (this.productToBlock.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\") + \"product successfully\"\n                                    }\n                                />\n                            )\n                        });\n\n                        resolve(true);\n                        this.fetchProducts(this.props.currentPage, this.props.pageSize, this.props.query);\n                    } else {\n                        this.setState({\n                            message: <Message color=\"red\" content={resObj.message} />\n                        });\n                        console.log(\"UPDATE BLOCK STATUS FAILED\", resObj);\n                        resolve(false);\n                    }\n                });\n            }\n        });\n    };\n\n    generateTableRows = products => {\n        let r = [];\n        if (!products || products.length === 0) return;\n        products.forEach((product, id) => {\n            let productImages;\n            try {\n                productImages = JSON.parse(product.images);\n            } catch (e) {\n                productImages = [];\n            }\n            let randomStr = HelperTool.generateRandomString();\n            r.push(\n                <Fragment key={id}>\n                    <tr>\n                        <td>{product.id}</td>\n                        <td>{product.product_name}</td>\n                        <td>{HelperTool.withCommas(product.price)} ₫</td>\n                        <td>{product.amount}</td>\n                        <td>{product.brand.brand_name}</td>\n                        <td>{`${product.category.category_name}, ${product.branch.branch_name}, ${product.industry.industry_name}`}</td>\n                        <td>\n                            {product.active === ACTIVE_TYPE.TRUE ? <i className=\"fa fa-check\" /> : <i className=\"fa fa-times-circle\" />}\n                        </td>\n                        <td>\n                            <div className=\"btn-group\">\n                                <button\n                                    className=\"btn btn-info btn-sm\"\n                                    type=\"button\"\n                                    data-toggle=\"collapse\"\n                                    data-target={\"#detailbox\" + randomStr}\n                                    aria-expanded=\"false\"\n                                    aria-controls=\"collapseExample\"\n                                >\n                                    <i className=\"fa fa-info-circle\" /> Detail\n                                </button>\n                                &#160;&#160;\n                                <button\n                                    className=\"btn btn-warning btn-sm\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#update-product-modal\"\n                                    onClick={() => this.prepareFormData({ ...product })}\n                                >\n                                    <i className=\"fa fa-pencil-square-o\" /> Edit\n                                </button>\n                                &#160;&#160;\n                                <button\n                                    className=\"btn btn-danger btn-sm\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#delete-product-modal\"\n                                    onClick={() => {\n                                        this.productToBlock = product;\n                                    }}\n                                >\n                                    <i className=\"fa fa-ban\" /> {product.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\"}\n                                </button>\n                            </div>\n                        </td>\n                    </tr>\n\n                    {/* ROW DETAIL */}\n                    <tr className=\"collapse no-hover\" id={\"detailbox\" + randomStr}>\n                        <td colSpan={INTERNAL_CONFIG.MAIN_HEADERS.length}>\n                            <div className=\"card card-body\" style={{ border: \"none\" }}>\n                                <table className=\"table table-sm\">\n                                    <thead>{HelperTool.generateTableHeaders(INTERNAL_CONFIG.DETAIL_HEADERS)}</thead>\n                                    <tbody>\n                                        <tr>\n                                            <td className=\"text-center\">\n                                                {productImages.map((imgUrl, idx) => (\n                                                    <img key={idx} src={imgUrl} className=\"m-1\" alt=\"NONE\" style={{ width: 54 }} />\n                                                ))}\n                                                <button>\n                                                    <i className=\"fa fa-plus-circle\" />\n                                                </button>\n                                            </td>\n                                            <td>{product.description}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </td>\n                    </tr>\n                </Fragment>\n            );\n        });\n\n        return r;\n    };\n\n    render = () => {\n        const { products, currentPage, pageSize, query, totalItems } = this.props;\n        const { branches, brands, industries, categories, message, showLoadingBar } = this.state;\n        return (\n            <div className=\"container-fluid\">\n                <Modal\n                    modalId=\"add-product-modal\"\n                    modalTitle=\"Create new product\"\n                    modalBody={\n                        <AdminAddProduct\n                            brands={brands}\n                            industries={industries}\n                            branches={branches}\n                            categories={categories}\n                            changeIndustryHandler={this.handleIndustryChange}\n                            changeBranchHandler={this.handleBranchChange}\n                        />\n                    }\n                    modalHandleSubmit={this.handleAddProduct}\n                    modalSubmitTitle=\"Add\"\n                    modalSubmitClassName=\"btn-success\"\n                    modalMessage={message}\n                />\n                <Modal\n                    modalId=\"update-product-modal\"\n                    modalTitle=\"Update product info\"\n                    modalBody={\n                        <AdminAddProduct\n                            editMode={true}\n                            brands={brands}\n                            industries={industries}\n                            branches={branches}\n                            categories={categories}\n                            changeIndustryHandler={this.handleIndustryChange}\n                            changeBranchHandler={this.handleBranchChange}\n                        />\n                    }\n                    modalHandleSubmit={this.handleUpdateProduct}\n                    modalSubmitTitle=\"Update\"\n                    modalSubmitClassName=\"btn-warning\"\n                    modalMessage={message}\n                />\n                <Modal\n                    modalId=\"delete-product-modal\"\n                    modalTitle=\"Update product info\"\n                    modalBody={<div>Are you sure to Block/Unblock this product?</div>}\n                    modalHandleSubmit={this.handleDeleteProduct}\n                    modalSubmitTitle=\"Block/Unblock\"\n                    modalSubmitClassName=\"btn-danger\"\n                />\n                <h2>{INTERNAL_CONFIG.HEADING_NAME}</h2>\n                <hr />\n                <div className=\"card\">\n                    <div className=\"card-header d-flex justify-content-end\">\n                        <input\n                            className=\"search-bar form-control col-md-4 col-sm-6\"\n                            type=\"text\"\n                            placeholder=\"Search for something...\"\n                            value={query.keyword}\n                            onChange={e => this.handleChangeKeyword(e)}\n                            onKeyDown={e => e.keyCode === 13 && this.handleSearch()}\n                        />\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"controllers d-flex\">\n                            <div>\n                                <select\n                                    className=\"form-control input-sm\"\n                                    value={pageSize}\n                                    onChange={e => {\n                                        this.handleFilterChange({\n                                            pageSize: e.target.value\n                                        });\n                                    }}\n                                >\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                            </div>\n                            <div className=\"control-buttons btn-group justify-content-space-between\">\n                                {/* <!-- Button trigger modal --> */}\n                                <button\n                                    className=\"btn btn-success\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#add-product-modal\"\n                                    onClick={() => {\n                                        this.clearFormData();\n                                    }}\n                                >\n                                    <i className=\"fa fa-plus-circle mr-2\" />\n                                    Add product\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"d-flex justify-content-between\">\n                            <span>\n                                Display {pageSize * currentPage > totalItems ? totalItems : pageSize * currentPage} / {totalItems}\n                            </span>\n                            <span>{message}</span>\n                        </div>\n                        <div className=\"table-container\" style={{ position: \"relative\" }}>\n                            <div\n                                className=\"progress\"\n                                style={{ width: \"100%\", height: 5, position: \"absolute\" }}\n                                hidden={showLoadingBar ? \"\" : \"hidden\"}\n                            >\n                                <div\n                                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\n                                    role=\"progressbar\"\n                                    aria-valuenow=\"75\"\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </div>\n                            <div className=\"table-container table-responsive\">\n                                <table className=\"table table-hover table-sm table-bordered\">\n                                    <thead>{HelperTool.generateTableHeaders(INTERNAL_CONFIG.MAIN_HEADERS)}</thead>\n                                    <tbody>{this.generateTableRows(products)}</tbody>\n                                </table>\n                                <Paginator\n                                    handlePageChange={currentPage => {\n                                        this.handleFilterChange({ currentPage });\n                                    }}\n                                    currentPage={currentPage}\n                                    pageSize={pageSize}\n                                    totalItems={totalItems}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default AdminProduct;\n"]},"metadata":{},"sourceType":"module"}
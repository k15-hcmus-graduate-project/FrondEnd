{"ast":null,"code":"import _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminUser/AdminAddUser/AdminAddUser.jsx\";\n// Stylesheet\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AdminAddUser.scss\";\nimport { USER_TYPE, USER_GENDER, ACTIVE_TYPE } from \"../../../../config/constants\";\nimport FormInput from \"../../../common/FormInput\";\n\nvar AdminAddUser =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminAddUser, _React$Component);\n\n  function AdminAddUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AdminAddUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdminAddUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.render = function () {\n      var _this$props = _this.props,\n          formData = _this$props.formData,\n          updateForm = _this$props.updateForm,\n          editMode = _this$props.editMode;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        label: \"Username\",\n        type: \"text\",\n        value: formData.username,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            username: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        value: formData.email,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            email: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), !editMode && React.createElement(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        value: formData.password,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            password: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Gender\",\n        type: \"select\",\n        value: formData.gender,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            gender: e.target.value\n          });\n        },\n        options: [USER_GENDER.FEMALE, USER_GENDER.MALE],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Phone\",\n        type: \"text\",\n        value: formData.phone,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            phone: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Full name\",\n        type: \"text\",\n        value: formData.fullName,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            fullName: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Date of Birth\",\n        type: \"date\",\n        value: formData.dateOfBirth,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            dateOfBirth: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Address\",\n        type: \"text\",\n        value: formData.address,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            address: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Permission\",\n        type: \"select\",\n        value: formData.permission,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            permission: e.target.value\n          });\n        },\n        options: [USER_TYPE.CUSTOMER, USER_TYPE.ADMIN],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  return AdminAddUser;\n}(React.Component);\n\nAdminAddUser.propTypes = {\n  updateForm: PropTypes.func,\n  editMode: PropTypes.bool,\n  formData: PropTypes.shape({\n    username: PropTypes.string,\n    permission: PropTypes.oneOf([USER_TYPE.ADMIN, USER_TYPE.PUBLIC, USER_TYPE.CUSTOMER]),\n    email: PropTypes.string,\n    fullName: PropTypes.string,\n    dateOfBirth: PropTypes.string,\n    phone: PropTypes.string,\n    gender: PropTypes.oneOf([USER_GENDER.MALE, USER_GENDER.FEMALE, \"\"]),\n    address: PropTypes.string,\n    active: PropTypes.oneOf([ACTIVE_TYPE.TRUE, ACTIVE_TYPE.FALSE]),\n    password: PropTypes.string\n  })\n};\nexport default AdminAddUser;","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminUser/AdminAddUser/AdminAddUser.jsx"],"names":["React","PropTypes","USER_TYPE","USER_GENDER","ACTIVE_TYPE","FormInput","AdminAddUser","render","props","formData","updateForm","editMode","username","e","target","value","email","password","gender","FEMALE","MALE","phone","fullName","dateOfBirth","address","permission","CUSTOMER","ADMIN","Component","propTypes","func","bool","shape","string","oneOf","PUBLIC","active","TRUE","FALSE"],"mappings":"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","sourcesContent":["// Stylesheet\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AdminAddUser.scss\";\nimport { USER_TYPE, USER_GENDER, ACTIVE_TYPE } from \"../../../../config/constants\";\nimport FormInput from \"../../../common/FormInput\";\n\nclass AdminAddUser extends React.Component {\n    static propTypes = {\n        updateForm: PropTypes.func,\n        editMode: PropTypes.bool,\n        formData: PropTypes.shape({\n            username: PropTypes.string,\n            permission: PropTypes.oneOf([USER_TYPE.ADMIN, USER_TYPE.PUBLIC, USER_TYPE.CUSTOMER]),\n            email: PropTypes.string,\n            fullName: PropTypes.string,\n            dateOfBirth: PropTypes.string,\n            phone: PropTypes.string,\n            gender: PropTypes.oneOf([USER_GENDER.MALE, USER_GENDER.FEMALE, \"\"]),\n            address: PropTypes.string,\n            active: PropTypes.oneOf([ACTIVE_TYPE.TRUE, ACTIVE_TYPE.FALSE]),\n            password: PropTypes.string\n        })\n    };\n\n    render = () => {\n        const { formData, updateForm, editMode } = this.props;\n        return (\n            <div>\n                <form>\n                    {/* USERNAME */}\n                    <FormInput\n                        label=\"Username\"\n                        type=\"text\"\n                        value={formData.username}\n                        onChangeHandler={e =>\n                            updateForm({\n                                username: e.target.value\n                            })\n                        }\n                    />\n\n                    {/* EMAIL */}\n                    <FormInput\n                        label=\"Email\"\n                        type=\"email\"\n                        value={formData.email}\n                        onChangeHandler={e =>\n                            updateForm({\n                                email: e.target.value\n                            })\n                        }\n                    />\n\n                    {/* Password */}\n                    {!editMode && (\n                        <FormInput\n                            label=\"Password\"\n                            type=\"password\"\n                            value={formData.password}\n                            onChangeHandler={e =>\n                                updateForm({\n                                    password: e.target.value\n                                })\n                            }\n                        />\n                    )}\n\n                    {/* Gender */}\n                    <FormInput\n                        label=\"Gender\"\n                        type=\"select\"\n                        value={formData.gender}\n                        onChangeHandler={e =>\n                            updateForm({\n                                gender: e.target.value\n                            })\n                        }\n                        options={[USER_GENDER.FEMALE, USER_GENDER.MALE]}\n                    />\n\n                    {/* PHONE */}\n                    <FormInput\n                        label=\"Phone\"\n                        type=\"text\"\n                        value={formData.phone}\n                        onChangeHandler={e =>\n                            updateForm({\n                                phone: e.target.value\n                            })\n                        }\n                    />\n\n                    {/* FULL NAME */}\n                    <FormInput\n                        label=\"Full name\"\n                        type=\"text\"\n                        value={formData.fullName}\n                        onChangeHandler={e =>\n                            updateForm({\n                                fullName: e.target.value\n                            })\n                        }\n                    />\n\n                    {/* Date of Birth */}\n                    <FormInput\n                        label=\"Date of Birth\"\n                        type=\"date\"\n                        value={formData.dateOfBirth}\n                        onChangeHandler={e =>\n                            updateForm({\n                                dateOfBirth: e.target.value\n                            })\n                        }\n                    />\n\n                    {/* ADDRESS */}\n                    <FormInput\n                        label=\"Address\"\n                        type=\"text\"\n                        value={formData.address}\n                        onChangeHandler={e =>\n                            updateForm({\n                                address: e.target.value\n                            })\n                        }\n                    />\n\n                    {/* Permission */}\n                    <FormInput\n                        label=\"Permission\"\n                        type=\"select\"\n                        value={formData.permission}\n                        onChangeHandler={e =>\n                            updateForm({\n                                permission: e.target.value\n                            })\n                        }\n                        options={[USER_TYPE.CUSTOMER, USER_TYPE.ADMIN]}\n                    />\n                </form>\n            </div>\n        );\n    };\n}\n\nexport default AdminAddUser;\n"]},"metadata":{},"sourceType":"module"}
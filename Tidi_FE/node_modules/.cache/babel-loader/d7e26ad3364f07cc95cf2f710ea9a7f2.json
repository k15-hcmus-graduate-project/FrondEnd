{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _utilsCreateChainedFunction = require('./utils/createChainedFunction');\n\nvar _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction); // TODO: `aria-label` should be `closeLabel`.\n\n\nvar propTypes = {\n  /**\n   * The 'aria-label' attribute provides an accessible label for the close\n   * button. It is used for Assistive Technology when the label text is not\n   * readable.\n   */\n  'aria-label': _react2['default'].PropTypes.string,\n\n  /**\n   * Specify whether the Component should contain a close button\n   */\n  closeButton: _react2['default'].PropTypes.bool,\n\n  /**\n   * A Callback fired when the close button is clicked. If used directly inside\n   * a Modal component, the onHide will automatically be propagated up to the\n   * parent Modal `onHide`.\n   */\n  onHide: _react2['default'].PropTypes.func\n};\nvar defaultProps = {\n  'aria-label': 'Close',\n  closeButton: false\n};\nvar contextTypes = {\n  $bs_modal: _react2['default'].PropTypes.shape({\n    onHide: _react2['default'].PropTypes.func\n  })\n};\n\nvar ModalHeader = function (_React$Component) {\n  _inherits(ModalHeader, _React$Component);\n\n  function ModalHeader() {\n    _classCallCheck(this, ModalHeader);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  ModalHeader.prototype.render = function render() {\n    var _props = this.props;\n    var label = _props['aria-label'];\n    var closeButton = _props.closeButton;\n    var onHide = _props.onHide;\n    var className = _props.className;\n    var children = _props.children;\n\n    var props = _objectWithoutProperties(_props, ['aria-label', 'closeButton', 'onHide', 'className', 'children']);\n\n    var modal = this.context.$bs_modal;\n\n    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);\n\n    var bsProps = _splitBsProps[0];\n    var elementProps = _splitBsProps[1];\n\n    var classes = _utilsBootstrapUtils.getClassSet(bsProps);\n\n    return _react2['default'].createElement('div', _extends({}, elementProps, {\n      className: _classnames2['default'](className, classes)\n    }), closeButton && _react2['default'].createElement('button', {\n      type: 'button',\n      className: 'close',\n      'aria-label': label,\n      onClick: _utilsCreateChainedFunction2['default'](modal.onHide, onHide)\n    }, _react2['default'].createElement('span', {\n      'aria-hidden': 'true'\n    }, 'Ã—')), children);\n  };\n\n  return ModalHeader;\n}(_react2['default'].Component);\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nModalHeader.contextTypes = contextTypes;\nexports['default'] = _utilsBootstrapUtils.bsClass('modal-header', ModalHeader);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
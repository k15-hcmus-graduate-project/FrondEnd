{"ast":null,"code":"import _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/layout/Header/Header.jsx\";\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Formik } from \"formik\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.scss\";\nimport { ROUTE_NAME } from \"../../../routes/main.routing\";\nimport AuthService from \"../../../services/AuthService\";\nimport WebService from \"../../../services/WebService\";\nimport { QUERY_PARAMS, ACTIVE_TYPE } from \"../../../config/constants\";\nvar INITIAL_STATE = {\n  openDropdownMenu: false,\n  openMegaMenu: false,\n  openMenuMobile: false,\n  openCatalogDetail: false,\n  activeMenuitemIndex: 0,\n  redirectTo: null\n};\nvar INTERNAL_CONFIG = {\n  emailNotification: \"Please verify your email for better experience at TIDI\",\n  emailNotificationSuccess: \"Your email is verified!\",\n  emailNotificationFailure: \"Verification code is invalid, please try again later\"\n};\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(_props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, _props));\n\n    _this.componentDidMount = function () {\n      var _this$props = _this.props,\n          changeLoginStatus = _this$props.changeLoginStatus,\n          history = _this$props.history,\n          toggleNotification = _this$props.toggleNotification;\n      var params = new URLSearchParams(history.location.search);\n      var emailVerificationCode = params.get(\"email\");\n\n      _this.fetchIndustries();\n\n      AuthService.isLoggedIn().then(function (status) {\n        if (status.tokenIsValid) {\n          changeLoginStatus(status.tokenIsValid);\n\n          if (status.emailIsVerified === ACTIVE_TYPE.FALSE && !emailVerificationCode) {\n            toggleNotification(INTERNAL_CONFIG.emailNotification, \"alert-warning\");\n          }\n        }\n      });\n\n      if (emailVerificationCode) {\n        WebService.verifyEmail(emailVerificationCode).then(function (res) {\n          var result = JSON.parse(res);\n\n          if (result.status === ACTIVE_TYPE.TRUE) {\n            toggleNotification(INTERNAL_CONFIG.emailNotificationSuccess, \"alert-success\");\n          } else {\n            toggleNotification(INTERNAL_CONFIG.emailNotificationFailure, \"alert-danger\");\n          }\n        });\n      }\n    };\n\n    _this.componentWillReceiveProps = function (newProps, oldProps) {\n      if (newProps.emailIsVerified !== oldProps.emailIsVerified && newProps.emailIsVerified === ACTIVE_TYPE.TRUE) {\n        _this.props.toggleNotification(\"\", \"\");\n      }\n    };\n\n    _this.fetchIndustries = function () {\n      WebService.getAllIndustries().then(function (idtrs) {\n        var industries = JSON.parse(idtrs).industry;\n\n        _this.props.fetchIndustries(industries);\n\n        _this.props.changeIndustryHover(industries[0]);\n      });\n    };\n\n    _this.toggleMenuMobile = function (open) {\n      _this.setState({\n        openMenuMobile: open !== undefined ? open : !_this.state.openMenuMobile\n      });\n    };\n\n    _this.handleLogout = function () {\n      AuthService.logout();\n\n      _this.props.changeLoginStatus(false);\n\n      _this.setState({\n        redirectTo: React.createElement(Redirect, {\n          to: ROUTE_NAME.LOGIN,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })\n      });\n    };\n\n    _this.handleHoverMenuItem = function (industry) {\n      _this.props.changeIndustryHover(industry);\n    };\n\n    _this.generateCatalog = function () {\n      var generateCategories = function generateCategories(categories) {\n        var R = [];\n\n        if (categories) {\n          categories.forEach(function (cat, index) {\n            R.push(React.createElement(Link, {\n              className: \"category-item\",\n              key: index,\n              to: \"/products?cat=\".concat(cat.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, cat.category_name));\n          });\n        }\n\n        return R;\n      };\n\n      var generateBranches = function generateBranches(branches) {\n        var R = [];\n\n        if (branches) {\n          branches.forEach(function (branch, index) {\n            R.push(React.createElement(\"div\", {\n              key: index,\n              className: \"branch-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, React.createElement(\"h6\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }, React.createElement(Link, {\n              className: \"btn-link\",\n              to: \"\".concat(ROUTE_NAME.PRODUCTS, \"?\").concat(QUERY_PARAMS.branchId, \"=\").concat(branch.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, branch.branch_name)), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, generateCategories(branch.categories))));\n          });\n        }\n\n        return R;\n      };\n\n      return generateBranches(_this.props.currentIndustry.branches);\n    };\n\n    _this.generateMenuItems = function () {\n      var R = [];\n      var industries = _this.props.industries;\n\n      if (industries) {\n        _.map(industries, function (industry, index) {\n          R.push(React.createElement(Link, {\n            key: index,\n            to: ROUTE_NAME.PRODUCTS + \"?\".concat(QUERY_PARAMS.industryId, \"=\").concat(industry.id),\n            className: \"dropdown-item\" + (_this.state.activeMenuitemIndex === index ? \" menuitem-active\" : \"\"),\n            onMouseEnter: function onMouseEnter() {\n              _this.setState({\n                activeMenuitemIndex: index\n              });\n\n              _this.handleHoverMenuItem(industry);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, industry.industry_name));\n        });\n      }\n\n      return R;\n    };\n\n    _this.render = function () {\n      var _this$props2 = _this.props,\n          history = _this$props2.history,\n          nCartItems = _this$props2.nCartItems,\n          isLoggedIn = _this$props2.isLoggedIn,\n          username = _this$props2.username,\n          notificationMessage = _this$props2.notificationMessage,\n          notificationType = _this$props2.notificationType;\n      var _this$state = _this.state,\n          redirectTo = _this$state.redirectTo,\n          openMenuMobile = _this$state.openMenuMobile;\n      return React.createElement(\"header\", {\n        className: \"header_area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, redirectTo, React.createElement(\"div\", {\n        className: \"classy-nav-container breakpoint-off d-flex align-items-center justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"classy-navbar\",\n        id: \"essenceNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"nav-brand\",\n        to: ROUTE_NAME.HOME,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/img/core-img/logo.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"classy-navbar-toggler\",\n        onClick: function onClick() {\n          _this.toggleMenuMobile();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbarToggler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"classy-menu \" + (openMenuMobile ? \"menu-on\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"classycloseIcon\",\n        onClick: function onClick() {\n          _this.toggleMenuMobile();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cross-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"classynav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        id: \"menuitem-catalog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: ROUTE_NAME.PRODUCTS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Catalog\"), React.createElement(\"div\", {\n        className: \"catalog-container dropdown d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menuitem-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, _this.generateMenuItems()), React.createElement(\"div\", {\n        className: \"catalog-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, _this.generateCatalog()))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: ROUTE_NAME.ADMIN.HOME,\n          search: \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Admin\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: ROUTE_NAME.ORDERS,\n          search: \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Orders\")))))), React.createElement(\"div\", {\n        className: \"header-meta d-flex clearfix justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          keyword: \"\"\n        },\n        onSubmit: function onSubmit(values, actions) {\n          setTimeout(function () {\n            history.push(ROUTE_NAME.PRODUCTS + \"?\".concat(QUERY_PARAMS.keyword, \"=\").concat(values.keyword));\n            actions.setSubmitting(false);\n          }, 600);\n        },\n        render: function render(props) {\n          return React.createElement(\"form\", {\n            onSubmit: props.handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"search\",\n            value: props.values.keyword,\n            onChange: props.handleChange,\n            name: \"keyword\",\n            placeholder: \"Type for search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-search\",\n            \"aria-hidden\": \"true\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"essenceCartBtn\",\n        onClick: function onClick() {\n          _this.props.toggleCart(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/img/core-img/bag.svg\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, nCartItems))), isLoggedIn ? React.createElement(\"div\", {\n        className: \"favourite-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/img/core-img/message.svg\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }))) : null, React.createElement(\"div\", {\n        className: \"user-login-info d-flex justify-content-center align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, isLoggedIn ? React.createElement(\"div\", {\n        className: \"favourite-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        className: \"dropdown dropdown-toggle loggedin-btn\",\n        \"data-toggle\": \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/img/core-img/user.svg\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dropdown-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Hello, \", username), React.createElement(\"div\", {\n        className: \"dropdown-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: ROUTE_NAME.ORDERS,\n        className: \"dropdown-item text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"My Orders\"), React.createElement(\"button\", {\n        className: \"dropdown-item text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(\"button\", {\n        className: \"dropdown-item text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Help\"), React.createElement(\"div\", {\n        className: \"dropdown-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"dropdown-item text-center\",\n        onClick: function onClick() {\n          return _this.handleLogout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Log out\"))) : React.createElement(\"div\", {\n        className: \"user-login-button d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: ROUTE_NAME.LOGIN,\n        className: \"btn btn-outline-secondary text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Link, {\n        to: ROUTE_NAME.REGISTER,\n        className: \"btn btn-outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Register\")), \" \", React.createElement(Link, {\n        to: ROUTE_NAME.MAP_DIRECTION,\n        className: \"btn btn-outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"To Store\")))), notificationMessage && React.createElement(\"div\", {\n        className: \"alert alert-dismissible fade show \" + notificationType,\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"\\xD7\")), notificationMessage));\n    };\n\n    _this.state = INITIAL_STATE;\n    return _this;\n  }\n\n  return Header;\n}(Component);\n\nHeader.propTypes = {\n  fetchIndustries: PropTypes.func,\n  changeIndustryHover: PropTypes.func,\n  changeLoginStatus: PropTypes.func,\n  currentIndustry: PropTypes.shape({\n    branches: PropTypes.array\n  }),\n  industries: PropTypes.array,\n  isLoggedIn: PropTypes.bool,\n  username: PropTypes.string\n};\nexport default withRouter(Header);","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/layout/Header/Header.jsx"],"names":["React","Component","_","Formik","Link","Redirect","withRouter","PropTypes","ROUTE_NAME","AuthService","WebService","QUERY_PARAMS","ACTIVE_TYPE","INITIAL_STATE","openDropdownMenu","openMegaMenu","openMenuMobile","openCatalogDetail","activeMenuitemIndex","redirectTo","INTERNAL_CONFIG","emailNotification","emailNotificationSuccess","emailNotificationFailure","Header","props","componentDidMount","changeLoginStatus","history","toggleNotification","params","URLSearchParams","location","search","emailVerificationCode","get","fetchIndustries","isLoggedIn","then","status","tokenIsValid","emailIsVerified","FALSE","verifyEmail","res","result","JSON","parse","TRUE","componentWillReceiveProps","newProps","oldProps","getAllIndustries","idtrs","industries","industry","changeIndustryHover","toggleMenuMobile","open","setState","undefined","state","handleLogout","logout","LOGIN","handleHoverMenuItem","generateCatalog","generateCategories","categories","R","forEach","cat","index","push","id","category_name","generateBranches","branches","branch","PRODUCTS","branchId","branch_name","currentIndustry","generateMenuItems","map","industryId","industry_name","render","nCartItems","username","notificationMessage","notificationType","HOME","pathname","ADMIN","ORDERS","keyword","values","actions","setTimeout","setSubmitting","handleSubmit","handleChange","toggleCart","REGISTER","MAP_DIRECTION","propTypes","func","shape","array","bool","string"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Formik } from \"formik\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.scss\";\nimport { ROUTE_NAME } from \"../../../routes/main.routing\";\nimport AuthService from \"../../../services/AuthService\";\nimport WebService from \"../../../services/WebService\";\nimport { QUERY_PARAMS, ACTIVE_TYPE } from \"../../../config/constants\";\n\nconst INITIAL_STATE = {\n    openDropdownMenu: false,\n    openMegaMenu: false,\n    openMenuMobile: false,\n    openCatalogDetail: false,\n    activeMenuitemIndex: 0,\n    redirectTo: null\n};\n\nconst INTERNAL_CONFIG = {\n    emailNotification: \"Please verify your email for better experience at TIDI\",\n    emailNotificationSuccess: \"Your email is verified!\",\n    emailNotificationFailure: \"Verification code is invalid, please try again later\"\n};\n\nclass Header extends Component {\n    static propTypes = {\n        fetchIndustries: PropTypes.func,\n        changeIndustryHover: PropTypes.func,\n        changeLoginStatus: PropTypes.func,\n        currentIndustry: PropTypes.shape({\n            branches: PropTypes.array\n        }),\n        industries: PropTypes.array,\n        isLoggedIn: PropTypes.bool,\n        username: PropTypes.string\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = INITIAL_STATE;\n    }\n\n    componentDidMount = () => {\n        const { changeLoginStatus, history, toggleNotification } = this.props;\n        const params = new URLSearchParams(history.location.search);\n        const emailVerificationCode = params.get(\"email\");\n\n        this.fetchIndustries();\n        AuthService.isLoggedIn().then(status => {\n            if (status.tokenIsValid) {\n                changeLoginStatus(status.tokenIsValid);\n\n                if (status.emailIsVerified === ACTIVE_TYPE.FALSE && !emailVerificationCode) {\n                    toggleNotification(INTERNAL_CONFIG.emailNotification, \"alert-warning\");\n                }\n            }\n        });\n        if (emailVerificationCode) {\n            WebService.verifyEmail(emailVerificationCode).then(res => {\n                const result = JSON.parse(res);\n                if (result.status === ACTIVE_TYPE.TRUE) {\n                    toggleNotification(INTERNAL_CONFIG.emailNotificationSuccess, \"alert-success\");\n                } else {\n                    toggleNotification(INTERNAL_CONFIG.emailNotificationFailure, \"alert-danger\");\n                }\n            });\n        }\n    };\n\n    componentWillReceiveProps = (newProps, oldProps) => {\n        if (newProps.emailIsVerified !== oldProps.emailIsVerified && newProps.emailIsVerified === ACTIVE_TYPE.TRUE) {\n            this.props.toggleNotification(\"\", \"\");\n        }\n    };\n\n    fetchIndustries = () => {\n        WebService.getAllIndustries().then(idtrs => {\n            let industries = JSON.parse(idtrs).industry;\n            this.props.fetchIndustries(industries);\n            this.props.changeIndustryHover(industries[0]);\n        });\n    };\n\n    toggleMenuMobile = open => {\n        this.setState({\n            openMenuMobile: open !== undefined ? open : !this.state.openMenuMobile\n        });\n    };\n\n    handleLogout = () => {\n        AuthService.logout();\n        this.props.changeLoginStatus(false);\n        this.setState({\n            redirectTo: <Redirect to={ROUTE_NAME.LOGIN} />\n        });\n    };\n\n    handleHoverMenuItem = industry => {\n        this.props.changeIndustryHover(industry);\n    };\n\n    generateCatalog = () => {\n        const generateCategories = categories => {\n            let R = [];\n            if (categories) {\n                categories.forEach((cat, index) => {\n                    R.push(\n                        <Link className=\"category-item\" key={index} to={`/products?cat=${cat.id}`}>\n                            {cat.category_name}\n                        </Link>\n                    );\n                });\n            }\n\n            return R;\n        };\n\n        const generateBranches = branches => {\n            let R = [];\n            if (branches) {\n                branches.forEach((branch, index) => {\n                    R.push(\n                        <div key={index} className=\"branch-container\">\n                            <h6>\n                                <Link className=\"btn-link\" to={`${ROUTE_NAME.PRODUCTS}?${QUERY_PARAMS.branchId}=${branch.id}`}>\n                                    {branch.branch_name}\n                                </Link>\n                            </h6>\n                            <div>{generateCategories(branch.categories)}</div>\n                        </div>\n                    );\n                });\n            }\n\n            return R;\n        };\n        return generateBranches(this.props.currentIndustry.branches);\n    };\n\n    generateMenuItems = () => {\n        let R = [];\n        const { industries } = this.props;\n        if (industries) {\n            _.map(industries, (industry, index) => {\n                R.push(\n                    <Link\n                        key={index}\n                        to={ROUTE_NAME.PRODUCTS + `?${QUERY_PARAMS.industryId}=${industry.id}`}\n                        className={\"dropdown-item\" + (this.state.activeMenuitemIndex === index ? \" menuitem-active\" : \"\")}\n                        onMouseEnter={() => {\n                            this.setState({\n                                activeMenuitemIndex: index\n                            });\n                            this.handleHoverMenuItem(industry);\n                        }}\n                    >\n                        {industry.industry_name}\n                    </Link>\n                );\n            });\n        }\n\n        return R;\n    };\n\n    render = () => {\n        const { history, nCartItems, isLoggedIn, username, notificationMessage, notificationType } = this.props;\n        const { redirectTo, openMenuMobile } = this.state;\n        return (\n            <header className=\"header_area\">\n                {redirectTo}\n                <div className=\"classy-nav-container breakpoint-off d-flex align-items-center justify-content-between\">\n                    {/* <!-- Classy Menu --> */}\n                    <nav className=\"classy-navbar\" id=\"essenceNav\">\n                        {/* <!-- Logo --> */}\n                        <Link className=\"nav-brand\" to={ROUTE_NAME.HOME}>\n                            <img src=\"/img/core-img/logo.png\" alt=\"\" />\n                        </Link>\n                        {/* <!-- Navbar Toggler --> */}\n                        <div\n                            className=\"classy-navbar-toggler\"\n                            onClick={() => {\n                                this.toggleMenuMobile();\n                            }}\n                        >\n                            <span className=\"navbarToggler\">\n                                <span />\n                                <span />\n                                <span />\n                            </span>\n                        </div>\n                        {/* <!-- Menu --> */}\n                        <div className={\"classy-menu \" + (openMenuMobile ? \"menu-on\" : \"\")}>\n                            {/* <!-- close btn --> */}\n                            <div\n                                className=\"classycloseIcon\"\n                                onClick={() => {\n                                    this.toggleMenuMobile();\n                                }}\n                            >\n                                <div className=\"cross-wrap\">\n                                    <span className=\"top\" />\n                                    <span className=\"bottom\" />\n                                </div>\n                            </div>\n                            {/* <!-- Nav Start --> */}\n                            <div className=\"classynav\">\n                                <ul>\n                                    <li id=\"menuitem-catalog\">\n                                        <Link to={ROUTE_NAME.PRODUCTS}>Catalog</Link>\n                                        <div className=\"catalog-container dropdown d-flex\">\n                                            <div className=\"menuitem-container\">{this.generateMenuItems()}</div>\n                                            {/* BRAND DETAIL */}\n                                            <div className=\"catalog-detail\">{this.generateCatalog()}</div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <Link\n                                            to={{\n                                                pathname: ROUTE_NAME.ADMIN.HOME,\n                                                search: \"\"\n                                            }}\n                                        >\n                                            Admin\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link\n                                            to={{\n                                                pathname: ROUTE_NAME.ORDERS,\n                                                search: \"\"\n                                            }}\n                                        >\n                                            Orders\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </div>\n                            {/* <!-- Nav End --> */}\n                        </div>\n                    </nav>\n\n                    {/* <!-- Header Meta Data --> */}\n                    <div className=\"header-meta d-flex clearfix justify-content-end\">\n                        {/* <!-- Search Area --> */}\n                        <div className=\"search-area\">\n                            <Formik\n                                initialValues={{ keyword: \"\" }}\n                                onSubmit={(values, actions) => {\n                                    setTimeout(() => {\n                                        history.push(ROUTE_NAME.PRODUCTS + `?${QUERY_PARAMS.keyword}=${values.keyword}`);\n                                        actions.setSubmitting(false);\n                                    }, 600);\n                                }}\n                                render={props => (\n                                    <form onSubmit={props.handleSubmit}>\n                                        <input\n                                            type=\"search\"\n                                            value={props.values.keyword}\n                                            onChange={props.handleChange}\n                                            name=\"keyword\"\n                                            placeholder=\"Type for search\"\n                                        />\n                                        <button type=\"submit\">\n                                            <i className=\"fa fa-search\" aria-hidden=\"true\" />\n                                        </button>\n                                    </form>\n                                )}\n                            />\n                        </div>\n                        {/* <!-- Cart Area --> */}\n                        <div className=\"cart-area\">\n                            <div\n                                id=\"essenceCartBtn\"\n                                onClick={() => {\n                                    this.props.toggleCart(true);\n                                }}\n                            >\n                                <img src=\"/img/core-img/bag.svg\" alt=\"\" /> <span>{nCartItems}</span>\n                            </div>\n                        </div>\n                        {/* <!-- Favourite Area --> */}\n                        {isLoggedIn ? (\n                            <div className=\"favourite-area\">\n                                <a href=\"/\">\n                                    <img src=\"/img/core-img/message.svg\" alt=\"\" />\n                                </a>\n                            </div>\n                        ) : null}\n                        {/* <!-- User Login Info --> */}\n                        <div className=\"user-login-info d-flex justify-content-center align-items-center\">\n                            {isLoggedIn ? (\n                                <div className=\"favourite-area\">\n                                    <a href=\"/\" className=\"dropdown dropdown-toggle loggedin-btn\" data-toggle=\"dropdown\">\n                                        <img src=\"/img/core-img/user.svg\" alt=\"\" />\n                                    </a>\n                                    <div className=\"dropdown-menu\">\n                                        <span className=\"d-flex justify-content-center\">Hello, {username}</span>\n                                        <div className=\"dropdown-divider\" />\n                                        <Link to={ROUTE_NAME.ORDERS} className=\"dropdown-item text-center\">\n                                            My Orders\n                                        </Link>\n                                        <button className=\"dropdown-item text-center\">Settings</button>\n                                        <button className=\"dropdown-item text-center\">Help</button>\n                                        <div className=\"dropdown-divider\" />\n                                        <button className=\"dropdown-item text-center\" onClick={() => this.handleLogout()}>\n                                            Log out\n                                        </button>\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className=\"user-login-button d-flex\">\n                                    <Link to={ROUTE_NAME.LOGIN} className=\"btn btn-outline-secondary text-center\">\n                                        Login\n                                    </Link>\n                                    <Link to={ROUTE_NAME.REGISTER} className=\"btn btn-outline-secondary\">\n                                        Register\n                                    </Link>\n                                </div>\n                            )}{\" \"}\n                            <Link to={ROUTE_NAME.MAP_DIRECTION} className=\"btn btn-outline-secondary\">\n                                To Store\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n                {notificationMessage && (\n                    <div className={\"alert alert-dismissible fade show \" + notificationType} role=\"alert\">\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                        {notificationMessage}\n                    </div>\n                )}\n            </header>\n        );\n    };\n}\n\nexport default withRouter(Header);\n"]},"metadata":{},"sourceType":"module"}
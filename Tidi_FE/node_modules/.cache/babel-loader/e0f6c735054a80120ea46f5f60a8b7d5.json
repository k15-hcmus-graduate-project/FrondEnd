{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _SafeAnchor = require('./SafeAnchor');\n\nvar _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);\n\nvar _utilsCreateChainedFunction = require('./utils/createChainedFunction');\n\nvar _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);\n\nvar propTypes = {\n  active: _react2['default'].PropTypes.bool,\n  disabled: _react2['default'].PropTypes.bool,\n  role: _react2['default'].PropTypes.string,\n  href: _react2['default'].PropTypes.string,\n  onClick: _react2['default'].PropTypes.func,\n  onSelect: _react2['default'].PropTypes.func,\n  eventKey: _react2['default'].PropTypes.any\n};\nvar defaultProps = {\n  active: false,\n  disabled: false\n};\n\nvar NavItem = function (_React$Component) {\n  _inherits(NavItem, _React$Component);\n\n  function NavItem(props, context) {\n    _classCallCheck(this, NavItem);\n\n    _React$Component.call(this, props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  NavItem.prototype.handleClick = function handleClick(e) {\n    if (this.props.onSelect) {\n      e.preventDefault();\n\n      if (!this.props.disabled) {\n        this.props.onSelect(this.props.eventKey, e);\n      }\n    }\n  };\n\n  NavItem.prototype.render = function render() {\n    var _props = this.props;\n    var active = _props.active;\n    var disabled = _props.disabled;\n    var onClick = _props.onClick;\n    var className = _props.className;\n    var style = _props.style;\n\n    var props = _objectWithoutProperties(_props, ['active', 'disabled', 'onClick', 'className', 'style']);\n\n    delete props.onSelect;\n    delete props.eventKey; // These are injected down by `<Nav>` for building `<SubNav>`s.\n\n    delete props.activeKey;\n    delete props.activeHref;\n\n    if (!props.role) {\n      if (props.href === '#') {\n        props.role = 'button';\n      }\n    } else if (props.role === 'tab') {\n      props['aria-selected'] = active;\n    }\n\n    return _react2['default'].createElement('li', {\n      role: 'presentation',\n      className: _classnames2['default'](className, {\n        active: active,\n        disabled: disabled\n      }),\n      style: style\n    }, _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, props, {\n      disabled: disabled,\n      onClick: _utilsCreateChainedFunction2['default'](onClick, this.handleClick)\n    })));\n  };\n\n  return NavItem;\n}(_react2['default'].Component);\n\nNavItem.propTypes = propTypes;\nNavItem.defaultProps = defaultProps;\nexports['default'] = NavItem;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/common/LoadingBar/LoadingBar.jsx\";\nimport React, { Component } from \"react\";\nimport \"./LoadingBar.scss\";\nimport PropTypes from \"prop-types\";\nvar INTITIAL_STATE = {\n  percent: 100,\n  loadingInterval: null\n};\n\nvar LoadingBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoadingBar, _Component);\n\n  function LoadingBar(props) {\n    var _this;\n\n    _classCallCheck(this, LoadingBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoadingBar).call(this, props));\n    _this.state = INTITIAL_STATE;\n    return _this;\n  }\n\n  _createClass(LoadingBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startLoadingBar();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stopLoadingBar();\n    }\n  }, {\n    key: \"startLoadingBar\",\n    value: function startLoadingBar() {\n      var _this2 = this;\n\n      this.setState({\n        loadingInterval: setInterval(function () {\n          _this2.setState({\n            percent: _this2.state.percent + 1\n          });\n\n          if (_this2.state.percent > 80) {\n            clearInterval(_this2.state.loadingInterval);\n          }\n        }, 50)\n      });\n    }\n  }, {\n    key: \"stopLoadingBar\",\n    value: function stopLoadingBar() {\n      this.setState({\n        percent: 100\n      });\n      clearInterval(this.state.loadingInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"tidi-loading-bar\",\n        className: \"progress\",\n        style: {\n          height: this.props.loadingBarHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-striped progress-bar-animated bg-info\",\n        role: \"progressbar\",\n        \"aria-valuenow\": \"75\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        style: {\n          width: this.state.percent + \"%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LoadingBar;\n}(Component);\n\nLoadingBar.propTyeps = {\n  loadingBarHeight: PropTypes.number\n};\nLoadingBar.defaultProps = {\n  loadingBarHeight: 3\n};\nexport default LoadingBar;","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/common/LoadingBar/LoadingBar.jsx"],"names":["React","Component","PropTypes","INTITIAL_STATE","percent","loadingInterval","LoadingBar","props","state","startLoadingBar","stopLoadingBar","setState","setInterval","clearInterval","height","loadingBarHeight","width","propTyeps","number","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,OAAO,EAAE,GADU;AAEnBC,EAAAA,eAAe,EAAE;AAFE,CAAvB;;IAKMC,U;;;;;AASF,sBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAaL,cAAb;AAFoB;AAGvB;;;;wCAEmB;AAChB,WAAKM,eAAL;AACH;;;2CAEsB;AACnB,WAAKC,cAAL;AACH;;;sCAEiB;AAAA;;AACd,WAAKC,QAAL,CAAc;AACVN,QAAAA,eAAe,EAAEO,WAAW,CAAC,YAAM;AAC/B,UAAA,MAAI,CAACD,QAAL,CAAc;AACVP,YAAAA,OAAO,EAAE,MAAI,CAACI,KAAL,CAAWJ,OAAX,GAAqB;AADpB,WAAd;;AAGA,cAAI,MAAI,CAACI,KAAL,CAAWJ,OAAX,GAAqB,EAAzB,EAA6B;AACzBS,YAAAA,aAAa,CAAC,MAAI,CAACL,KAAL,CAAWH,eAAZ,CAAb;AACH;AACJ,SAP2B,EAOzB,EAPyB;AADlB,OAAd;AAUH;;;qCAEgB;AACb,WAAKM,QAAL,CAAc;AACVP,QAAAA,OAAO,EAAE;AADC,OAAd;AAGAS,MAAAA,aAAa,CAAC,KAAKL,KAAL,CAAWH,eAAZ,CAAb;AACH;;;6BAEQ;AACL,aACI;AAAK,QAAA,EAAE,EAAC,kBAAR;AAA2B,QAAA,SAAS,EAAC,UAArC;AAAgD,QAAA,KAAK,EAAE;AAAES,UAAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ;AAArB,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,iEADd;AAEI,QAAA,IAAI,EAAC,aAFT;AAGI,yBAAc,IAHlB;AAII,yBAAc,GAJlB;AAKI,yBAAc,KALlB;AAMI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWJ,OAAX,GAAqB;AAA9B,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAYH;;;;EAvDoBH,S;;AAAnBK,U,CACKW,S,GAAY;AACfF,EAAAA,gBAAgB,EAAEb,SAAS,CAACgB;AADb,C;AADjBZ,U,CAKKa,Y,GAAe;AAClBJ,EAAAA,gBAAgB,EAAE;AADA,C;AAqD1B,eAAeT,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./LoadingBar.scss\";\nimport PropTypes from \"prop-types\";\n\nconst INTITIAL_STATE = {\n    percent: 100,\n    loadingInterval: null\n};\n\nclass LoadingBar extends Component {\n    static propTyeps = {\n        loadingBarHeight: PropTypes.number\n    };\n\n    static defaultProps = {\n        loadingBarHeight: 3\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = INTITIAL_STATE;\n    }\n\n    componentDidMount() {\n        this.startLoadingBar();\n    }\n\n    componentWillUnmount() {\n        this.stopLoadingBar();\n    }\n\n    startLoadingBar() {\n        this.setState({\n            loadingInterval: setInterval(() => {\n                this.setState({\n                    percent: this.state.percent + 1\n                });\n                if (this.state.percent > 80) {\n                    clearInterval(this.state.loadingInterval);\n                }\n            }, 50)\n        });\n    }\n\n    stopLoadingBar() {\n        this.setState({\n            percent: 100\n        });\n        clearInterval(this.state.loadingInterval);\n    }\n\n    render() {\n        return (\n            <div id=\"tidi-loading-bar\" className=\"progress\" style={{ height: this.props.loadingBarHeight }}>\n                <div\n                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-info\"\n                    role=\"progressbar\"\n                    aria-valuenow=\"75\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    style={{ width: this.state.percent + \"%\" }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LoadingBar;\n"]},"metadata":{},"sourceType":"module"}
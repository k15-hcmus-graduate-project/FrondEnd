{"ast":null,"code":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Dropdown = require('./Dropdown');\n\nvar _Dropdown2 = _interopRequireDefault(_Dropdown);\n\nvar _utilsSplitComponentProps = require('./utils/splitComponentProps');\n\nvar _utilsSplitComponentProps2 = _interopRequireDefault(_utilsSplitComponentProps);\n\nvar propTypes = _extends({}, _Dropdown2['default'].propTypes, {\n  // Toggle props.\n  title: _react2['default'].PropTypes.node.isRequired,\n  noCaret: _react2['default'].PropTypes.bool,\n  active: _react2['default'].PropTypes.bool,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: _react2['default'].PropTypes.node\n});\n\nvar NavDropdown = function (_React$Component) {\n  _inherits(NavDropdown, _React$Component);\n\n  function NavDropdown() {\n    _classCallCheck(this, NavDropdown);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  NavDropdown.prototype.render = function render() {\n    var _props = this.props;\n    var title = _props.title;\n    var active = _props.active;\n    var className = _props.className;\n    var style = _props.style;\n    var children = _props.children;\n\n    var props = _objectWithoutProperties(_props, ['title', 'active', 'className', 'style', 'children']);\n\n    delete props.eventKey; // These are injected down by `<Nav>` for building `<SubNav>`s.\n\n    delete props.activeKey;\n    delete props.activeHref;\n\n    var _splitComponentProps = _utilsSplitComponentProps2['default'](props, _Dropdown2['default'].ControlledComponent);\n\n    var dropdownProps = _splitComponentProps[0];\n    var toggleProps = _splitComponentProps[1]; // Unlike for the other dropdowns, styling needs to go to the `<Dropdown>`\n    // rather than the `<Dropdown.Toggle>`.\n\n    return _react2['default'].createElement(_Dropdown2['default'], _extends({}, dropdownProps, {\n      componentClass: 'li',\n      className: _classnames2['default'](className, {\n        active: active\n      }),\n      style: style\n    }), _react2['default'].createElement(_Dropdown2['default'].Toggle, _extends({}, toggleProps, {\n      useAnchor: true\n    }), title), _react2['default'].createElement(_Dropdown2['default'].Menu, null, children));\n  };\n\n  return NavDropdown;\n}(_react2['default'].Component);\n\nNavDropdown.propTypes = propTypes;\nexports['default'] = NavDropdown;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
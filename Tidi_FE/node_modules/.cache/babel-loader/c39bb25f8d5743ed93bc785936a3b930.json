{"ast":null,"code":"import _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminProduct/AdminAddProduct/AdminAddProduct.jsx\";\n// Stylesheet\nimport React, { Component } from \"react\";\nimport \"./AdminAddProduct.scss\";\nimport FormInput from \"../../../common/FormInput\";\n\nvar AdminAddProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminAddProduct, _Component);\n\n  function AdminAddProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AdminAddProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdminAddProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.render = function () {\n      var _this$props = _this.props,\n          formData = _this$props.formData,\n          updateForm = _this$props.updateForm,\n          changeBranchHandler = _this$props.changeBranchHandler,\n          changeIndustryHandler = _this$props.changeIndustryHandler,\n          branches = _this$props.branches,\n          categories = _this$props.categories,\n          brands = _this$props.brands,\n          industries = _this$props.industries;\n      if (!branches || !categories || !brands || !industries) return \"\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        label: \"Product Name\",\n        type: \"text\",\n        value: formData.product_name,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            product_name: e.target.value\n          });\n        },\n        additionalClass: \"col-md-6 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Price\",\n        type: \"text\",\n        value: formData.price,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            price: e.target.value\n          });\n        },\n        additionalClass: \"col-md-3 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Amount\",\n        type: \"text\",\n        value: formData.amount,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            amount: e.target.value\n          });\n        },\n        additionalClass: \"col-md-3 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        label: \"Brand\",\n        type: \"select\",\n        value: formData.brand_id,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            brand_id: e.target.value\n          });\n        },\n        options: brands && brands.map(function (brand) {\n          return {\n            value: brand.id,\n            name: brand.brand_name\n          };\n        }),\n        additionalClass: \"col-md-3 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Industry\",\n        type: \"select\",\n        value: formData.industry_id,\n        onChangeHandler: function onChangeHandler(e) {\n          updateForm({\n            industry_id: e.target.value\n          });\n          changeIndustryHandler(e.target.value);\n        },\n        options: industries && industries.map(function (industry) {\n          return {\n            value: industry.id,\n            name: industry.industry_name\n          };\n        }),\n        additionalClass: \"col-md-3 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Branch\",\n        type: \"select\",\n        value: formData.branch_id,\n        onChangeHandler: function onChangeHandler(e) {\n          updateForm({\n            branch_id: e.target.value\n          });\n          changeBranchHandler(e.target.value);\n        },\n        options: branches && branches.map(function (branch) {\n          return {\n            value: branch.id,\n            name: branch.branch_name\n          };\n        }),\n        additionalClass: \"col-md-3 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Category\",\n        type: \"select\",\n        value: formData.category_id // innerHTML={formData.categoryName}\n        ,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            category_id: e.target.value\n          });\n        },\n        options: categories && categories.map(function (category) {\n          return {\n            value: category.id,\n            name: category.category_name\n          };\n        }),\n        additionalClass: \"col-md-3 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(FormInput, {\n        label: \"Images\",\n        type: \"textarea\",\n        value: formData.images,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            images: e.target.value\n          });\n        },\n        rows: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        label: \"Description\",\n        type: \"textarea\",\n        value: formData.description,\n        onChangeHandler: function onChangeHandler(e) {\n          return updateForm({\n            description: e.target.value\n          });\n        },\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  return AdminAddProduct;\n}(Component);\n\nexport default AdminAddProduct;","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminProduct/AdminAddProduct/AdminAddProduct.jsx"],"names":["React","Component","FormInput","AdminAddProduct","render","props","formData","updateForm","changeBranchHandler","changeIndustryHandler","branches","categories","brands","industries","product_name","e","target","value","price","amount","brand_id","map","brand","id","name","brand_name","industry_id","industry","industry_name","branch_id","branch","branch_name","category_id","category","category_name","images","description"],"mappings":"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","sourcesContent":["// Stylesheet\nimport React, { Component } from \"react\";\nimport \"./AdminAddProduct.scss\";\nimport FormInput from \"../../../common/FormInput\";\n\ntype Props = {\n    brands: Array<any>,\n    industries: Array<any>,\n    branches: Array<any>,\n    categories: Array<any>,\n    updateForm: Function,\n    editMode: Function,\n    formData: Function\n};\nclass AdminAddProduct extends Component<Props> {\n    render = () => {\n        const { formData, updateForm, changeBranchHandler, changeIndustryHandler, branches, categories, brands, industries } = this.props;\n\n        if (!branches || !categories || !brands || !industries) return \"\";\n        return (\n            <div>\n                <form>\n                    {/* PRODUCTNAME */}\n                    <div className=\"row\">\n                        <FormInput\n                            label=\"Product Name\"\n                            type=\"text\"\n                            value={formData.product_name}\n                            onChangeHandler={e =>\n                                updateForm({\n                                    product_name: e.target.value\n                                })\n                            }\n                            additionalClass=\"col-md-6 col-sm-6\"\n                        />\n\n                        {/* PRICE */}\n                        <FormInput\n                            label=\"Price\"\n                            type=\"text\"\n                            value={formData.price}\n                            onChangeHandler={e =>\n                                updateForm({\n                                    price: e.target.value\n                                })\n                            }\n                            additionalClass=\"col-md-3 col-sm-6\"\n                        />\n\n                        {/* AMOUNT */}\n                        <FormInput\n                            label=\"Amount\"\n                            type=\"text\"\n                            value={formData.amount}\n                            onChangeHandler={e =>\n                                updateForm({\n                                    amount: e.target.value\n                                })\n                            }\n                            additionalClass=\"col-md-3 col-sm-6\"\n                        />\n                    </div>\n\n                    <div className=\"row\">\n                        {/* BRAND */}\n                        <FormInput\n                            label=\"Brand\"\n                            type=\"select\"\n                            value={formData.brand_id}\n                            onChangeHandler={e =>\n                                updateForm({\n                                    brand_id: e.target.value\n                                })\n                            }\n                            options={brands && brands.map(brand => ({ value: brand.id, name: brand.brand_name }))}\n                            additionalClass=\"col-md-3 col-sm-6\"\n                        />\n\n                        {/* INDUSTRY */}\n                        <FormInput\n                            label=\"Industry\"\n                            type=\"select\"\n                            value={formData.industry_id}\n                            onChangeHandler={e => {\n                                updateForm({\n                                    industry_id: e.target.value\n                                });\n                                changeIndustryHandler(e.target.value);\n                            }}\n                            options={industries && industries.map(industry => ({ value: industry.id, name: industry.industry_name }))}\n                            additionalClass=\"col-md-3 col-sm-6\"\n                        />\n\n                        {/* BRANCH */}\n                        <FormInput\n                            label=\"Branch\"\n                            type=\"select\"\n                            value={formData.branch_id}\n                            onChangeHandler={e => {\n                                updateForm({\n                                    branch_id: e.target.value\n                                });\n                                changeBranchHandler(e.target.value);\n                            }}\n                            options={branches && branches.map(branch => ({ value: branch.id, name: branch.branch_name }))}\n                            additionalClass=\"col-md-3 col-sm-6\"\n                        />\n\n                        {/* CATEGORY */}\n                        <FormInput\n                            label=\"Category\"\n                            type=\"select\"\n                            value={formData.category_id}\n                            // innerHTML={formData.categoryName}\n                            onChangeHandler={e =>\n                                updateForm({\n                                    category_id: e.target.value\n                                })\n                            }\n                            options={categories && categories.map(category => ({ value: category.id, name: category.category_name }))}\n                            additionalClass=\"col-md-3 col-sm-6\"\n                        />\n                    </div>\n\n                    {/* Images */}\n                    <FormInput\n                        label=\"Images\"\n                        type=\"textarea\"\n                        value={formData.images}\n                        onChangeHandler={e =>\n                            updateForm({\n                                images: e.target.value\n                            })\n                        }\n                        rows=\"7\"\n                    />\n\n                    {/* DESCRIPTION */}\n                    <FormInput\n                        label=\"Description\"\n                        type=\"textarea\"\n                        value={formData.description}\n                        onChangeHandler={e =>\n                            updateForm({\n                                description: e.target.value\n                            })\n                        }\n                        rows=\"5\"\n                    />\n                </form>\n            </div>\n        );\n    };\n}\n\nexport default AdminAddProduct;\n"]},"metadata":{},"sourceType":"module"}
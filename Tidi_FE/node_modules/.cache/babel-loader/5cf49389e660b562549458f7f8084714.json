{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\nexports.requiredRoles = requiredRoles;\nexports.exclusiveRoles = exclusiveRoles;\n\nvar _reactPropTypesLibCommon = require('react-prop-types/lib/common');\n\nvar _ValidComponentChildren = require('./ValidComponentChildren');\n\nvar _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);\n\nfunction requiredRoles() {\n  for (var _len = arguments.length, roles = Array(_len), _key = 0; _key < _len; _key++) {\n    roles[_key] = arguments[_key];\n  }\n\n  return _reactPropTypesLibCommon.createChainableTypeChecker(function (props, propName, component) {\n    var missing = undefined;\n    roles.every(function (role) {\n      if (!_ValidComponentChildren2['default'].some(props.children, function (child) {\n        return child.props.bsRole === role;\n      })) {\n        missing = role;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (missing) {\n      return new Error('(children) ' + component + ' - Missing a required child with bsRole: ' + (missing + '. ' + component + ' must have at least one child of each of ') + ('the following bsRoles: ' + roles.join(', ')));\n    }\n\n    return null;\n  });\n}\n\nfunction exclusiveRoles() {\n  for (var _len2 = arguments.length, roles = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    roles[_key2] = arguments[_key2];\n  }\n\n  return _reactPropTypesLibCommon.createChainableTypeChecker(function (props, propName, component) {\n    var duplicate = undefined;\n    roles.every(function (role) {\n      var childrenWithRole = _ValidComponentChildren2['default'].filter(props.children, function (child) {\n        return child.props.bsRole === role;\n      });\n\n      if (childrenWithRole.length > 1) {\n        duplicate = role;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (duplicate) {\n      return new Error('(children) ' + component + ' - Duplicate children detected of bsRole: ' + (duplicate + '. Only one child each allowed with the following ') + ('bsRoles: ' + roles.join(', ')));\n    }\n\n    return null;\n  });\n}","map":null,"metadata":{},"sourceType":"script"}
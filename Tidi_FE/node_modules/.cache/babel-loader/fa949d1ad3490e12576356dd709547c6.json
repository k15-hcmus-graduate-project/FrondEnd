{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactPropTypesLibElementType = require('react-prop-types/lib/elementType');\n\nvar _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);\n\nvar _PaginationButton = require('./PaginationButton');\n\nvar _PaginationButton2 = _interopRequireDefault(_PaginationButton);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar propTypes = {\n  activePage: _react2['default'].PropTypes.number,\n  items: _react2['default'].PropTypes.number,\n  maxButtons: _react2['default'].PropTypes.number,\n\n  /**\n   * When `true`, will display the first and the last button page\n   */\n  boundaryLinks: _react2['default'].PropTypes.bool,\n\n  /**\n   * When `true`, will display the default node value ('&hellip;').\n   * Otherwise, will display provided node (when specified).\n   */\n  ellipsis: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n  /**\n   * When `true`, will display the default node value ('&laquo;').\n   * Otherwise, will display provided node (when specified).\n   */\n  first: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n  /**\n   * When `true`, will display the default node value ('&raquo;').\n   * Otherwise, will display provided node (when specified).\n   */\n  last: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n  /**\n   * When `true`, will display the default node value ('&lsaquo;').\n   * Otherwise, will display provided node (when specified).\n   */\n  prev: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n  /**\n   * When `true`, will display the default node value ('&rsaquo;').\n   * Otherwise, will display provided node (when specified).\n   */\n  next: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n  onSelect: _react2['default'].PropTypes.func,\n\n  /**\n   * You can use a custom element for the buttons\n   */\n  buttonComponentClass: _reactPropTypesLibElementType2['default']\n};\nvar defaultProps = {\n  activePage: 1,\n  items: 1,\n  maxButtons: 0,\n  first: false,\n  last: false,\n  prev: false,\n  next: false,\n  ellipsis: true,\n  boundaryLinks: false\n};\n\nvar Pagination = function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination() {\n    _classCallCheck(this, Pagination);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  Pagination.prototype.renderPageButtons = function renderPageButtons(activePage, items, maxButtons, boundaryLinks, ellipsis, buttonProps) {\n    var pageButtons = [];\n    var startPage = undefined;\n    var endPage = undefined;\n    var hasHiddenPagesAfter = undefined;\n\n    if (maxButtons) {\n      var hiddenPagesBefore = activePage - parseInt(maxButtons / 2, 10);\n      startPage = hiddenPagesBefore > 1 ? hiddenPagesBefore : 1;\n      hasHiddenPagesAfter = startPage + maxButtons <= items;\n\n      if (!hasHiddenPagesAfter) {\n        endPage = items;\n        startPage = items - maxButtons + 1;\n\n        if (startPage < 1) {\n          startPage = 1;\n        }\n      } else {\n        endPage = startPage + maxButtons - 1;\n      }\n    } else {\n      startPage = 1;\n      endPage = items;\n    }\n\n    for (var pagenumber = startPage; pagenumber <= endPage; pagenumber++) {\n      pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], _extends({}, buttonProps, {\n        key: pagenumber,\n        eventKey: pagenumber,\n        active: pagenumber === activePage\n      }), pagenumber));\n    }\n\n    if (boundaryLinks && ellipsis && startPage !== 1) {\n      pageButtons.unshift(_react2['default'].createElement(_PaginationButton2['default'], {\n        key: 'ellipsisFirst',\n        disabled: true,\n        componentClass: buttonProps.componentClass\n      }, _react2['default'].createElement('span', {\n        'aria-label': 'More'\n      }, ellipsis === true ? '…' : ellipsis)));\n      pageButtons.unshift(_react2['default'].createElement(_PaginationButton2['default'], _extends({}, buttonProps, {\n        key: 1,\n        eventKey: 1,\n        active: false\n      }), '1'));\n    }\n\n    if (maxButtons && hasHiddenPagesAfter && ellipsis) {\n      pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], {\n        key: 'ellipsis',\n        disabled: true,\n        componentClass: buttonProps.componentClass\n      }, _react2['default'].createElement('span', {\n        'aria-label': 'More'\n      }, ellipsis === true ? '…' : ellipsis)));\n\n      if (boundaryLinks && endPage !== items) {\n        pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], _extends({}, buttonProps, {\n          key: items,\n          eventKey: items,\n          active: false\n        }), items));\n      }\n    }\n\n    return pageButtons;\n  };\n\n  Pagination.prototype.render = function render() {\n    var _props = this.props;\n    var activePage = _props.activePage;\n    var items = _props.items;\n    var maxButtons = _props.maxButtons;\n    var boundaryLinks = _props.boundaryLinks;\n    var ellipsis = _props.ellipsis;\n    var first = _props.first;\n    var last = _props.last;\n    var prev = _props.prev;\n    var next = _props.next;\n    var onSelect = _props.onSelect;\n    var buttonComponentClass = _props.buttonComponentClass;\n    var className = _props.className;\n\n    var props = _objectWithoutProperties(_props, ['activePage', 'items', 'maxButtons', 'boundaryLinks', 'ellipsis', 'first', 'last', 'prev', 'next', 'onSelect', 'buttonComponentClass', 'className']);\n\n    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);\n\n    var bsProps = _splitBsProps[0];\n    var elementProps = _splitBsProps[1];\n\n    var classes = _utilsBootstrapUtils.getClassSet(bsProps);\n\n    var buttonProps = {\n      onSelect: onSelect,\n      componentClass: buttonComponentClass\n    };\n    return _react2['default'].createElement('ul', _extends({}, elementProps, {\n      className: _classnames2['default'](className, classes)\n    }), first && _react2['default'].createElement(_PaginationButton2['default'], _extends({}, buttonProps, {\n      eventKey: 1,\n      disabled: activePage === 1\n    }), _react2['default'].createElement('span', {\n      'aria-label': 'First'\n    }, first === true ? '«' : first)), prev && _react2['default'].createElement(_PaginationButton2['default'], _extends({}, buttonProps, {\n      eventKey: activePage - 1,\n      disabled: activePage === 1\n    }), _react2['default'].createElement('span', {\n      'aria-label': 'Previous'\n    }, prev === true ? '‹' : prev)), this.renderPageButtons(activePage, items, maxButtons, boundaryLinks, ellipsis, buttonProps), next && _react2['default'].createElement(_PaginationButton2['default'], _extends({}, buttonProps, {\n      eventKey: activePage + 1,\n      disabled: activePage >= items\n    }), _react2['default'].createElement('span', {\n      'aria-label': 'Next'\n    }, next === true ? '›' : next)), last && _react2['default'].createElement(_PaginationButton2['default'], _extends({}, buttonProps, {\n      eventKey: items,\n      disabled: activePage >= items\n    }), _react2['default'].createElement('span', {\n      'aria-label': 'Last'\n    }, last === true ? '»' : last)));\n  };\n\n  return Pagination;\n}(_react2['default'].Component);\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexports['default'] = _utilsBootstrapUtils.bsClass('pagination', Pagination);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
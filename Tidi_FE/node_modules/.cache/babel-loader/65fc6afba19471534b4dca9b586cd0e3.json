{"ast":null,"code":"/*:: type Task = {\n  task: () => Promise;\n  _completion: Promise\n};*/\n\"use strict\";\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\nvar _classCallCheck = require(\"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar TaskQueue =\n/*#__PURE__*/\nfunction () {\n  /*:: queue: Array<Task>;*/\n  function TaskQueue() {\n    _classCallCheck(this, TaskQueue);\n\n    this.queue = [];\n  }\n\n  _createClass(TaskQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(task\n    /*: () => Promise*/\n    )\n    /*: Promise*/\n    {\n      var _this = this;\n\n      var res;\n      var rej;\n      var taskComplete = new Promise(function (resolve, reject) {\n        res = resolve;\n        rej = reject;\n      });\n      taskComplete.resolve = res;\n      taskComplete.reject = rej;\n      this.queue.push({\n        task: task,\n        _completion: taskComplete\n      });\n\n      if (this.queue.length === 1) {\n        task().then(function () {\n          _this._dequeue();\n\n          taskComplete.resolve();\n        }, function (error) {\n          _this._dequeue();\n\n          taskComplete.reject(error);\n        });\n      }\n\n      return taskComplete;\n    }\n  }, {\n    key: \"_dequeue\",\n    value: function _dequeue() {\n      var _this2 = this;\n\n      this.queue.shift();\n\n      if (this.queue.length) {\n        var next = this.queue[0];\n        next.task().then(function () {\n          _this2._dequeue();\n\n          next._completion.resolve();\n        }, function (error) {\n          _this2._dequeue();\n\n          next._completion.reject(error);\n        });\n      }\n    }\n  }]);\n\n  return TaskQueue;\n}();\n\nmodule.exports = TaskQueue;","map":null,"metadata":{},"sourceType":"script"}
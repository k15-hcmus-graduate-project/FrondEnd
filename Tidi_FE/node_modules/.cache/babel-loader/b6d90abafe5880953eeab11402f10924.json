{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _utilsCreateChainedFunction = require('./utils/createChainedFunction');\n\nvar _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);\n\nvar propTypes = {\n  onClick: _react.PropTypes.func,\n\n  /**\n   * The toggle content, if left empty it will render the default toggle (seen above).\n   */\n  children: _react.PropTypes.node\n};\nvar contextTypes = {\n  $bs_navbar: _react.PropTypes.shape({\n    bsClass: _react.PropTypes.string,\n    expanded: _react.PropTypes.bool,\n    onToggle: _react.PropTypes.func.isRequired\n  })\n};\n\nvar NavbarToggle = function (_React$Component) {\n  _inherits(NavbarToggle, _React$Component);\n\n  function NavbarToggle() {\n    _classCallCheck(this, NavbarToggle);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  NavbarToggle.prototype.render = function render() {\n    var _props = this.props;\n    var onClick = _props.onClick;\n    var className = _props.className;\n    var children = _props.children;\n\n    var props = _objectWithoutProperties(_props, ['onClick', 'className', 'children']);\n\n    var navbarProps = this.context.$bs_navbar || {\n      bsClass: 'navbar'\n    };\n\n    var buttonProps = _extends({\n      type: 'button'\n    }, props, {\n      onClick: _utilsCreateChainedFunction2['default'](onClick, navbarProps.onToggle),\n      className: _classnames2['default'](className, _utilsBootstrapUtils.prefix(navbarProps, 'toggle'), !navbarProps.expanded && 'collapsed')\n    });\n\n    if (children) {\n      return _react2['default'].createElement('button', buttonProps, children);\n    }\n\n    return _react2['default'].createElement('button', buttonProps, _react2['default'].createElement('span', {\n      className: 'sr-only'\n    }, 'Toggle navigation'), _react2['default'].createElement('span', {\n      className: 'icon-bar'\n    }), _react2['default'].createElement('span', {\n      className: 'icon-bar'\n    }), _react2['default'].createElement('span', {\n      className: 'icon-bar'\n    }));\n  };\n\n  return NavbarToggle;\n}(_react2['default'].Component);\n\nNavbarToggle.propTypes = propTypes;\nNavbarToggle.contextTypes = contextTypes;\nexports['default'] = NavbarToggle;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
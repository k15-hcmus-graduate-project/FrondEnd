{"ast":null,"code":"import _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/direction/Directions/PlacePlanner.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Col, Row } from \"react-bootstrap\";\nimport PlaceSearch from \"./PlaceSearch.js\";\nimport axios from \"axios\";\n\nvar PlacePlanner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlacePlanner, _Component);\n\n  function PlacePlanner(props) {\n    var _this;\n\n    _classCallCheck(this, PlacePlanner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlacePlanner).call(this, props));\n\n    _this.componentDidMount = function () {\n      console.log(_this.props);\n    };\n\n    _this.addPlaces = function (idx, results, lat, lng) {\n      // Update places with new search results\n      var places = _this.state.places;\n      places[idx] = results; // Combine all results across searched places where a selection has\n      // not yet been made as our options for next destination\n\n      var options = [];\n\n      for (var p in places) {\n        if (typeof _this.state.selected[p] === \"undefined\") {\n          for (var o in places[p]) {\n            options.push({\n              lat: places[p][o].position[0],\n              lng: places[p][o].position[1],\n              id: places[p][o].id\n            });\n          }\n        }\n      } // Final option selected so no need to continue\n\n\n      if (options.length === 0) {\n        return;\n      } // Will build parameters including all of the potential destinations\n\n\n      var params = {\n        app_id: _this.state.app_id,\n        app_code: _this.state.app_code,\n        mode: \"fastest;car;traffic:enabled\",\n        matrixAttributes: \"ix,su\",\n        summaryattributes: \"all\",\n        start0: lat + \",\" + lng\n      };\n\n      for (var i = 0; i < options.length; i++) {\n        params[\"destination\" + i] = options[i].lat + \",\" + options[i].lng;\n      } // Calculate matrix routing among options to make a recommendation\n\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.get(\"https://matrix.route.api.here.com/routing/7.2/calculatematrix.json\", {\n        params: params\n      }).then(function (response) {\n        var matrix = response.data.response.matrixEntry;\n        var nearest = matrix[0].summary;\n        nearest[\"id\"] = options[0].id;\n\n        for (var i = 0; i < matrix.length; i++) {\n          if (matrix[i].summary.costFactor < nearest.costFactor) {\n            nearest = matrix[i].summary;\n            nearest.id = options[i].id;\n          }\n        }\n\n        self.setState({\n          nearest: nearest\n        });\n      }); // TODO: display costfactor / time estimate for next choice\n\n      _this.setState({\n        places: places\n      });\n    };\n\n    _this.findNearest = function (idx) {\n      var selected = _this.state.selected;\n      selected[idx] = true;\n\n      _this.setState({\n        selected: selected\n      });\n\n      _this.addPlaces(idx, [], _this.props.lat, _this.props.lng);\n    };\n\n    _this.render = function () {\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 3,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(PlaceSearch, {\n        idx: 0,\n        app_id: _this.state.app_id,\n        app_code: _this.state.app_code,\n        lat: _this.props.lat,\n        lng: _this.props.lng,\n        nearest: _this.state.nearest.id,\n        addPlaces: _this.addPlaces,\n        findNearest: _this.findNearest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 3,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(PlaceSearch, {\n        idx: 1,\n        app_id: _this.state.app_id,\n        app_code: _this.state.app_code,\n        lat: _this.props.lat,\n        lng: _this.props.lng,\n        nearest: _this.state.nearest.id,\n        addPlaces: _this.addPlaces,\n        findNearest: _this.findNearest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 3,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(PlaceSearch, {\n        idx: 2,\n        app_id: _this.state.app_id,\n        app_code: _this.state.app_code,\n        lat: _this.props.lat,\n        lng: _this.props.lng,\n        nearest: _this.state.nearest.id,\n        addPlaces: _this.addPlaces,\n        findNearest: _this.findNearest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 3,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(PlaceSearch, {\n        idx: 3,\n        app_id: _this.state.app_id,\n        app_code: _this.state.app_code,\n        lat: _this.props.lat,\n        lng: _this.props.lng,\n        nearest: _this.state.nearest.id,\n        addPlaces: _this.addPlaces,\n        findNearest: _this.findNearest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))));\n    };\n\n    _this.state = {\n      app_id: props.app_id,\n      app_code: props.app_code,\n      places: {},\n      selected: {},\n      nearest: {}\n    };\n    return _this;\n  }\n\n  return PlacePlanner;\n}(Component);\n\nexport default PlacePlanner;","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/direction/Directions/PlacePlanner.js"],"names":["React","Component","Grid","Col","Row","PlaceSearch","axios","PlacePlanner","props","componentDidMount","console","log","addPlaces","idx","results","lat","lng","places","state","options","p","selected","o","push","position","id","length","params","app_id","app_code","mode","matrixAttributes","summaryattributes","start0","i","self","get","then","response","matrix","data","matrixEntry","nearest","summary","costFactor","setState","findNearest","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Col, Row } from \"react-bootstrap\";\nimport PlaceSearch from \"./PlaceSearch.js\";\nimport axios from \"axios\";\n\nclass PlacePlanner extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            app_id: props.app_id,\n            app_code: props.app_code,\n            places: {},\n            selected: {},\n            nearest: {}\n        };\n    }\n\n    componentDidMount = () => {\n        console.log(this.props);\n    };\n    addPlaces = (idx, results, lat, lng) => {\n        // Update places with new search results\n        let places = this.state.places;\n        places[idx] = results;\n\n        // Combine all results across searched places where a selection has\n        // not yet been made as our options for next destination\n        let options = [];\n        for (var p in places) {\n            if (typeof this.state.selected[p] === \"undefined\") {\n                for (var o in places[p]) {\n                    options.push({\n                        lat: places[p][o].position[0],\n                        lng: places[p][o].position[1],\n                        id: places[p][o].id\n                    });\n                }\n            }\n        }\n\n        // Final option selected so no need to continue\n        if (options.length === 0) {\n            return;\n        }\n\n        // Will build parameters including all of the potential destinations\n        let params = {\n            app_id: this.state.app_id,\n            app_code: this.state.app_code,\n            mode: \"fastest;car;traffic:enabled\",\n            matrixAttributes: \"ix,su\",\n            summaryattributes: \"all\",\n            start0: lat + \",\" + lng\n        };\n        for (var i = 0; i < options.length; i++) {\n            params[\"destination\" + i] = options[i].lat + \",\" + options[i].lng;\n        }\n\n        // Calculate matrix routing among options to make a recommendation\n        const self = this;\n        axios.get(\"https://matrix.route.api.here.com/routing/7.2/calculatematrix.json\", { params: params }).then(function(response) {\n            const matrix = response.data.response.matrixEntry;\n\n            let nearest = matrix[0].summary;\n            nearest[\"id\"] = options[0].id;\n\n            for (var i = 0; i < matrix.length; i++) {\n                if (matrix[i].summary.costFactor < nearest.costFactor) {\n                    nearest = matrix[i].summary;\n                    nearest.id = options[i].id;\n                }\n            }\n            self.setState({\n                nearest: nearest\n            });\n        });\n\n        // TODO: display costfactor / time estimate for next choice\n\n        this.setState({ places: places });\n    };\n\n    findNearest = idx => {\n        let selected = this.state.selected;\n        selected[idx] = true;\n        this.setState({\n            selected: selected\n        });\n        this.addPlaces(idx, [], this.props.lat, this.props.lng);\n    };\n\n    render = () => {\n        return (\n            <Grid>\n                <Row>\n                    <Col xs={3} md={3}>\n                        <PlaceSearch\n                            idx={0}\n                            app_id={this.state.app_id}\n                            app_code={this.state.app_code}\n                            lat={this.props.lat}\n                            lng={this.props.lng}\n                            nearest={this.state.nearest.id}\n                            addPlaces={this.addPlaces}\n                            findNearest={this.findNearest}\n                        />\n                    </Col>\n                    <Col xs={3} md={3}>\n                        <PlaceSearch\n                            idx={1}\n                            app_id={this.state.app_id}\n                            app_code={this.state.app_code}\n                            lat={this.props.lat}\n                            lng={this.props.lng}\n                            nearest={this.state.nearest.id}\n                            addPlaces={this.addPlaces}\n                            findNearest={this.findNearest}\n                        />\n                    </Col>\n                    <Col xs={3} md={3}>\n                        <PlaceSearch\n                            idx={2}\n                            app_id={this.state.app_id}\n                            app_code={this.state.app_code}\n                            lat={this.props.lat}\n                            lng={this.props.lng}\n                            nearest={this.state.nearest.id}\n                            addPlaces={this.addPlaces}\n                            findNearest={this.findNearest}\n                        />\n                    </Col>\n                    <Col xs={3} md={3}>\n                        <PlaceSearch\n                            idx={3}\n                            app_id={this.state.app_id}\n                            app_code={this.state.app_code}\n                            lat={this.props.lat}\n                            lng={this.props.lng}\n                            nearest={this.state.nearest.id}\n                            addPlaces={this.addPlaces}\n                            findNearest={this.findNearest}\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    };\n}\n\nexport default PlacePlanner;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/checkout/CheckoutDetail/CheckoutDetail.jsx\";\n// Stylesheet\nimport React, { Component } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./CheckoutDetail.scss\";\nimport WebService from \"../../../services/WebService\";\nimport AuthService from \"../../../services/AuthService\";\nimport { PAYMENT_METHOD, ACTIVE_TYPE } from \"../../../config/constants\";\nimport { ROUTE_NAME } from \"../../../routes/main.routing\";\nimport LIB, { withCommas } from \"../../../helpers/lib\";\nimport FormInput from \"../../common/FormInput\";\nvar INITIAL_STATE = {\n  fullName: \"\",\n  address: \"\",\n  phoneNumber: \"\",\n  email: \"\",\n  shippingNote: \"\",\n  shippingFee: null,\n  shippingMethod: {},\n  couponCode: \"\",\n  fullNameIsInvalid: false,\n  shippingMethodIsInvalid: false,\n  emailIsInvalid: false,\n  addressIsInvalid: false,\n  phoneNumberIsInvalid: false,\n  errorMessage: \"\",\n  couponMessage: \"\",\n  couponStatusCode: null,\n  couponDiscPercent: 0,\n  couponMoney: 0,\n  redirectTo: null\n};\nvar INTERNAL_CONFIG = {\n  INTERVAL_DURATION: 1000,\n  SWAL_TIMEOUT: 10000\n};\n\nvar CheckoutDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckoutDetail, _Component);\n\n  function CheckoutDetail(props) {\n    var _this;\n\n    _classCallCheck(this, CheckoutDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckoutDetail).call(this, props));\n\n    _this.componentWillMount = function () {\n      _this.fetchCartProducts();\n\n      _this.fetchUserInfo();\n    };\n\n    _this.fetchCartProducts = function () {\n      var _this$props = _this.props,\n          isLoggedIn = _this$props.isLoggedIn,\n          updateCartProducts = _this$props.updateCartProducts;\n\n      if (isLoggedIn) {\n        return WebService.getCart(AuthService.getTokenUnsafe()).then(function (res) {\n          var result = JSON.parse(res);\n\n          if (result.status === true) {\n            if (result.products) {\n              result.products.forEach(function (prd) {\n                return prd.images = JSON.parse(prd.images);\n              });\n            }\n\n            updateCartProducts(result.products);\n          }\n        });\n      } else {\n        return Promise.reject(\"Refresh cart failed\");\n      }\n    };\n\n    _this.fetchUserInfo = function () {\n      var _this$state = _this.state,\n          address = _this$state.address,\n          phoneNumber = _this$state.phoneNumber;\n      WebService.readAccountInfo(AuthService.getTokenUnsafe()).then(function (response) {\n        var res = JSON.parse(response);\n\n        if (res.status === true) {\n          _this.setState({\n            fullName: res.fullName ? res.fullName : \"\",\n            address: res.address ? res.address : \"\",\n            phoneNumber: res.phone ? res.phone : \"\",\n            email: res.email ? res.email : \"\"\n          });\n\n          if (address === \"\") _this.setState({\n            addressIsInvalid: true\n          });\n          if (phoneNumber === \"\") _this.setState({\n            phoneNumberIsInvalid: true\n          });\n        } else {\n          _this.setState({\n            redirectTo: React.createElement(Redirect, {\n              to: ROUTE_NAME.PRODUCTS,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            })\n          });\n        }\n      });\n    };\n\n    _this.placeOrder = function () {\n      return new Promise(function (resolve, _reject) {\n        // console.log(this.state);\n        var products = [];\n        var cartItems = _this.props.cartItems;\n\n        if (cartItems) {\n          cartItems.map(function (item) {\n            return products.push({\n              proID: item.id,\n              price: item.price,\n              amount: item.amount\n            });\n          });\n        }\n\n        var _this$state2 = _this.state,\n            couponCode = _this$state2.couponCode,\n            fullName = _this$state2.fullName,\n            phoneNumber = _this$state2.phoneNumber,\n            email = _this$state2.email,\n            address = _this$state2.address,\n            shippingNote = _this$state2.shippingNote,\n            shippingMethod = _this$state2.shippingMethod;\n        WebService.toCheckout(AuthService.getTokenUnsafe(), couponCode, fullName, phoneNumber, email, address, shippingNote, _this.total, _this.discountTotal, products, shippingMethod.NAME).then(function (res) {\n          var result = JSON.parse(res);\n          console.log(result);\n\n          if (result.status === ACTIVE_TYPE.TRUE) {\n            resolve({\n              status: true,\n              payload: result\n            });\n          } else {\n            resolve({\n              status: false,\n              message: result.message,\n              payload: result\n            });\n          }\n        }).catch(function (res) {\n          var result = JSON.parse(res);\n          resolve({\n            status: false,\n            message: result.message,\n            payload: result\n          });\n        });\n      });\n    };\n\n    _this.handleApplyCoupon = function () {\n      var _this$state3 = _this.state,\n          couponCode = _this$state3.couponCode,\n          couponStatusCode = _this$state3.couponStatusCode;\n\n      if (couponCode && couponStatusCode !== 1) {\n        WebService.getCouponStatus(couponCode).then(function (res) {\n          var result = JSON.parse(res);\n          var couponMessage = \"\";\n\n          switch (result.status) {\n            case -1:\n              couponMessage = \"Coupon is invalid\";\n              break;\n\n            case 0:\n              couponMessage = \"Coupon is expired\";\n              break;\n\n            case 1:\n              couponMessage = \"Coupon is applied\";\n              break;\n\n            default:\n              break;\n          }\n\n          _this.setState({\n            couponMessage: couponMessage,\n            couponStatusCode: result.status,\n            couponDiscPercent: result.discPercent,\n            couponMoney: result.money\n          });\n        });\n      } else if (couponStatusCode === 1) {\n        _this.setState({\n          couponCode: INITIAL_STATE.couponCode,\n          couponStatusCode: INITIAL_STATE.couponStatusCode,\n          couponMessage: INITIAL_STATE.couponMessage,\n          couponDiscPercent: INITIAL_STATE.couponDiscPercent,\n          couponMoney: INITIAL_STATE.couponMoney\n        });\n      }\n    };\n\n    _this.handleOrder = function () {\n      var _this$state4 = _this.state,\n          shippingMethod = _this$state4.shippingMethod,\n          fullName = _this$state4.fullName,\n          email = _this$state4.email,\n          address = _this$state4.address,\n          phoneNumber = _this$state4.phoneNumber;\n\n      if (!shippingMethod.NAME) {\n        _this.setState({\n          shippingMethodIsInvalid: true,\n          errorMessage: \"Please choose a shipping method\"\n        });\n      } else if (!fullName) {\n        _this.setState({\n          fullNameIsInvalid: true,\n          errorMessage: \"Please enter your name\"\n        });\n      } else if (!email) {\n        _this.setState({\n          emailIsInvalid: true,\n          errorMessage: \"Please enter your email\"\n        });\n      } else if (!address) {\n        _this.setState({\n          addressIsInvalid: true,\n          errorMessage: \"Please enter your address\"\n        });\n      } else if (!phoneNumber) {\n        _this.setState({\n          phoneNumberIsInvalid: true,\n          errorMessage: \"Please enter your phone number\"\n        });\n      } else {\n        Swal({\n          title: \"Ordering...\",\n          timer: INTERNAL_CONFIG.SWAL_TIMEOUT,\n          allowOutsideClick: false,\n          onOpen: function onOpen() {\n            Swal.showLoading();\n\n            _this.placeOrder().then(function (res) {\n              if (res.status === true) {\n                // Order on AppServer successfully\n                console.log(PAYMENT_METHOD[0].NAME, shippingMethod.NAME);\n                Swal({\n                  type: \"success\",\n                  title: \"Yayy!!\",\n                  text: \"You ordered successfully.\",\n                  onClose: function onClose() {\n                    _this.fetchCartProducts();\n\n                    _this.setState({\n                      redirectTo: React.createElement(Redirect, {\n                        to: ROUTE_NAME.PRODUCTS,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 240\n                        },\n                        __self: this\n                      })\n                    });\n                  }\n                });\n              } else {\n                console.log(res);\n                Swal({\n                  type: \"error\",\n                  title: \"Oops...\",\n                  text: \"\".concat(res.message)\n                });\n              }\n            });\n          }\n        }).then(function (modalInfo) {\n          if (modalInfo.dismiss === Swal.DismissReason.timer) {\n            Swal({\n              type: \"question\",\n              title: \"Noo...\",\n              text: \"Server time out! Please try again later.\"\n            });\n          }\n        });\n      }\n    };\n\n    _this.handleShippingMethodSelect = function (method) {\n      _this.setState({\n        shippingMethod: method,\n        shippingFee: method.SHIPPING_FEE,\n        shippingMethodIsInvalid: false,\n        errorMessage: \"\"\n      });\n    };\n\n    _this.generatePaymentMethods = function () {\n      return PAYMENT_METHOD.map(function (method, index) {\n        return React.createElement(PaymentMethod, {\n          key: index,\n          methodName: method.NAME,\n          description: method.DESCRIPTION,\n          fee: method.SHIPPING_FEE,\n          handleOnSelect: function handleOnSelect() {\n            return _this.handleShippingMethodSelect(method);\n          },\n          isSelected: method.NAME === _this.state.shippingMethod.NAME,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.generateCartItemList = function () {\n      var cartItems = _this.props.cartItems;\n      var _this$state5 = _this.state,\n          couponDiscPercent = _this$state5.couponDiscPercent,\n          couponMoney = _this$state5.couponMoney;\n      if (parseFloat(couponDiscPercent) > 1) _this.setState({\n        couponDiscPercent: 0\n      });\n      var totalPrice = 0;\n      var discountTotal = 0;\n      var itemElements = cartItems.map(function (cartItem, index) {\n        var price = cartItem.price - cartItem.price * cartItem.discPercent;\n        var discountPrice;\n        discountPrice = price - price * couponDiscPercent - couponMoney;\n        totalPrice += price * cartItem.amount;\n        discountTotal += discountPrice * cartItem.amount;\n        return React.createElement(\"li\", {\n          key: index,\n          className: \"item-product-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \"[\".concat(cartItem.amount, \"] \").concat(cartItem.product_name)), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \"\".concat(withCommas(Math.round(price)), \" \\u20AB\")));\n      });\n      _this.total = totalPrice;\n      _this.discountTotal = discountTotal;\n      return itemElements;\n    };\n\n    _this.render = function () {\n      var _this$state6 = _this.state,\n          redirectTo = _this$state6.redirectTo,\n          fullNameIsInvalid = _this$state6.fullNameIsInvalid,\n          fullName = _this$state6.fullName,\n          emailIsInvalid = _this$state6.emailIsInvalid,\n          email = _this$state6.email,\n          addressIsInvalid = _this$state6.addressIsInvalid,\n          phoneNumberIsInvalid = _this$state6.phoneNumberIsInvalid,\n          couponMessage = _this$state6.couponMessage,\n          phoneNumber = _this$state6.phoneNumber,\n          address = _this$state6.address,\n          shippingNote = _this$state6.shippingNote,\n          shippingFee = _this$state6.shippingFee,\n          couponStatusCode = _this$state6.couponStatusCode,\n          couponCode = _this$state6.couponCode,\n          shippingMethodIsInvalid = _this$state6.shippingMethodIsInvalid,\n          errorMessage = _this$state6.errorMessage;\n      var cartItems = _this.props.cartItems;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, redirectTo, React.createElement(\"div\", {\n        className: \"breadcumb_area bg-img\",\n        style: {\n          backgroundImage: \"url(/img/bg-img/breadcumb.jpg)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row h-100 align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-title text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Checkout\")))))), React.createElement(\"div\", {\n        className: \"checkout_area section-padding-80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"checkout_details_area mt-50 clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cart-page-heading mb-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Billing Address\")), React.createElement(\"form\", {\n        action: \"#\",\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Fullname \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\" + (fullNameIsInvalid ? \" is-invalid\" : \"\"),\n        id: \"full_name\",\n        required: true,\n        value: fullName,\n        onChange: function onChange(e) {\n          if (e.currentTarget.value === \"\") _this.setState({\n            fullName: e.target.value,\n            fullNameIsInvalid: true\n          });else _this.setState({\n            fullName: e.target.value,\n            fullNameIsInvalid: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-12 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email_address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Email \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\" + (emailIsInvalid ? \" is-invalid\" : \"\"),\n        id: \"email_address\",\n        value: email,\n        onChange: function onChange(e) {\n          if (e.currentTarget.value === \"\") _this.setState({\n            email: e.target.value,\n            emailIsInvalid: true\n          });else _this.setState({\n            email: e.target.value,\n            emailIsInvalid: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-12 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"street_address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Billing Address \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-3\" + (addressIsInvalid ? \" is-invalid\" : \"\"),\n        id: \"street_address\",\n        value: address,\n        onChange: function onChange(e) {\n          if (!e.target.value || e.target.value === \"\") _this.setState({\n            address: e.target.value,\n            addressIsInvalid: true\n          });else _this.setState({\n            address: e.target.value,\n            addressIsInvalid: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-12 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"phone_number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Phone No \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\" + (phoneNumberIsInvalid ? \" is-invalid\" : \"\"),\n        id: \"phone_number\",\n        min: \"0\",\n        value: phoneNumber,\n        onChange: function onChange(e) {\n          if (!e.target.value || e.target.value === \"\") _this.setState({\n            phoneNumber: e.target.value,\n            phoneNumberIsInvalid: true\n          });else _this.setState({\n            phoneNumber: e.target.value,\n            phoneNumberIsInvalid: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-12 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"shipping_note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"Note \"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        id: \"shipping_note\",\n        value: shippingNote,\n        onChange: function onChange(e) {\n          return _this.setState({\n            shippingNote: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox d-block mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: \"customCheck1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"customCheck1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, \"Terms and conitions\"))))))), React.createElement(\"div\", {\n        className: \"col-12 col-md-6 col-lg-5 ml-lg-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"order-details-confirmation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, cartItems && cartItems.length > 0 ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"cart-page-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"Your Order\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"The Details\")), React.createElement(\"ul\", {\n        className: \"order-details-form mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"item-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Product\"), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Price\")), _this.generateCartItemList(), React.createElement(\"li\", {\n        className: \"item-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, \"Shipping\"), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"\".concat(!shippingFee ? \"FREE\" : withCommas(shippingFee)))), React.createElement(\"li\", {\n        className: \"item-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5 d-flex align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"COUPON\")), React.createElement(FormInput, {\n        type: \"text\",\n        additionalClass: \"col-md-5 mb-0\",\n        value: couponCode.toUpperCase(),\n        onChangeHandler: function onChangeHandler(e) {\n          _this.setState({\n            couponCode: e.target.value\n          });\n        },\n        disabled: couponStatusCode === 1 ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"col-md-2 btn btn-sm\" + (couponStatusCode === 1 ? \" btn-danger\" : \" btn-info\"),\n        onClick: _this.handleApplyCoupon,\n        disabled: !couponCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, couponStatusCode === 1 ? \"Cancel\" : \"Apply\"), React.createElement(\"div\", {\n        className: \"col-md-12 coupon-status-message text-right\",\n        style: {\n          color: couponStatusCode === 1 ? \"green\" : \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, couponMessage))), React.createElement(\"li\", {\n        className: \"total-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, \"Total\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: _this.discountTotal !== _this.total ? \"old-price\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"\".concat(withCommas(Math.round(_this.total + shippingFee)), \" \\u20AB\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }), _this.discountTotal !== _this.total ? \"\".concat(withCommas(Math.round(_this.discountTotal + shippingFee)), \" \\u20AB\") : \"\"))), React.createElement(\"div\", {\n        id: \"accordion\",\n        role: \"tablist\",\n        className: \"mb-4 form-control shipping-method-container\" + (shippingMethodIsInvalid ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, _this.generatePaymentMethods()), React.createElement(\"div\", {\n        className: \"error-message d-flex justicy-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, errorMessage), React.createElement(\"button\", {\n        className: \"btn essence-btn\",\n        onClick: function onClick() {\n          return _this.handleOrder();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, \"Place Order\")) : React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"Cart is Empty!\")))))));\n    };\n\n    _this.state = INITIAL_STATE;\n    _this.total = 0;\n    _this.discountTotal = 0;\n    _this.zalopayOrderId = null;\n    _this.zptranstoken = null;\n    _this.checkStatusInterval = null;\n    return _this;\n  }\n\n  return CheckoutDetail;\n}(Component);\n\nCheckoutDetail.propTypes = {\n  isLoggedIn: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  cartItems: PropTypes.array,\n  updateCartProducts: PropTypes.func,\n  handleOnSelect: PropTypes.func\n};\n\nvar PaymentMethod =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(PaymentMethod, _Component2);\n\n  function PaymentMethod() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, PaymentMethod);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PaymentMethod)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this2.render = function () {\n      var collapseId = LIB.generateRandomString();\n      var _this2$props = _this2.props,\n          isSelected = _this2$props.isSelected,\n          methodName = _this2$props.methodName,\n          description = _this2$props.description,\n          fee = _this2$props.fee,\n          handleOnSelect = _this2$props.handleOnSelect;\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        role: \"tab\",\n        id: \"headingOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"shipping-method-name \" + (isSelected ? \"shippingmethod-selected\" : \"\"),\n        \"data-toggle\": \"collapse\",\n        href: \"#\" + collapseId,\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": collapseId,\n        onClick: handleOnSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa mr-3\" + (isSelected ? \" fa-check-square\" : \" fa-square-o\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }), methodName))), React.createElement(\"div\", {\n        id: collapseId,\n        className: \"collapse\",\n        role: \"tabpanel\",\n        \"aria-labelledby\": \"headingOne\",\n        \"data-parent\": \"#accordion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, description), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"FEE: \"), withCommas(Math.round(fee)), \" \\u20AB\"))));\n    };\n\n    return _this2;\n  }\n\n  return PaymentMethod;\n}(Component);\n\nexport default CheckoutDetail;","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/checkout/CheckoutDetail/CheckoutDetail.jsx"],"names":["React","Component","Swal","Redirect","PropTypes","WebService","AuthService","PAYMENT_METHOD","ACTIVE_TYPE","ROUTE_NAME","LIB","withCommas","FormInput","INITIAL_STATE","fullName","address","phoneNumber","email","shippingNote","shippingFee","shippingMethod","couponCode","fullNameIsInvalid","shippingMethodIsInvalid","emailIsInvalid","addressIsInvalid","phoneNumberIsInvalid","errorMessage","couponMessage","couponStatusCode","couponDiscPercent","couponMoney","redirectTo","INTERNAL_CONFIG","INTERVAL_DURATION","SWAL_TIMEOUT","CheckoutDetail","props","componentWillMount","fetchCartProducts","fetchUserInfo","isLoggedIn","updateCartProducts","getCart","getTokenUnsafe","then","res","result","JSON","parse","status","products","forEach","prd","images","Promise","reject","state","readAccountInfo","response","setState","phone","PRODUCTS","placeOrder","resolve","_reject","cartItems","map","item","push","proID","id","price","amount","toCheckout","total","discountTotal","NAME","console","log","TRUE","payload","message","catch","handleApplyCoupon","getCouponStatus","discPercent","money","handleOrder","title","timer","allowOutsideClick","onOpen","showLoading","type","text","onClose","modalInfo","dismiss","DismissReason","handleShippingMethodSelect","method","SHIPPING_FEE","generatePaymentMethods","index","DESCRIPTION","generateCartItemList","parseFloat","totalPrice","itemElements","cartItem","discountPrice","product_name","Math","round","render","backgroundImage","e","currentTarget","value","target","length","toUpperCase","color","zalopayOrderId","zptranstoken","checkStatusInterval","propTypes","bool","isSelected","array","func","handleOnSelect","PaymentMethod","collapseId","generateRandomString","methodName","description","fee"],"mappings":"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","sourcesContent":["// Stylesheet\nimport React, { Component } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./CheckoutDetail.scss\";\nimport WebService from \"../../../services/WebService\";\nimport AuthService from \"../../../services/AuthService\";\nimport { PAYMENT_METHOD, ACTIVE_TYPE } from \"../../../config/constants\";\nimport { ROUTE_NAME } from \"../../../routes/main.routing\";\nimport LIB, { withCommas } from \"../../../helpers/lib\";\nimport FormInput from \"../../common/FormInput\";\n\nconst INITIAL_STATE = {\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    shippingNote: \"\",\n    shippingFee: null,\n    shippingMethod: {},\n    couponCode: \"\",\n\n    fullNameIsInvalid: false,\n    shippingMethodIsInvalid: false,\n    emailIsInvalid: false,\n    addressIsInvalid: false,\n    phoneNumberIsInvalid: false,\n    errorMessage: \"\",\n    couponMessage: \"\",\n    couponStatusCode: null,\n    couponDiscPercent: 0,\n    couponMoney: 0,\n    redirectTo: null\n};\n\nconst INTERNAL_CONFIG = {\n    INTERVAL_DURATION: 1000,\n    SWAL_TIMEOUT: 10000\n};\n\nclass CheckoutDetail extends Component {\n    static propTypes = {\n        isLoggedIn: PropTypes.bool,\n        isSelected: PropTypes.bool,\n        cartItems: PropTypes.array,\n        updateCartProducts: PropTypes.func,\n        handleOnSelect: PropTypes.func\n    };\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = INITIAL_STATE;\n        this.total = 0;\n        this.discountTotal = 0;\n        this.zalopayOrderId = null;\n        this.zptranstoken = null;\n        this.checkStatusInterval = null;\n    }\n\n    componentWillMount = () => {\n        this.fetchCartProducts();\n        this.fetchUserInfo();\n    };\n\n    fetchCartProducts = () => {\n        const { isLoggedIn, updateCartProducts } = this.props;\n        if (isLoggedIn) {\n            return WebService.getCart(AuthService.getTokenUnsafe()).then(res => {\n                const result = JSON.parse(res);\n                if (result.status === true) {\n                    if (result.products) {\n                        result.products.forEach(prd => (prd.images = JSON.parse(prd.images)));\n                    }\n                    updateCartProducts(result.products);\n                }\n            });\n        } else {\n            return Promise.reject(\"Refresh cart failed\");\n        }\n    };\n\n    fetchUserInfo = () => {\n        const { address, phoneNumber } = this.state;\n        WebService.readAccountInfo(AuthService.getTokenUnsafe()).then(response => {\n            let res = JSON.parse(response);\n            if (res.status === true) {\n                this.setState({\n                    fullName: res.fullName ? res.fullName : \"\",\n                    address: res.address ? res.address : \"\",\n                    phoneNumber: res.phone ? res.phone : \"\",\n                    email: res.email ? res.email : \"\"\n                });\n                if (address === \"\") this.setState({ addressIsInvalid: true });\n                if (phoneNumber === \"\") this.setState({ phoneNumberIsInvalid: true });\n            } else {\n                this.setState({\n                    redirectTo: <Redirect to={ROUTE_NAME.PRODUCTS} />\n                });\n            }\n        });\n    };\n\n    placeOrder = () => {\n        return new Promise((resolve, _reject) => {\n            // console.log(this.state);\n            let products = [];\n            const { cartItems } = this.props;\n            if (cartItems) {\n                cartItems.map(item => {\n                    return products.push({ proID: item.id, price: item.price, amount: item.amount });\n                });\n            }\n            const { couponCode, fullName, phoneNumber, email, address, shippingNote, shippingMethod } = this.state;\n            WebService.toCheckout(\n                AuthService.getTokenUnsafe(),\n                couponCode,\n                fullName,\n                phoneNumber,\n                email,\n                address,\n                shippingNote,\n                this.total,\n                this.discountTotal,\n                products,\n                shippingMethod.NAME\n            )\n                .then(res => {\n                    const result = JSON.parse(res);\n                    console.log(result);\n                    if (result.status === ACTIVE_TYPE.TRUE) {\n                        resolve({\n                            status: true,\n                            payload: result\n                        });\n                    } else {\n                        resolve({\n                            status: false,\n                            message: result.message,\n                            payload: result\n                        });\n                    }\n                })\n                .catch(res => {\n                    const result = JSON.parse(res);\n                    resolve({\n                        status: false,\n                        message: result.message,\n                        payload: result\n                    });\n                });\n        });\n    };\n\n    handleApplyCoupon = () => {\n        const { couponCode, couponStatusCode } = this.state;\n        if (couponCode && couponStatusCode !== 1) {\n            WebService.getCouponStatus(couponCode).then(res => {\n                const result = JSON.parse(res);\n                let couponMessage = \"\";\n                switch (result.status) {\n                    case -1:\n                        couponMessage = \"Coupon is invalid\";\n                        break;\n                    case 0:\n                        couponMessage = \"Coupon is expired\";\n                        break;\n                    case 1:\n                        couponMessage = \"Coupon is applied\";\n                        break;\n\n                    default:\n                        break;\n                }\n\n                this.setState({\n                    couponMessage,\n                    couponStatusCode: result.status,\n                    couponDiscPercent: result.discPercent,\n                    couponMoney: result.money\n                });\n            });\n        } else if (couponStatusCode === 1) {\n            this.setState({\n                couponCode: INITIAL_STATE.couponCode,\n                couponStatusCode: INITIAL_STATE.couponStatusCode,\n                couponMessage: INITIAL_STATE.couponMessage,\n                couponDiscPercent: INITIAL_STATE.couponDiscPercent,\n                couponMoney: INITIAL_STATE.couponMoney\n            });\n        }\n    };\n\n    handleOrder = () => {\n        const { shippingMethod, fullName, email, address, phoneNumber } = this.state;\n        if (!shippingMethod.NAME) {\n            this.setState({\n                shippingMethodIsInvalid: true,\n                errorMessage: \"Please choose a shipping method\"\n            });\n        } else if (!fullName) {\n            this.setState({\n                fullNameIsInvalid: true,\n                errorMessage: \"Please enter your name\"\n            });\n        } else if (!email) {\n            this.setState({\n                emailIsInvalid: true,\n                errorMessage: \"Please enter your email\"\n            });\n        } else if (!address) {\n            this.setState({\n                addressIsInvalid: true,\n                errorMessage: \"Please enter your address\"\n            });\n        } else if (!phoneNumber) {\n            this.setState({\n                phoneNumberIsInvalid: true,\n                errorMessage: \"Please enter your phone number\"\n            });\n        } else {\n            Swal({\n                title: \"Ordering...\",\n                timer: INTERNAL_CONFIG.SWAL_TIMEOUT,\n                allowOutsideClick: false,\n                onOpen: () => {\n                    Swal.showLoading();\n                    this.placeOrder().then(res => {\n                        if (res.status === true) {\n                            // Order on AppServer successfully\n                            console.log(PAYMENT_METHOD[0].NAME, shippingMethod.NAME);\n                            Swal({\n                                type: \"success\",\n                                title: \"Yayy!!\",\n                                text: `You ordered successfully.`,\n                                onClose: () => {\n                                    this.fetchCartProducts();\n                                    this.setState({\n                                        redirectTo: <Redirect to={ROUTE_NAME.PRODUCTS} />\n                                    });\n                                }\n                            });\n                        } else {\n                            console.log(res);\n                            Swal({\n                                type: \"error\",\n                                title: \"Oops...\",\n                                text: `${res.message}`\n                            });\n                        }\n                    });\n                }\n            }).then(modalInfo => {\n                if (modalInfo.dismiss === Swal.DismissReason.timer) {\n                    Swal({\n                        type: \"question\",\n                        title: \"Noo...\",\n                        text: `Server time out! Please try again later.`\n                    });\n                }\n            });\n        }\n    };\n\n    handleShippingMethodSelect = method => {\n        this.setState({\n            shippingMethod: method,\n            shippingFee: method.SHIPPING_FEE,\n            shippingMethodIsInvalid: false,\n            errorMessage: \"\"\n        });\n    };\n\n    generatePaymentMethods = () => {\n        return PAYMENT_METHOD.map((method, index) => (\n            <PaymentMethod\n                key={index}\n                methodName={method.NAME}\n                description={method.DESCRIPTION}\n                fee={method.SHIPPING_FEE}\n                handleOnSelect={() => this.handleShippingMethodSelect(method)}\n                isSelected={method.NAME === this.state.shippingMethod.NAME}\n            />\n        ));\n    };\n\n    generateCartItemList = () => {\n        const { cartItems } = this.props;\n        const { couponDiscPercent, couponMoney } = this.state;\n        if (parseFloat(couponDiscPercent) > 1) this.setState({ couponDiscPercent: 0 });\n        let totalPrice = 0;\n        let discountTotal = 0;\n        let itemElements = cartItems.map((cartItem, index) => {\n            let price = cartItem.price - cartItem.price * cartItem.discPercent;\n            let discountPrice;\n\n            discountPrice = price - price * couponDiscPercent - couponMoney;\n\n            totalPrice += price * cartItem.amount;\n            discountTotal += discountPrice * cartItem.amount;\n\n            return (\n                <li key={index} className=\"item-product-name\">\n                    <span>{`[${cartItem.amount}] ${cartItem.product_name}`}</span>\n                    <span>{`${withCommas(Math.round(price))} ₫`}</span>\n                </li>\n            );\n        });\n        this.total = totalPrice;\n        this.discountTotal = discountTotal;\n        return itemElements;\n    };\n\n    render = () => {\n        const {\n            redirectTo,\n            fullNameIsInvalid,\n            fullName,\n            emailIsInvalid,\n            email,\n            addressIsInvalid,\n            phoneNumberIsInvalid,\n            couponMessage,\n            phoneNumber,\n            address,\n            shippingNote,\n            shippingFee,\n            couponStatusCode,\n            couponCode,\n            shippingMethodIsInvalid,\n            errorMessage\n        } = this.state;\n        const { cartItems } = this.props;\n        return (\n            <div>\n                {redirectTo}\n                {/* <!-- ##### Breadcumb Area Start ##### --> */}\n                <div className=\"breadcumb_area bg-img\" style={{ backgroundImage: \"url(/img/bg-img/breadcumb.jpg)\" }}>\n                    <div className=\"container h-100\">\n                        <div className=\"row h-100 align-items-center\">\n                            <div className=\"col-12\">\n                                <div className=\"page-title text-center\">\n                                    <h2>Checkout</h2>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* <!-- ##### Breadcumb Area End ##### --> */}\n\n                {/* <!-- ##### Checkout Area Start ##### --> */}\n                <div className=\"checkout_area section-padding-80\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"checkout_details_area mt-50 clearfix\">\n                                    <div className=\"cart-page-heading mb-30\">\n                                        <h5>Billing Address</h5>\n                                    </div>\n                                    <form action=\"#\" method=\"post\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12 mb-3\">\n                                                <label htmlFor=\"full_name\">\n                                                    Fullname <span>*</span>\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    className={\"form-control\" + (fullNameIsInvalid ? \" is-invalid\" : \"\")}\n                                                    id=\"full_name\"\n                                                    required\n                                                    value={fullName}\n                                                    onChange={e => {\n                                                        if (e.currentTarget.value === \"\")\n                                                            this.setState({ fullName: e.target.value, fullNameIsInvalid: true });\n                                                        else this.setState({ fullName: e.target.value, fullNameIsInvalid: false });\n                                                    }}\n                                                />\n                                            </div>\n                                            <div className=\"col-12 mb-4\">\n                                                <label htmlFor=\"email_address\">\n                                                    Email <span>*</span>\n                                                </label>\n                                                <input\n                                                    type=\"email\"\n                                                    className={\"form-control\" + (emailIsInvalid ? \" is-invalid\" : \"\")}\n                                                    id=\"email_address\"\n                                                    value={email}\n                                                    onChange={e => {\n                                                        if (e.currentTarget.value === \"\")\n                                                            this.setState({ email: e.target.value, emailIsInvalid: true });\n                                                        else this.setState({ email: e.target.value, emailIsInvalid: false });\n                                                    }}\n                                                />\n                                            </div>\n                                            <div className=\"col-12 mb-3\">\n                                                <label htmlFor=\"street_address\">\n                                                    Billing Address <span>*</span>\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    className={\"form-control mb-3\" + (addressIsInvalid ? \" is-invalid\" : \"\")}\n                                                    id=\"street_address\"\n                                                    value={address}\n                                                    onChange={e => {\n                                                        if (!e.target.value || e.target.value === \"\")\n                                                            this.setState({ address: e.target.value, addressIsInvalid: true });\n                                                        else this.setState({ address: e.target.value, addressIsInvalid: false });\n                                                    }}\n                                                />\n                                            </div>\n                                            <div className=\"col-12 mb-3\">\n                                                <label htmlFor=\"phone_number\">\n                                                    Phone No <span>*</span>\n                                                </label>\n                                                <input\n                                                    type=\"number\"\n                                                    className={\"form-control\" + (phoneNumberIsInvalid ? \" is-invalid\" : \"\")}\n                                                    id=\"phone_number\"\n                                                    min=\"0\"\n                                                    value={phoneNumber}\n                                                    onChange={e => {\n                                                        if (!e.target.value || e.target.value === \"\")\n                                                            this.setState({ phoneNumber: e.target.value, phoneNumberIsInvalid: true });\n                                                        else this.setState({ phoneNumber: e.target.value, phoneNumberIsInvalid: false });\n                                                    }}\n                                                />\n                                            </div>\n                                            <div className=\"col-12 mb-4\">\n                                                <label htmlFor=\"shipping_note\">Note </label>\n                                                <textarea\n                                                    className=\"form-control\"\n                                                    id=\"shipping_note\"\n                                                    value={shippingNote}\n                                                    onChange={e => this.setState({ shippingNote: e.target.value })}\n                                                />\n                                            </div>\n\n                                            <div className=\"col-12\">\n                                                <div className=\"custom-control custom-checkbox d-block mb-2\">\n                                                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                                                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                                                        Terms and conitions\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n\n                            <div className=\"col-12 col-md-6 col-lg-5 ml-lg-auto\">\n                                <div className=\"order-details-confirmation\">\n                                    {cartItems && cartItems.length > 0 ? (\n                                        <>\n                                            <div className=\"cart-page-heading\">\n                                                <h5>Your Order</h5>\n                                                <p>The Details</p>\n                                            </div>\n\n                                            <ul className=\"order-details-form mb-4\">\n                                                <li className=\"item-header\">\n                                                    <span>Product</span> <span>Price</span>\n                                                </li>\n                                                {this.generateCartItemList()}\n                                                <li className=\"item-header\">\n                                                    <span>Shipping</span>{\" \"}\n                                                    <span>{`${!shippingFee ? \"FREE\" : withCommas(shippingFee)}`}</span>\n                                                </li>\n                                                <li className=\"item-header\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-md-5 d-flex align-items-center\">\n                                                            <span>COUPON</span>\n                                                        </div>\n                                                        <FormInput\n                                                            type=\"text\"\n                                                            additionalClass=\"col-md-5 mb-0\"\n                                                            value={couponCode.toUpperCase()}\n                                                            onChangeHandler={e => {\n                                                                this.setState({ couponCode: e.target.value });\n                                                            }}\n                                                            disabled={couponStatusCode === 1 ? true : false}\n                                                        />\n                                                        <button\n                                                            className={\n                                                                \"col-md-2 btn btn-sm\" +\n                                                                (couponStatusCode === 1 ? \" btn-danger\" : \" btn-info\")\n                                                            }\n                                                            onClick={this.handleApplyCoupon}\n                                                            disabled={!couponCode}\n                                                        >\n                                                            {couponStatusCode === 1 ? \"Cancel\" : \"Apply\"}\n                                                        </button>\n                                                        <div\n                                                            className=\"col-md-12 coupon-status-message text-right\"\n                                                            style={{ color: couponStatusCode === 1 ? \"green\" : \"red\" }}\n                                                        >\n                                                            {couponMessage}\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                                <li className=\"total-header\">\n                                                    <span>Total</span>\n                                                    <span>\n                                                        <span\n                                                            className={this.discountTotal !== this.total ? \"old-price\" : \"\"}\n                                                        >{`${withCommas(Math.round(this.total + shippingFee))} ₫`}</span>\n                                                        <br />\n                                                        {this.discountTotal !== this.total\n                                                            ? `${withCommas(Math.round(this.discountTotal + shippingFee))} ₫`\n                                                            : \"\"}\n                                                    </span>\n                                                </li>\n                                            </ul>\n\n                                            <div\n                                                id=\"accordion\"\n                                                role=\"tablist\"\n                                                className={\n                                                    \"mb-4 form-control shipping-method-container\" +\n                                                    (shippingMethodIsInvalid ? \" is-invalid\" : \"\")\n                                                }\n                                            >\n                                                {this.generatePaymentMethods()}\n                                            </div>\n                                            <div className=\"error-message d-flex justicy-content-center\">{errorMessage}</div>\n                                            <button className=\"btn essence-btn\" onClick={() => this.handleOrder()}>\n                                                Place Order\n                                            </button>\n                                        </>\n                                    ) : (\n                                        <div className=\"text-center\">Cart is Empty!</div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* <!-- ##### Checkout Area End ##### --> */}\n            </div>\n        );\n    };\n}\n\nclass PaymentMethod extends Component {\n    render = () => {\n        let collapseId = LIB.generateRandomString();\n        const { isSelected, methodName, description, fee, handleOnSelect } = this.props;\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\" role=\"tab\" id=\"headingOne\">\n                    <h6 className=\"mb-0\">\n                        <a\n                            className={\"shipping-method-name \" + (isSelected ? \"shippingmethod-selected\" : \"\")}\n                            data-toggle=\"collapse\"\n                            href={\"#\" + collapseId}\n                            aria-expanded=\"false\"\n                            aria-controls={collapseId}\n                            onClick={handleOnSelect}\n                        >\n                            <i className={\"fa mr-3\" + (isSelected ? \" fa-check-square\" : \" fa-square-o\")} />\n                            {methodName}\n                        </a>\n                    </h6>\n                </div>\n\n                <div id={collapseId} className=\"collapse\" role=\"tabpanel\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                        <p>{description}</p>\n                        <p>\n                            <b>FEE: </b>\n                            {withCommas(Math.round(fee))} ₫\n                        </p>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default CheckoutDetail;\n"]},"metadata":{},"sourceType":"module"}
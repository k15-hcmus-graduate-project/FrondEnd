{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar propTypes = {\n  /**\n   * Uses `controlId` from `<FormGroup>` if not explicitly specified.\n   */\n  htmlFor: _react2['default'].PropTypes.string,\n  srOnly: _react2['default'].PropTypes.bool\n};\nvar defaultProps = {\n  srOnly: false\n};\nvar contextTypes = {\n  $bs_formGroup: _react2['default'].PropTypes.object\n};\n\nvar ControlLabel = function (_React$Component) {\n  _inherits(ControlLabel, _React$Component);\n\n  function ControlLabel() {\n    _classCallCheck(this, ControlLabel);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  ControlLabel.prototype.render = function render() {\n    var formGroup = this.context.$bs_formGroup;\n    var controlId = formGroup && formGroup.controlId;\n    var _props = this.props;\n    var _props$htmlFor = _props.htmlFor;\n    var htmlFor = _props$htmlFor === undefined ? controlId : _props$htmlFor;\n    var srOnly = _props.srOnly;\n    var className = _props.className;\n\n    var props = _objectWithoutProperties(_props, ['htmlFor', 'srOnly', 'className']);\n\n    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);\n\n    var bsProps = _splitBsProps[0];\n    var elementProps = _splitBsProps[1];\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](controlId == null || htmlFor === controlId, '`controlId` is ignored on `<ControlLabel>` when `htmlFor` is specified.') : undefined;\n\n    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {\n      'sr-only': srOnly\n    });\n\n    return _react2['default'].createElement('label', _extends({}, elementProps, {\n      htmlFor: htmlFor,\n      className: _classnames2['default'](className, classes)\n    }));\n  };\n\n  return ControlLabel;\n}(_react2['default'].Component);\n\nControlLabel.propTypes = propTypes;\nControlLabel.defaultProps = defaultProps;\nControlLabel.contextTypes = contextTypes;\nexports['default'] = _utilsBootstrapUtils.bsClass('control-label', ControlLabel);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _domHelpersQueryContains = require('dom-helpers/query/contains');\n\nvar _domHelpersQueryContains2 = _interopRequireDefault(_domHelpersQueryContains);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _Overlay = require('./Overlay');\n\nvar _Overlay2 = _interopRequireDefault(_Overlay);\n\nvar _utilsCreateChainedFunction = require('./utils/createChainedFunction');\n\nvar _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);\n/**\n * Check if value one is inside or equal to the of value\n *\n * @param {string} one\n * @param {string|array} of\n * @returns {boolean}\n */\n\n\nfunction isOneOf(one, of) {\n  if (Array.isArray(of)) {\n    return of.indexOf(one) >= 0;\n  }\n\n  return one === of;\n}\n\nvar triggerType = _react2['default'].PropTypes.oneOf(['click', 'hover', 'focus']);\n\nvar propTypes = _extends({}, _Overlay2['default'].propTypes, {\n  /**\n  * Specify which action or actions trigger Overlay visibility\n  */\n  trigger: _react2['default'].PropTypes.oneOfType([triggerType, _react2['default'].PropTypes.arrayOf(triggerType)]),\n\n  /**\n   * A millisecond delay amount to show and hide the Overlay once triggered\n   */\n  delay: _react2['default'].PropTypes.number,\n\n  /**\n   * A millisecond delay amount before showing the Overlay once triggered.\n   */\n  delayShow: _react2['default'].PropTypes.number,\n\n  /**\n   * A millisecond delay amount before hiding the Overlay once triggered.\n   */\n  delayHide: _react2['default'].PropTypes.number,\n  // FIXME: This should be `defaultShow`.\n\n  /**\n   * The initial visibility state of the Overlay. For more nuanced visibility\n   * control, consider using the Overlay component directly.\n   */\n  defaultOverlayShown: _react2['default'].PropTypes.bool,\n\n  /**\n   * An element or text to overlay next to the target.\n   */\n  overlay: _react2['default'].PropTypes.node.isRequired,\n\n  /**\n   * @private\n   */\n  onBlur: _react2['default'].PropTypes.func,\n\n  /**\n   * @private\n   */\n  onClick: _react2['default'].PropTypes.func,\n\n  /**\n   * @private\n   */\n  onFocus: _react2['default'].PropTypes.func,\n\n  /**\n   * @private\n   */\n  onMouseOut: _react2['default'].PropTypes.func,\n\n  /**\n   * @private\n   */\n  onMouseOver: _react2['default'].PropTypes.func,\n  // Overridden props from `<Overlay>`.\n\n  /**\n   * @private\n   */\n  target: _react2['default'].PropTypes.oneOf([null]),\n\n  /**\n  * @private\n  */\n  onHide: _react2['default'].PropTypes.oneOf([null]),\n\n  /**\n   * @private\n   */\n  show: _react2['default'].PropTypes.oneOf([null])\n});\n\nvar defaultProps = {\n  defaultOverlayShown: false,\n  trigger: ['hover', 'focus']\n};\n\nvar OverlayTrigger = function (_React$Component) {\n  _inherits(OverlayTrigger, _React$Component);\n\n  function OverlayTrigger(props, context) {\n    var _this = this;\n\n    _classCallCheck(this, OverlayTrigger);\n\n    _React$Component.call(this, props, context);\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleDelayedShow = this.handleDelayedShow.bind(this);\n    this.handleDelayedHide = this.handleDelayedHide.bind(this);\n\n    this.handleMouseOver = function (e) {\n      return _this.handleMouseOverOut(_this.handleDelayedShow, e);\n    };\n\n    this.handleMouseOut = function (e) {\n      return _this.handleMouseOverOut(_this.handleDelayedHide, e);\n    };\n\n    this._mountNode = null;\n    this.state = {\n      show: props.defaultOverlayShown\n    };\n  }\n\n  OverlayTrigger.prototype.componentDidMount = function componentDidMount() {\n    this._mountNode = document.createElement('div');\n    this.renderOverlay();\n  };\n\n  OverlayTrigger.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.renderOverlay();\n  };\n\n  OverlayTrigger.prototype.componentWillUnmount = function componentWillUnmount() {\n    _reactDom2['default'].unmountComponentAtNode(this._mountNode);\n\n    this._mountNode = null;\n    clearTimeout(this._hoverShowDelay);\n    clearTimeout(this._hoverHideDelay);\n  };\n\n  OverlayTrigger.prototype.handleToggle = function handleToggle() {\n    if (this.state.show) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  OverlayTrigger.prototype.handleDelayedShow = function handleDelayedShow() {\n    var _this2 = this;\n\n    if (this._hoverHideDelay != null) {\n      clearTimeout(this._hoverHideDelay);\n      this._hoverHideDelay = null;\n      return;\n    }\n\n    if (this.state.show || this._hoverShowDelay != null) {\n      return;\n    }\n\n    var delay = this.props.delayShow != null ? this.props.delayShow : this.props.delay;\n\n    if (!delay) {\n      this.show();\n      return;\n    }\n\n    this._hoverShowDelay = setTimeout(function () {\n      _this2._hoverShowDelay = null;\n\n      _this2.show();\n    }, delay);\n  };\n\n  OverlayTrigger.prototype.handleDelayedHide = function handleDelayedHide() {\n    var _this3 = this;\n\n    if (this._hoverShowDelay != null) {\n      clearTimeout(this._hoverShowDelay);\n      this._hoverShowDelay = null;\n      return;\n    }\n\n    if (!this.state.show || this._hoverHideDelay != null) {\n      return;\n    }\n\n    var delay = this.props.delayHide != null ? this.props.delayHide : this.props.delay;\n\n    if (!delay) {\n      this.hide();\n      return;\n    }\n\n    this._hoverHideDelay = setTimeout(function () {\n      _this3._hoverHideDelay = null;\n\n      _this3.hide();\n    }, delay);\n  }; // Simple implementation of mouseEnter and mouseLeave.\n  // React's built version is broken: https://github.com/facebook/react/issues/4251\n  // for cases when the trigger is disabled and mouseOut/Over can cause flicker\n  // moving from one child element to another.\n\n\n  OverlayTrigger.prototype.handleMouseOverOut = function handleMouseOverOut(handler, e) {\n    var target = e.currentTarget;\n    var related = e.relatedTarget || e.nativeEvent.toElement;\n\n    if (!related || related !== target && !_domHelpersQueryContains2['default'](target, related)) {\n      handler(e);\n    }\n  };\n\n  OverlayTrigger.prototype.show = function show() {\n    this.setState({\n      show: true\n    });\n  };\n\n  OverlayTrigger.prototype.hide = function hide() {\n    this.setState({\n      show: false\n    });\n  };\n\n  OverlayTrigger.prototype.makeOverlay = function makeOverlay(overlay, props) {\n    return _react2['default'].createElement(_Overlay2['default'], _extends({}, props, {\n      show: this.state.show,\n      onHide: this.handleToggle,\n      target: this\n    }), overlay);\n  };\n\n  OverlayTrigger.prototype.renderOverlay = function renderOverlay() {\n    _reactDom2['default'].unstable_renderSubtreeIntoContainer(this, this._overlay, this._mountNode);\n  };\n\n  OverlayTrigger.prototype.render = function render() {\n    var _props = this.props;\n    var trigger = _props.trigger;\n    var overlay = _props.overlay;\n    var children = _props.children;\n    var onBlur = _props.onBlur;\n    var onClick = _props.onClick;\n    var onFocus = _props.onFocus;\n    var onMouseOut = _props.onMouseOut;\n    var onMouseOver = _props.onMouseOver;\n\n    var props = _objectWithoutProperties(_props, ['trigger', 'overlay', 'children', 'onBlur', 'onClick', 'onFocus', 'onMouseOut', 'onMouseOver']);\n\n    delete props.delay;\n    delete props.delayShow;\n    delete props.delayHide;\n    delete props.defaultOverlayShown;\n\n    var child = _react2['default'].Children.only(children);\n\n    var childProps = child.props;\n    var triggerProps = {\n      'aria-describedby': overlay.props.id\n    }; // FIXME: The logic here for passing through handlers on this component is\n    // inconsistent. We shouldn't be passing any of these props through.\n\n    triggerProps.onClick = _utilsCreateChainedFunction2['default'](childProps.onClick, onClick);\n\n    if (isOneOf('click', trigger)) {\n      triggerProps.onClick = _utilsCreateChainedFunction2['default'](triggerProps.onClick, this.handleToggle);\n    }\n\n    if (isOneOf('hover', trigger)) {\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!(trigger === 'hover'), '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the ' + 'visibility of the overlay to just mouse users. Consider also ' + 'including the `\"focus\"` trigger so that touch and keyboard only ' + 'users can see the overlay as well.') : undefined;\n      triggerProps.onMouseOver = _utilsCreateChainedFunction2['default'](childProps.onMouseOver, onMouseOver, this.handleMouseOver);\n      triggerProps.onMouseOut = _utilsCreateChainedFunction2['default'](childProps.onMouseOut, onMouseOut, this.handleMouseOut);\n    }\n\n    if (isOneOf('focus', trigger)) {\n      triggerProps.onFocus = _utilsCreateChainedFunction2['default'](childProps.onFocus, onFocus, this.handleDelayedShow);\n      triggerProps.onBlur = _utilsCreateChainedFunction2['default'](childProps.onBlur, onBlur, this.handleDelayedHide);\n    }\n\n    this._overlay = this.makeOverlay(overlay, props);\n    return _react.cloneElement(child, triggerProps);\n  };\n\n  return OverlayTrigger;\n}(_react2['default'].Component);\n\nOverlayTrigger.propTypes = propTypes;\nOverlayTrigger.defaultProps = defaultProps;\nexports['default'] = OverlayTrigger;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
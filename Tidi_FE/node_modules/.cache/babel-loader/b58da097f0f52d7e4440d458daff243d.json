{"ast":null,"code":"import _objectSpread from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminBrand/AdminBrand.jsx\";\n// Stylsheet\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AdminBrand.scss\";\nimport WebService from \"../../../services/WebService\";\nimport AuthService from \"../../../services/AuthService\";\nimport HelperTool, { showAlert } from \"../../../helpers/lib\";\nimport { DEFAULT_FORMDATA, ACTIVE_TYPE } from \"../../../config/constants\";\nimport Modal from \"../../common/Modal\";\nimport AdminAddBrand from \"./AdminAddBrand\";\nimport Paginator from \"../../common/Paginator\";\nimport Message from \"../../common/FormMessage\";\nvar INTIAL_STATE = {\n  showLoadingBar: false,\n  message: null,\n  brands: []\n};\nvar INTERNAL_CONFIG = {\n  HEADING_NAME: \"Brand\",\n  SEARCH_DELAY_DURATION: 300,\n  PAGE_SIZE_ARR: [10, 25, 50, 100],\n  MAIN_HEADERS: [\"ID\", \"Brand Name\", \"Active\", \"Actions\"]\n};\n\nvar AdminBrand =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminBrand, _React$Component);\n\n  function AdminBrand(props) {\n    var _this;\n\n    _classCallCheck(this, AdminBrand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminBrand).call(this, props));\n    _this.brandToBlock = null;\n    _this.originalBrandInfo = {};\n    _this.searchInterval = null;\n\n    _this.componentWillMount = function () {\n      var _this$props = _this.props,\n          history = _this$props.history,\n          currentPage = _this$props.currentPage;\n      var params = new URLSearchParams(history.location.search);\n      var pageIndex = Number(params.get(\"page\"));\n      var pageSize = Number(params.get(\"size\"));\n\n      if (pageIndex && pageSize && INTERNAL_CONFIG.PAGE_SIZE_ARR.indexOf(pageSize) !== -1) {\n        _this.handleFilterChange({\n          currentPage: pageIndex,\n          pageSize: pageSize\n        });\n      } else {\n        _this.fetchBrands(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0]);\n\n        _this.updateURLParams(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0]);\n      }\n\n      _this.fetchBrands(currentPage, _this.props.pageSize);\n    };\n\n    _this.updateURLParams = function (currentPage, pageSize) {\n      _this.props.history.push({\n        search: \"?size=\".concat(pageSize || _this.props.pageSize, \"&page=\").concat(currentPage || _this.props.currentPage)\n      });\n    };\n\n    _this.fetchBrands = function (currentPage, currentSize, query) {\n      _this.setState({\n        showLoadingBar: true\n      });\n\n      WebService.adminGetAllBrandsBrand(AuthService.getTokenUnsafe(), currentSize, (currentPage - 1) * currentSize, query).then(function (res) {\n        var result = JSON.parse(res);\n\n        if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n          _this.setState({\n            brands: result.brands,\n            showLoadingBar: false\n          });\n\n          if (result.brands) {\n            _this.props.changePageInfo({\n              totalItems: result.totalItems\n            });\n          } else {\n            console.log(\"have no brands.\");\n          }\n        } else {\n          showAlert(result.message, \"error\");\n        }\n      });\n    };\n\n    _this.prepareFormData = function (data) {\n      _this.setState({\n        message: null\n      });\n\n      for (var attr in data) {\n        if (!(attr in DEFAULT_FORMDATA.AdminAddBrand) && !data[attr]) {\n          data[attr + \"Id\"] = data[attr].id;\n          delete data[attr];\n        } else if (data[attr] === null) {\n          data[attr] = \"\";\n        }\n      }\n\n      _this.originalBrandInfo = data;\n\n      _this.props.setFormData(data);\n    };\n\n    _this.clearFormData = function () {\n      _this.setState({\n        message: null\n      });\n\n      _this.props.setFormData(DEFAULT_FORMDATA.AdminAddBrand);\n    };\n\n    _this.handleFilterChange = function (_ref) {\n      var currentPage = _ref.currentPage,\n          pageSize = _ref.pageSize,\n          totalItems = _ref.totalItems;\n      var payloadObj = {};\n\n      if (currentPage) {\n        payloadObj.currentPage = Number(currentPage);\n      }\n\n      if (pageSize) {\n        payloadObj.pageSize = Number(pageSize);\n      }\n\n      if (totalItems) {\n        payloadObj.totalItems = Number(totalItems);\n      }\n\n      _this.props.changePageInfo(payloadObj);\n\n      if (pageSize || currentPage) {\n        _this.updateURLParams(payloadObj.currentPage, payloadObj.pageSize);\n\n        _this.fetchBrands(payloadObj.currentPage || _this.props.currentPage, payloadObj.pageSize || _this.props.pageSize, _this.props.query);\n      }\n    };\n\n    _this.handleChangeKeyword = function (e) {\n      _this.props.updateFilter({\n        keyword: e.target.value\n      });\n\n      clearTimeout(_this.searchInterval);\n      _this.searchInterval = setTimeout(function () {\n        _this.handleSearch();\n      }, INTERNAL_CONFIG.SEARCH_DELAY_DURATION);\n    };\n\n    _this.handleSearch = function () {\n      _this.fetchBrands(_this.props.currentPage, _this.props.pageSize, _this.props.query);\n    };\n\n    _this.handleUpdateBrand = function () {\n      var _this$props2 = _this.props,\n          formData = _this$props2.formData,\n          brandName = _this$props2.brandName,\n          currentPage = _this$props2.currentPage,\n          pageSize = _this$props2.pageSize,\n          query = _this$props2.query;\n      return new Promise(function (resolve, reject) {\n        var newInfo = {};\n\n        for (var attr in formData) {\n          if (formData[attr] !== _this.originalBrandInfo[attr]) {\n            newInfo[attr] = formData[attr];\n          }\n        }\n\n        if (Object.keys(newInfo).length > 0) {\n          _this.setState({\n            message: React.createElement(Message, {\n              content: \"Updating brand...\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180\n              },\n              __self: this\n            })\n          });\n\n          WebService.adminUpdateBrand(AuthService.getTokenUnsafe(), formData.id, newInfo).then(function (res) {\n            var resObj = JSON.parse(res);\n\n            if (resObj.status === ACTIVE_TYPE.TRUE) {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"green\",\n                  content: \"Update brand successfully\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 187\n                  },\n                  __self: this\n                })\n              });\n\n              resolve(true);\n\n              if (\"permission\" in newInfo && formData.brand_name === brandName) {\n                window.location.reload();\n              } else {\n                _this.fetchBrands(currentPage, pageSize, query);\n              }\n            } else {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"red\",\n                  content: resObj.message,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 198\n                  },\n                  __self: this\n                })\n              });\n\n              console.log(\"UPDATE FAILED\", resObj);\n              resolve(false);\n            }\n          });\n        } else {\n          resolve(false);\n\n          _this.setState({\n            message: React.createElement(Message, {\n              color: \"red\",\n              content: \"Nothing to update\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 207\n              },\n              __self: this\n            })\n          });\n        }\n      });\n    };\n\n    _this.handleAddBrand = function () {\n      var _this$props3 = _this.props,\n          formData = _this$props3.formData,\n          currentPage = _this$props3.currentPage,\n          pageSize = _this$props3.pageSize,\n          query = _this$props3.query;\n      return new Promise(function (resolve, reject) {\n        _this.setState({\n          message: React.createElement(Message, {\n            content: \"Creating brand...\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          })\n        });\n\n        if (!formData.brand_name) {\n          _this.setState({\n            message: React.createElement(Message, {\n              color: \"red\",\n              content: \"Brand Name is empty\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 223\n              },\n              __self: this\n            })\n          });\n        } else {\n          WebService.adminInsertBrand(AuthService.getTokenUnsafe(), formData).then(function (res) {\n            var resObj = JSON.parse(res);\n\n            if (resObj.status === ACTIVE_TYPE.TRUE) {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"green\",\n                  content: \"Create brand successfully\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 230\n                  },\n                  __self: this\n                })\n              });\n\n              resolve(true);\n\n              _this.fetchBrands(currentPage, pageSize, query);\n            } else {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"red\",\n                  content: resObj.message,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 237\n                  },\n                  __self: this\n                })\n              });\n\n              console.log(\"ADD FAILED\", resObj);\n              resolve(false);\n            }\n          });\n        }\n      });\n    };\n\n    _this.handleDeleteBrand = function () {\n      return new Promise(function (resolve) {\n        if (_this.brandToBlock && _this.brandToBlock.id) {\n          WebService.adminUpdateBrand(AuthService.getTokenUnsafe(), _this.brandToBlock.id, {\n            active: _this.brandToBlock.active === ACTIVE_TYPE.TRUE ? ACTIVE_TYPE.FALSE : ACTIVE_TYPE.TRUE\n          }).then(function (res) {\n            var resObj = JSON.parse(res);\n\n            if (resObj.status === ACTIVE_TYPE.TRUE) {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"green\",\n                  content: (_this.brandToBlock.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\") + \"brand successfully\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 257\n                  },\n                  __self: this\n                })\n              });\n\n              resolve(true);\n\n              _this.fetchBrands(_this.props.currentPage, _this.props.pageSize, _this.props.query);\n            } else {\n              _this.setState({\n                message: React.createElement(Message, {\n                  color: \"red\",\n                  content: resObj.message,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 268\n                  },\n                  __self: this\n                })\n              });\n\n              console.log(\"UPDATE BLOCK STATUS FAILED\", resObj);\n              resolve(false);\n            }\n          });\n        }\n      });\n    };\n\n    _this.generateTableRows = function (brands) {\n      var r = [];\n      brands.forEach(function (brand, id) {\n        r.push(React.createElement(Fragment, {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, brand.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, brand.brand_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, brand.active === ACTIVE_TYPE.TRUE ? React.createElement(\"i\", {\n          className: \"fa fa-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }) : React.createElement(\"i\", {\n          className: \"fa fa-times-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btn-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning btn-sm\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#update-brand-modal\",\n          onClick: function onClick() {\n            return _this.prepareFormData(_objectSpread({}, brand));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-pencil-square-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }), \" Edit\"), \"\\xA0\\xA0\", React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#delete-brand-modal\",\n          onClick: function onClick() {\n            _this.brandToBlock = brand;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-ban\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }), \" \", brand.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\"))))));\n      });\n      return r;\n    };\n\n    _this.render = function () {\n      var _this$props4 = _this.props,\n          pageSize = _this$props4.pageSize,\n          currentPage = _this$props4.currentPage,\n          query = _this$props4.query,\n          totalItems = _this$props4.totalItems;\n      var _this$state = _this.state,\n          message = _this$state.message,\n          showLoadingBar = _this$state.showLoadingBar,\n          brands = _this$state.brands;\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalId: \"add-brand-modal\",\n        modalTitle: \"Create new brand\",\n        modalBody: React.createElement(AdminAddBrand, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }),\n        modalHandleSubmit: _this.handleAddBrand,\n        modalSubmitTitle: \"Add\",\n        modalSubmitClassName: \"btn-success\",\n        modalMessage: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        modalId: \"update-brand-modal\",\n        modalTitle: \"Update brand info\",\n        modalBody: React.createElement(AdminAddBrand, {\n          editMode: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }),\n        modalHandleSubmit: _this.handleUpdateBrand,\n        modalSubmitTitle: \"Update\",\n        modalSubmitClassName: \"btn-warning\",\n        modalMessage: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        modalId: \"delete-brand-modal\",\n        modalTitle: \"Update brand info\",\n        modalBody: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, \"Are you sure to Block/Unblock this brand?\"),\n        modalHandleSubmit: _this.handleDeleteBrand,\n        modalSubmitTitle: \"Block/Unblock\",\n        modalSubmitClassName: \"btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, INTERNAL_CONFIG.HEADING_NAME), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header d-flex justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-bar form-control col-md-4 col-sm-6\",\n        type: \"text\",\n        placeholder: \"Search for something...\",\n        value: query.keyword,\n        onChange: function onChange(e) {\n          return _this.handleChangeKeyword(e);\n        },\n        onKeyDown: function onKeyDown(e) {\n          return e.keyCode === 13 && _this.handleSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controllers d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control input-sm\",\n        value: pageSize,\n        onChange: function onChange(e) {\n          _this.handleFilterChange({\n            pageSize: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        value: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"25\"), React.createElement(\"option\", {\n        value: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"50\"), React.createElement(\"option\", {\n        value: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"100\"))), React.createElement(\"div\", {\n        className: \"control-buttons btn-group justify-content-space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#add-brand-modal\",\n        onClick: function onClick() {\n          _this.clearFormData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-circle mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }), \"Add brand\"))), React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"Display \", pageSize * currentPage > totalItems ? totalItems : pageSize * currentPage, \" / \", totalItems), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, message)), React.createElement(\"div\", {\n        className: \"table-container\",\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress\",\n        style: {\n          width: \"100%\",\n          height: 5,\n          position: \"absolute\"\n        },\n        hidden: showLoadingBar ? \"\" : \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n        role: \"progressbar\",\n        \"aria-valuenow\": \"75\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table-container table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-hover table-sm table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, HelperTool.generateTableHeaders(INTERNAL_CONFIG.MAIN_HEADERS)), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, _this.generateTableRows(brands))), React.createElement(Paginator, {\n        handlePageChange: function handlePageChange(currentPage) {\n          _this.handleFilterChange({\n            currentPage: currentPage\n          });\n        },\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalItems: totalItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }))))));\n    };\n\n    _this.orignalBranches = [];\n    _this.originalCategories = [];\n    _this.state = INTIAL_STATE;\n\n    _this.props.changePageInfo({\n      currentPage: 1,\n      pageSize: INTERNAL_CONFIG.PAGE_SIZE_ARR[0]\n    });\n\n    return _this;\n  }\n\n  return AdminBrand;\n}(React.Component);\n\nAdminBrand.propTypes = {\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  fetchBrands: PropTypes.func,\n  changePageInfo: PropTypes.func,\n  setFormData: PropTypes.func,\n  query: PropTypes.shape({\n    keyword: PropTypes.string\n  })\n};\nexport default AdminBrand;","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/admin/AdminBrand/AdminBrand.jsx"],"names":["React","Fragment","PropTypes","WebService","AuthService","HelperTool","showAlert","DEFAULT_FORMDATA","ACTIVE_TYPE","Modal","AdminAddBrand","Paginator","Message","INTIAL_STATE","showLoadingBar","message","brands","INTERNAL_CONFIG","HEADING_NAME","SEARCH_DELAY_DURATION","PAGE_SIZE_ARR","MAIN_HEADERS","AdminBrand","props","brandToBlock","originalBrandInfo","searchInterval","componentWillMount","history","currentPage","params","URLSearchParams","location","search","pageIndex","Number","get","pageSize","indexOf","handleFilterChange","fetchBrands","updateURLParams","push","currentSize","query","setState","adminGetAllBrandsBrand","getTokenUnsafe","then","res","result","JSON","parse","status","TRUE","changePageInfo","totalItems","console","log","prepareFormData","data","attr","id","setFormData","clearFormData","payloadObj","handleChangeKeyword","e","updateFilter","keyword","target","value","clearTimeout","setTimeout","handleSearch","handleUpdateBrand","formData","brandName","Promise","resolve","reject","newInfo","Object","keys","length","adminUpdateBrand","resObj","brand_name","window","reload","handleAddBrand","adminInsertBrand","handleDeleteBrand","active","FALSE","generateTableRows","r","forEach","brand","render","state","keyCode","position","width","height","generateTableHeaders","orignalBranches","originalCategories","Component","propTypes","number","func","shape","string"],"mappings":"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","sourcesContent":["// Stylsheet\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AdminBrand.scss\";\nimport WebService from \"../../../services/WebService\";\nimport AuthService from \"../../../services/AuthService\";\nimport HelperTool, { showAlert } from \"../../../helpers/lib\";\nimport { DEFAULT_FORMDATA, ACTIVE_TYPE } from \"../../../config/constants\";\nimport Modal from \"../../common/Modal\";\nimport AdminAddBrand from \"./AdminAddBrand\";\nimport Paginator from \"../../common/Paginator\";\nimport Message from \"../../common/FormMessage\";\n\nconst INTIAL_STATE = {\n    showLoadingBar: false,\n    message: null,\n    brands: []\n};\n\nconst INTERNAL_CONFIG = {\n    HEADING_NAME: \"Brand\",\n    SEARCH_DELAY_DURATION: 300,\n    PAGE_SIZE_ARR: [10, 25, 50, 100],\n    MAIN_HEADERS: [\"ID\", \"Brand Name\", \"Active\", \"Actions\"]\n};\n\nclass AdminBrand extends React.Component {\n    static propTypes = {\n        currentPage: PropTypes.number,\n        pageSize: PropTypes.number,\n        totalItems: PropTypes.number,\n        fetchBrands: PropTypes.func,\n        changePageInfo: PropTypes.func,\n        setFormData: PropTypes.func,\n        query: PropTypes.shape({\n            keyword: PropTypes.string\n        })\n    };\n\n    brandToBlock = null;\n    originalBrandInfo = {};\n    searchInterval = null;\n\n    constructor(props: any) {\n        super(props);\n        this.orignalBranches = [];\n        this.originalCategories = [];\n        this.state = INTIAL_STATE;\n\n        this.props.changePageInfo({\n            currentPage: 1,\n            pageSize: INTERNAL_CONFIG.PAGE_SIZE_ARR[0]\n        });\n    }\n\n    componentWillMount = () => {\n        const { history, currentPage } = this.props;\n        const params = new URLSearchParams(history.location.search);\n        const pageIndex = Number(params.get(\"page\"));\n        const pageSize = Number(params.get(\"size\"));\n        if (pageIndex && pageSize && INTERNAL_CONFIG.PAGE_SIZE_ARR.indexOf(pageSize) !== -1) {\n            this.handleFilterChange({\n                currentPage: pageIndex,\n                pageSize: pageSize\n            });\n        } else {\n            this.fetchBrands(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0]);\n            this.updateURLParams(currentPage, INTERNAL_CONFIG.PAGE_SIZE_ARR[0]);\n        }\n\n        this.fetchBrands(currentPage, this.props.pageSize);\n    };\n\n    updateURLParams = (currentPage, pageSize) => {\n        this.props.history.push({\n            search: `?size=${pageSize || this.props.pageSize}&page=${currentPage || this.props.currentPage}`\n        });\n    };\n\n    fetchBrands = (currentPage, currentSize, query) => {\n        this.setState({\n            showLoadingBar: true\n        });\n\n        WebService.adminGetAllBrandsBrand(AuthService.getTokenUnsafe(), currentSize, (currentPage - 1) * currentSize, query).then(res => {\n            const result = JSON.parse(res);\n            if (result.status && result.status === ACTIVE_TYPE.TRUE) {\n                this.setState({\n                    brands: result.brands,\n                    showLoadingBar: false\n                });\n                if (result.brands) {\n                    this.props.changePageInfo({ totalItems: result.totalItems });\n                } else {\n                    console.log(\"have no brands.\");\n                }\n            } else {\n                showAlert(result.message, \"error\");\n            }\n        });\n    };\n\n    prepareFormData = data => {\n        this.setState({\n            message: null\n        });\n\n        for (let attr in data) {\n            if (!(attr in DEFAULT_FORMDATA.AdminAddBrand) && !data[attr]) {\n                data[attr + \"Id\"] = data[attr].id;\n                delete data[attr];\n            } else if (data[attr] === null) {\n                data[attr] = \"\";\n            }\n        }\n\n        this.originalBrandInfo = data;\n        this.props.setFormData(data);\n    };\n\n    clearFormData = () => {\n        this.setState({\n            message: null\n        });\n\n        this.props.setFormData(DEFAULT_FORMDATA.AdminAddBrand);\n    };\n\n    handleFilterChange = ({ currentPage, pageSize, totalItems }) => {\n        let payloadObj = {};\n\n        if (currentPage) {\n            payloadObj.currentPage = Number(currentPage);\n        }\n\n        if (pageSize) {\n            payloadObj.pageSize = Number(pageSize);\n        }\n\n        if (totalItems) {\n            payloadObj.totalItems = Number(totalItems);\n        }\n\n        this.props.changePageInfo(payloadObj);\n\n        if (pageSize || currentPage) {\n            this.updateURLParams(payloadObj.currentPage, payloadObj.pageSize);\n            this.fetchBrands(\n                payloadObj.currentPage || this.props.currentPage,\n                payloadObj.pageSize || this.props.pageSize,\n                this.props.query\n            );\n        }\n    };\n\n    handleChangeKeyword = e => {\n        this.props.updateFilter({ keyword: e.target.value });\n        clearTimeout(this.searchInterval);\n        this.searchInterval = setTimeout(() => {\n            this.handleSearch();\n        }, INTERNAL_CONFIG.SEARCH_DELAY_DURATION);\n    };\n\n    handleSearch = () => {\n        this.fetchBrands(this.props.currentPage, this.props.pageSize, this.props.query);\n    };\n\n    handleUpdateBrand = () => {\n        const { formData, brandName, currentPage, pageSize, query } = this.props;\n        return new Promise((resolve, reject) => {\n            const newInfo = {};\n            for (let attr in formData) {\n                if (formData[attr] !== this.originalBrandInfo[attr]) {\n                    newInfo[attr] = formData[attr];\n                }\n            }\n\n            if (Object.keys(newInfo).length > 0) {\n                this.setState({\n                    message: <Message content=\"Updating brand...\" />\n                });\n\n                WebService.adminUpdateBrand(AuthService.getTokenUnsafe(), formData.id, newInfo).then(res => {\n                    const resObj = JSON.parse(res);\n                    if (resObj.status === ACTIVE_TYPE.TRUE) {\n                        this.setState({\n                            message: <Message color=\"green\" content=\"Update brand successfully\" />\n                        });\n\n                        resolve(true);\n                        if (\"permission\" in newInfo && formData.brand_name === brandName) {\n                            window.location.reload();\n                        } else {\n                            this.fetchBrands(currentPage, pageSize, query);\n                        }\n                    } else {\n                        this.setState({\n                            message: <Message color=\"red\" content={resObj.message} />\n                        });\n                        console.log(\"UPDATE FAILED\", resObj);\n                        resolve(false);\n                    }\n                });\n            } else {\n                resolve(false);\n                this.setState({\n                    message: <Message color=\"red\" content=\"Nothing to update\" />\n                });\n            }\n        });\n    };\n\n    handleAddBrand = () => {\n        const { formData, currentPage, pageSize, query } = this.props;\n\n        return new Promise((resolve, reject) => {\n            this.setState({\n                message: <Message content=\"Creating brand...\" />\n            });\n\n            if (!formData.brand_name) {\n                this.setState({\n                    message: <Message color=\"red\" content=\"Brand Name is empty\" />\n                });\n            } else {\n                WebService.adminInsertBrand(AuthService.getTokenUnsafe(), formData).then(res => {\n                    const resObj = JSON.parse(res);\n                    if (resObj.status === ACTIVE_TYPE.TRUE) {\n                        this.setState({\n                            message: <Message color=\"green\" content=\"Create brand successfully\" />\n                        });\n\n                        resolve(true);\n                        this.fetchBrands(currentPage, pageSize, query);\n                    } else {\n                        this.setState({\n                            message: <Message color=\"red\" content={resObj.message} />\n                        });\n                        console.log(\"ADD FAILED\", resObj);\n                        resolve(false);\n                    }\n                });\n            }\n        });\n    };\n\n    handleDeleteBrand = () => {\n        return new Promise(resolve => {\n            if (this.brandToBlock && this.brandToBlock.id) {\n                WebService.adminUpdateBrand(AuthService.getTokenUnsafe(), this.brandToBlock.id, {\n                    active: this.brandToBlock.active === ACTIVE_TYPE.TRUE ? ACTIVE_TYPE.FALSE : ACTIVE_TYPE.TRUE\n                }).then(res => {\n                    const resObj = JSON.parse(res);\n                    if (resObj.status === ACTIVE_TYPE.TRUE) {\n                        this.setState({\n                            message: (\n                                <Message\n                                    color=\"green\"\n                                    content={(this.brandToBlock.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\") + \"brand successfully\"}\n                                />\n                            )\n                        });\n\n                        resolve(true);\n                        this.fetchBrands(this.props.currentPage, this.props.pageSize, this.props.query);\n                    } else {\n                        this.setState({\n                            message: <Message color=\"red\" content={resObj.message} />\n                        });\n                        console.log(\"UPDATE BLOCK STATUS FAILED\", resObj);\n                        resolve(false);\n                    }\n                });\n            }\n        });\n    };\n\n    generateTableRows = brands => {\n        let r = [];\n        brands.forEach((brand, id) => {\n            r.push(\n                <Fragment key={id}>\n                    <tr>\n                        <td>{brand.id}</td>\n                        <td>{brand.brand_name}</td>\n                        <td>{brand.active === ACTIVE_TYPE.TRUE ? <i className=\"fa fa-check\" /> : <i className=\"fa fa-times-circle\" />}</td>\n                        <td>\n                            <div className=\"btn-group\">\n                                <button\n                                    className=\"btn btn-warning btn-sm\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#update-brand-modal\"\n                                    onClick={() => this.prepareFormData({ ...brand })}\n                                >\n                                    <i className=\"fa fa-pencil-square-o\" /> Edit\n                                </button>\n                                &#160;&#160;\n                                <button\n                                    className=\"btn btn-danger btn-sm\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#delete-brand-modal\"\n                                    onClick={() => {\n                                        this.brandToBlock = brand;\n                                    }}\n                                >\n                                    <i className=\"fa fa-ban\" /> {brand.active === ACTIVE_TYPE.TRUE ? \"Block\" : \"Unblock\"}\n                                </button>\n                            </div>\n                        </td>\n                    </tr>\n                </Fragment>\n            );\n        });\n        return r;\n    };\n\n    render = () => {\n        const { pageSize, currentPage, query, totalItems } = this.props;\n        const { message, showLoadingBar, brands } = this.state;\n        return (\n            <div className=\"container-fluid\">\n                <Modal\n                    modalId=\"add-brand-modal\"\n                    modalTitle=\"Create new brand\"\n                    modalBody={<AdminAddBrand />}\n                    modalHandleSubmit={this.handleAddBrand}\n                    modalSubmitTitle=\"Add\"\n                    modalSubmitClassName=\"btn-success\"\n                    modalMessage={message}\n                />\n                <Modal\n                    modalId=\"update-brand-modal\"\n                    modalTitle=\"Update brand info\"\n                    modalBody={<AdminAddBrand editMode={true} />}\n                    modalHandleSubmit={this.handleUpdateBrand}\n                    modalSubmitTitle=\"Update\"\n                    modalSubmitClassName=\"btn-warning\"\n                    modalMessage={message}\n                />\n                <Modal\n                    modalId=\"delete-brand-modal\"\n                    modalTitle=\"Update brand info\"\n                    modalBody={<div>Are you sure to Block/Unblock this brand?</div>}\n                    modalHandleSubmit={this.handleDeleteBrand}\n                    modalSubmitTitle=\"Block/Unblock\"\n                    modalSubmitClassName=\"btn-danger\"\n                />\n                <h2>{INTERNAL_CONFIG.HEADING_NAME}</h2>\n                <hr />\n                <div className=\"card\">\n                    <div className=\"card-header d-flex justify-content-end\">\n                        <input\n                            className=\"search-bar form-control col-md-4 col-sm-6\"\n                            type=\"text\"\n                            placeholder=\"Search for something...\"\n                            value={query.keyword}\n                            onChange={e => this.handleChangeKeyword(e)}\n                            onKeyDown={e => e.keyCode === 13 && this.handleSearch()}\n                        />\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"controllers d-flex\">\n                            <div>\n                                <select\n                                    className=\"form-control input-sm\"\n                                    value={pageSize}\n                                    onChange={e => {\n                                        this.handleFilterChange({\n                                            pageSize: e.target.value\n                                        });\n                                    }}\n                                >\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                            </div>\n                            <div className=\"control-buttons btn-group justify-content-space-between\">\n                                {/* <!-- Button trigger modal --> */}\n                                <button\n                                    className=\"btn btn-success\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#add-brand-modal\"\n                                    onClick={() => {\n                                        this.clearFormData();\n                                    }}\n                                >\n                                    <i className=\"fa fa-plus-circle mr-2\" />\n                                    Add brand\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"d-flex justify-content-between\">\n                            <span>\n                                Display {pageSize * currentPage > totalItems ? totalItems : pageSize * currentPage} / {totalItems}\n                            </span>\n                            <span>{message}</span>\n                        </div>\n                        <div className=\"table-container\" style={{ position: \"relative\" }}>\n                            <div\n                                className=\"progress\"\n                                style={{ width: \"100%\", height: 5, position: \"absolute\" }}\n                                hidden={showLoadingBar ? \"\" : \"hidden\"}\n                            >\n                                <div\n                                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\n                                    role=\"progressbar\"\n                                    aria-valuenow=\"75\"\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </div>\n                            <div className=\"table-container table-responsive\">\n                                <table className=\"table table-hover table-sm table-bordered\">\n                                    <thead className=\"\">{HelperTool.generateTableHeaders(INTERNAL_CONFIG.MAIN_HEADERS)}</thead>\n                                    <tbody>{this.generateTableRows(brands)}</tbody>\n                                </table>\n                                <Paginator\n                                    handlePageChange={currentPage => {\n                                        this.handleFilterChange({ currentPage });\n                                    }}\n                                    currentPage={currentPage}\n                                    pageSize={pageSize}\n                                    totalItems={totalItems}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default AdminBrand;\n"]},"metadata":{},"sourceType":"module"}
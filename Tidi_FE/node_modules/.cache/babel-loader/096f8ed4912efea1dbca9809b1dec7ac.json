{"ast":null,"code":"import _objectSpread from \"/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// External Dependencies\nimport { connect } from \"react-redux\";\nimport commonActions from \"../../common/duck/actions\";\nimport layoutActions from \"../../layout/duck/actions\";\nimport Header from \"./Header\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state.layout.Header, state.common.AuthenticationStatus, {\n    nCartItems: state.common.Cart.products.length > 0 ? state.common.Cart.products.reduce(function (nitem, item) {\n      return nitem + item.amount;\n    }, 0) : 0\n  });\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleCart: function toggleCart(open) {\n      dispatch(commonActions.toggleCart(open));\n    },\n    toggleDropdownMenu: function toggleDropdownMenu(open) {\n      dispatch(layoutActions.openDropdownMenu(open));\n    },\n    toggleMegaMenu: function toggleMegaMenu(open) {\n      dispatch(layoutActions.openMegaMenu(open));\n    },\n    toggleMenuMobile: function toggleMenuMobile() {\n      dispatch(layoutActions.openMenuMobile());\n    },\n    fetchIndustries: function fetchIndustries(industries) {\n      dispatch(layoutActions.fetchIndustries(industries));\n    },\n    changeIndustryHover: function changeIndustryHover(industry) {\n      dispatch(layoutActions.switchIndustryHover(industry));\n    },\n    changeLoginStatus: function changeLoginStatus(status) {\n      dispatch(commonActions.updateAuthStatus({\n        isLoggedIn: status\n      }));\n    },\n    toggleNotification: function toggleNotification(message, type) {\n      dispatch(layoutActions.showNotification({\n        message: message,\n        type: type\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/lap12548/Documents/hcmus/TOTNGHIEP/GITHUB/FrondEnd/Tidi_FE/src/pages/layout/Header/index.js"],"names":["connect","commonActions","layoutActions","Header","mapStateToProps","state","layout","common","AuthenticationStatus","nCartItems","Cart","products","length","reduce","nitem","item","amount","mapDispatchToProps","dispatch","toggleCart","open","toggleDropdownMenu","openDropdownMenu","toggleMegaMenu","openMegaMenu","toggleMenuMobile","openMenuMobile","fetchIndustries","industries","changeIndustryHover","industry","switchIndustryHover","changeLoginStatus","status","updateAuthStatus","isLoggedIn","toggleNotification","message","type","showNotification"],"mappings":";AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,2BACtBA,KAAK,CAACC,MAAN,CAAaH,MADS,EAEtBE,KAAK,CAACE,MAAN,CAAaC,oBAFS;AAGzBC,IAAAA,UAAU,EAAEJ,KAAK,CAACE,MAAN,CAAaG,IAAb,CAAkBC,QAAlB,CAA2BC,MAA3B,GAAoC,CAApC,GAAwCP,KAAK,CAACE,MAAN,CAAaG,IAAb,CAAkBC,QAAlB,CAA2BE,MAA3B,CAAkC,UAACC,KAAD,EAAQC,IAAR;AAAA,aAAiBD,KAAK,GAAGC,IAAI,CAACC,MAA9B;AAAA,KAAlC,EAAwE,CAAxE,CAAxC,GAAqH;AAHxG;AAAA,CAA7B;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCC,IAAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAChBF,MAAAA,QAAQ,CAACjB,aAAa,CAACkB,UAAd,CAAyBC,IAAzB,CAAD,CAAR;AACH,KAHmC;AAKpCC,IAAAA,kBAAkB,EAAE,4BAAAD,IAAI,EAAI;AACxBF,MAAAA,QAAQ,CAAChB,aAAa,CAACoB,gBAAd,CAA+BF,IAA/B,CAAD,CAAR;AACH,KAPmC;AASpCG,IAAAA,cAAc,EAAE,wBAAAH,IAAI,EAAI;AACpBF,MAAAA,QAAQ,CAAChB,aAAa,CAACsB,YAAd,CAA2BJ,IAA3B,CAAD,CAAR;AACH,KAXmC;AAapCK,IAAAA,gBAAgB,EAAE,4BAAM;AACpBP,MAAAA,QAAQ,CAAChB,aAAa,CAACwB,cAAd,EAAD,CAAR;AACH,KAfmC;AAiBpCC,IAAAA,eAAe,EAAE,yBAAAC,UAAU,EAAI;AAC3BV,MAAAA,QAAQ,CAAChB,aAAa,CAACyB,eAAd,CAA8BC,UAA9B,CAAD,CAAR;AACH,KAnBmC;AAqBpCC,IAAAA,mBAAmB,EAAE,6BAAAC,QAAQ,EAAI;AAC7BZ,MAAAA,QAAQ,CAAChB,aAAa,CAAC6B,mBAAd,CAAkCD,QAAlC,CAAD,CAAR;AACH,KAvBmC;AAyBpCE,IAAAA,iBAAiB,EAAE,2BAAAC,MAAM,EAAI;AACzBf,MAAAA,QAAQ,CACJjB,aAAa,CAACiC,gBAAd,CAA+B;AAC3BC,QAAAA,UAAU,EAAEF;AADe,OAA/B,CADI,CAAR;AAKH,KA/BmC;AAiCpCG,IAAAA,kBAAkB,EAAE,4BAACC,OAAD,EAAUC,IAAV,EAAmB;AACnCpB,MAAAA,QAAQ,CACJhB,aAAa,CAACqC,gBAAd,CAA+B;AAC3BF,QAAAA,OAAO,EAAPA,OAD2B;AAE3BC,QAAAA,IAAI,EAAJA;AAF2B,OAA/B,CADI,CAAR;AAMH;AAxCmC,GAAL;AAAA,CAAnC;;AA2CA,eAAetC,OAAO,CAClBI,eADkB,EAElBa,kBAFkB,CAAP,CAGbd,MAHa,CAAf","sourcesContent":["// External Dependencies\nimport { connect } from \"react-redux\";\nimport commonActions from \"../../common/duck/actions\";\nimport layoutActions from \"../../layout/duck/actions\";\nimport Header from \"./Header\";\n\nconst mapStateToProps = state => ({\n    ...state.layout.Header,\n    ...state.common.AuthenticationStatus,\n    nCartItems: state.common.Cart.products.length > 0 ? state.common.Cart.products.reduce((nitem, item) => nitem + item.amount, 0) : 0\n});\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCart: open => {\n        dispatch(commonActions.toggleCart(open));\n    },\n\n    toggleDropdownMenu: open => {\n        dispatch(layoutActions.openDropdownMenu(open));\n    },\n\n    toggleMegaMenu: open => {\n        dispatch(layoutActions.openMegaMenu(open));\n    },\n\n    toggleMenuMobile: () => {\n        dispatch(layoutActions.openMenuMobile());\n    },\n\n    fetchIndustries: industries => {\n        dispatch(layoutActions.fetchIndustries(industries));\n    },\n\n    changeIndustryHover: industry => {\n        dispatch(layoutActions.switchIndustryHover(industry));\n    },\n\n    changeLoginStatus: status => {\n        dispatch(\n            commonActions.updateAuthStatus({\n                isLoggedIn: status\n            })\n        );\n    },\n\n    toggleNotification: (message, type) => {\n        dispatch(\n            layoutActions.showNotification({\n                message,\n                type\n            })\n        );\n    }\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n"]},"metadata":{},"sourceType":"module"}
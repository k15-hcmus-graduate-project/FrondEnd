{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactPropTypesLibElementType = require('react-prop-types/lib/elementType');\n\nvar _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);\n\nvar _ListGroupItem = require('./ListGroupItem');\n\nvar _ListGroupItem2 = _interopRequireDefault(_ListGroupItem);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _utilsValidComponentChildren = require('./utils/ValidComponentChildren');\n\nvar _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);\n\nvar propTypes = {\n  /**\n   * You can use a custom element type for this component.\n   *\n   * If not specified, it will be treated as `'li'` if every child is a\n   * non-actionable `<ListGroupItem>`, and `'div'` otherwise.\n   */\n  componentClass: _reactPropTypesLibElementType2['default']\n};\n\nfunction getDefaultComponent(children) {\n  if (!children) {\n    // FIXME: This is the old behavior. Is this right?\n    return 'div';\n  }\n\n  if (_utilsValidComponentChildren2['default'].some(children, function (child) {\n    return child.type !== _ListGroupItem2['default'] || child.props.href || child.props.onClick;\n  })) {\n    return 'div';\n  }\n\n  return 'ul';\n}\n\nvar ListGroup = function (_React$Component) {\n  _inherits(ListGroup, _React$Component);\n\n  function ListGroup() {\n    _classCallCheck(this, ListGroup);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  ListGroup.prototype.render = function render() {\n    var _props = this.props;\n    var children = _props.children;\n    var _props$componentClass = _props.componentClass;\n    var Component = _props$componentClass === undefined ? getDefaultComponent(children) : _props$componentClass;\n    var className = _props.className;\n\n    var props = _objectWithoutProperties(_props, ['children', 'componentClass', 'className']);\n\n    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);\n\n    var bsProps = _splitBsProps[0];\n    var elementProps = _splitBsProps[1];\n\n    var classes = _utilsBootstrapUtils.getClassSet(bsProps);\n\n    var useListItem = Component === 'ul' && _utilsValidComponentChildren2['default'].every(children, function (child) {\n      return child.type === _ListGroupItem2['default'];\n    });\n\n    return _react2['default'].createElement(Component, _extends({}, elementProps, {\n      className: _classnames2['default'](className, classes)\n    }), useListItem ? _utilsValidComponentChildren2['default'].map(children, function (child) {\n      return _react.cloneElement(child, {\n        listItem: true\n      });\n    }) : children);\n  };\n\n  return ListGroup;\n}(_react2['default'].Component);\n\nListGroup.propTypes = propTypes;\nexports['default'] = _utilsBootstrapUtils.bsClass('list-group', ListGroup);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
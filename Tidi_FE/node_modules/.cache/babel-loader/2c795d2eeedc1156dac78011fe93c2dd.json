{"ast":null,"code":"\"use strict\";\n\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar memMap = {};\nvar LocalDatastoreController = {\n  fromPinWithName: function fromPinWithName(name\n  /*: string*/\n  )\n  /*: Array<Object>*/\n  {\n    if (!memMap.hasOwnProperty(name)) {\n      return [];\n    }\n\n    var objects = JSON.parse(memMap[name]);\n    return objects;\n  },\n  pinWithName: function pinWithName(name\n  /*: string*/\n  , value\n  /*: any*/\n  ) {\n    var values = JSON.stringify(value);\n    memMap[name] = values;\n  },\n  unPinWithName: function unPinWithName(name\n  /*: string*/\n  ) {\n    delete memMap[name];\n  },\n  getAllContents: function getAllContents() {\n    var LDS = {};\n\n    for (var key in memMap) {\n      if (memMap.hasOwnProperty(key) && (0, _LocalDatastoreUtils.isLocalDatastoreKey)(key)) {\n        LDS[key] = JSON.parse(memMap[key]);\n      }\n    }\n\n    return LDS;\n  },\n  getRawStorage: function getRawStorage() {\n    return memMap;\n  },\n  clear: function clear() {\n    for (var key in memMap) {\n      if (memMap.hasOwnProperty(key) && (0, _LocalDatastoreUtils.isLocalDatastoreKey)(key)) {\n        delete memMap[key];\n      }\n    }\n  }\n};\nmodule.exports = LocalDatastoreController;","map":null,"metadata":{},"sourceType":"script"}
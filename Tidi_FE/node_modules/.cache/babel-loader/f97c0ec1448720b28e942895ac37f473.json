{"ast":null,"code":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Button = require('./Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Dropdown = require('./Dropdown');\n\nvar _Dropdown2 = _interopRequireDefault(_Dropdown);\n\nvar _SplitToggle = require('./SplitToggle');\n\nvar _SplitToggle2 = _interopRequireDefault(_SplitToggle);\n\nvar _utilsSplitComponentProps = require('./utils/splitComponentProps');\n\nvar _utilsSplitComponentProps2 = _interopRequireDefault(_utilsSplitComponentProps);\n\nvar propTypes = _extends({}, _Dropdown2['default'].propTypes, {\n  // Toggle props.\n  bsStyle: _react2['default'].PropTypes.string,\n  bsSize: _react2['default'].PropTypes.string,\n  href: _react2['default'].PropTypes.string,\n  onClick: _react2['default'].PropTypes.func,\n\n  /**\n   * The content of the split button.\n   */\n  title: _react2['default'].PropTypes.node.isRequired,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: _react2['default'].PropTypes.string,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: _react2['default'].PropTypes.node\n});\n\nvar SplitButton = function (_React$Component) {\n  _inherits(SplitButton, _React$Component);\n\n  function SplitButton() {\n    _classCallCheck(this, SplitButton);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  SplitButton.prototype.render = function render() {\n    var _props = this.props;\n    var bsSize = _props.bsSize;\n    var bsStyle = _props.bsStyle;\n    var title = _props.title;\n    var toggleLabel = _props.toggleLabel;\n    var children = _props.children;\n\n    var props = _objectWithoutProperties(_props, ['bsSize', 'bsStyle', 'title', 'toggleLabel', 'children']);\n\n    var _splitComponentProps = _utilsSplitComponentProps2['default'](props, _Dropdown2['default'].ControlledComponent);\n\n    var dropdownProps = _splitComponentProps[0];\n    var buttonProps = _splitComponentProps[1];\n    return _react2['default'].createElement(_Dropdown2['default'], _extends({}, dropdownProps, {\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), _react2['default'].createElement(_Button2['default'], _extends({}, buttonProps, {\n      disabled: props.disabled,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), title), _react2['default'].createElement(_SplitToggle2['default'], {\n      'aria-label': toggleLabel || title,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), _react2['default'].createElement(_Dropdown2['default'].Menu, null, children));\n  };\n\n  return SplitButton;\n}(_react2['default'].Component);\n\nSplitButton.propTypes = propTypes;\nSplitButton.Toggle = _SplitToggle2['default'];\nexports['default'] = SplitButton;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
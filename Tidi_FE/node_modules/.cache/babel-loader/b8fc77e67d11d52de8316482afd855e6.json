{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n// When there is no native storage interface, we default to an in-memory map\n\nvar memMap = {};\nvar StorageController = {\n  async: 0,\n  getItem: function getItem(path\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    if (memMap.hasOwnProperty(path)) {\n      return memMap[path];\n    }\n\n    return null;\n  },\n  setItem: function setItem(path\n  /*: string*/\n  , value\n  /*: string*/\n  ) {\n    memMap[path] = String(value);\n  },\n  removeItem: function removeItem(path\n  /*: string*/\n  ) {\n    delete memMap[path];\n  },\n  clear: function clear() {\n    for (var key in memMap) {\n      if (memMap.hasOwnProperty(key)) {\n        delete memMap[key];\n      }\n    }\n  }\n};\nmodule.exports = StorageController;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _utilsStyleConfig = require('./utils/StyleConfig');\n\nvar _utilsValidComponentChildren = require('./utils/ValidComponentChildren');\n\nvar _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);\n\nvar propTypes = {\n  /**\n   * Sets `id` on `<FormControl>` and `htmlFor` on `<FormGroup.Label>`.\n   */\n  controlId: _react2['default'].PropTypes.string,\n  validationState: _react2['default'].PropTypes.oneOf(['success', 'warning', 'error'])\n};\nvar childContextTypes = {\n  $bs_formGroup: _react2['default'].PropTypes.object.isRequired\n};\n\nvar FormGroup = function (_React$Component) {\n  _inherits(FormGroup, _React$Component);\n\n  function FormGroup() {\n    _classCallCheck(this, FormGroup);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  FormGroup.prototype.getChildContext = function getChildContext() {\n    var _props = this.props;\n    var controlId = _props.controlId;\n    var validationState = _props.validationState;\n    return {\n      $bs_formGroup: {\n        controlId: controlId,\n        validationState: validationState\n      }\n    };\n  };\n\n  FormGroup.prototype.hasFeedback = function hasFeedback(children) {\n    var _this = this;\n\n    return _utilsValidComponentChildren2['default'].some(children, function (child) {\n      return child.props.bsRole === 'feedback' || child.props.children && _this.hasFeedback(child.props.children);\n    });\n  };\n\n  FormGroup.prototype.render = function render() {\n    var _props2 = this.props;\n    var validationState = _props2.validationState;\n    var className = _props2.className;\n    var children = _props2.children;\n\n    var props = _objectWithoutProperties(_props2, ['validationState', 'className', 'children']);\n\n    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['controlId']);\n\n    var bsProps = _splitBsPropsAndOmit[0];\n    var elementProps = _splitBsPropsAndOmit[1];\n\n    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {\n      'has-feedback': this.hasFeedback(children)\n    });\n\n    if (validationState) {\n      classes['has-' + validationState] = true;\n    }\n\n    return _react2['default'].createElement('div', _extends({}, elementProps, {\n      className: _classnames2['default'](className, classes)\n    }), children);\n  };\n\n  return FormGroup;\n}(_react2['default'].Component);\n\nFormGroup.propTypes = propTypes;\nFormGroup.childContextTypes = childContextTypes;\nexports['default'] = _utilsBootstrapUtils.bsClass('form-group', _utilsBootstrapUtils.bsSizes([_utilsStyleConfig.Size.LARGE, _utilsStyleConfig.Size.SMALL], FormGroup));\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}